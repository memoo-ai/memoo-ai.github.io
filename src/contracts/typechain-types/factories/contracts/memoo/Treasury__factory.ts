/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Treasury,
  TreasuryInterface,
} from "../../../contracts/memoo/Treasury";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMOO_MANAGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenA",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenB",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountADesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountBDesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountBMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct MemooManageStructs.AddLiquidityParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountB",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "router",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountTokenDesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountTokenMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountETHMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct MemooManageStructs.AddLiquidityEthParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountETH",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defaultAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "address",
        name: "memooManage",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611141806100df6000396000f3fe6080604052600436106101015760003560e01c8063a217fddf1161008f578063d547741f11610061578063d547741f146102e9578063d6eb1bbf14610309578063e1f21c6714610339578063e63ab1e914610359578063e9bb84c21461038d57005b8063a217fddf14610281578063b1afb2fd14610296578063beabacc8146102a9578063c0c53b8b146102c957005b806336568abe116100d357806336568abe146101c85780634b4e9704146101e85780635c975abb1461020a57806391d14854146102415780639dc29fac1461026157005b806301ffc9a71461010a57806307e6f0681461013f578063248a9ca31461017a5780632f2ff15d146101a857005b3661010857005b005b34801561011657600080fd5b5061012a610125366004610d8e565b6103ad565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b5061015f61015a366004610e1c565b6103e4565b60408051938452602084019290925290820152606001610136565b34801561018657600080fd5b5061019a610195366004610eb1565b6105d9565b604051908152602001610136565b3480156101b457600080fd5b506101086101c3366004610eca565b6105fb565b3480156101d457600080fd5b506101086101e3366004610eca565b61061d565b3480156101f457600080fd5b5061019a6000805160206110ec83398151915281565b34801561021657600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661012a565b34801561024d57600080fd5b5061012a61025c366004610eca565b610655565b34801561026d57600080fd5b5061010861027c366004610efa565b61068d565b34801561028d57600080fd5b5061019a600081565b61015f6102a4366004610f26565b610704565b3480156102b557600080fd5b506101086102c4366004610fd2565b61088c565b3480156102d557600080fd5b506101086102e4366004611013565b61091f565b3480156102f557600080fd5b50610108610304366004610eca565b610a88565b34801561031557600080fd5b5061012a61032436600461105e565b60006020819052908152604090205460ff1681565b34801561034557600080fd5b50610108610354366004610fd2565b610aa4565b34801561036557600080fd5b5061019a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b34801561039957600080fd5b506101086103a8366004610efa565b610af1565b60006001600160e01b03198216637965db0b60e01b14806103de57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008060006000805160206110ec83398151915261040181610b3f565b60208501518551606087015160405163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af115801561045d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610481919061107b565b5060408581015186516080880151925163095ea7b360e01b81526001600160a01b0391821660048201526024810193909352169063095ea7b3906044016020604051808303816000875af11580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610501919061107b565b5084516020860151604080880151606089015160808a015160a08b015160c08c015160e08d01516101008e0151965162e8e33760e81b81526001600160a01b039889166004820152958816602487015260448601949094526064850192909252608484015260a4830152831660c482015260e481019190915291169063e8e3370090610104016060604051808303816000875af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca919061109d565b9350935093505b509193909250565b60009081526000805160206110cc833981519152602052604090206001015490565b610604826105d9565b61060d81610b3f565b6106178383610b4c565b50505050565b6001600160a01b03811633146106465760405163334bd91960e11b815260040160405180910390fd5b6106508282610bf1565b505050565b60009182526000805160206110cc833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000805160206110ec8339815191526106a581610b3f565b604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b1580156106e757600080fd5b505af11580156106fb573d6000803e3d6000fd5b50505050505050565b60008060006000805160206110ec83398151915261072181610b3f565b610729610c6d565b60208501518551604080880151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af1158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a9919061107b565b5084516080860151602087015160408089015160608a015160a08b015160c08c0151935163f305d71960e01b81526001600160a01b03958616600482015260248101939093526044830191909152606482018590528316608482015260a481019190915292169163f305d719919060c40160606040518083038185885af1158015610838573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061085d919061109d565b9350935093506105d160017f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f0055565b6000805160206110ec8339815191526108a481610b3f565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044015b6020604051808303816000875af11580156108f4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610918919061107b565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156109655750825b905060008267ffffffffffffffff1660011480156109825750303b155b905081158015610990575080155b156109ae5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109d857845460ff60401b1916600160401b1785555b6109e0610cb7565b6109e8610cc9565b6109f3600089610b4c565b50610a1e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a88610b4c565b50610a376000805160206110ec83398151915287610b4c565b508315610a7e57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610a91826105d9565b610a9a81610b3f565b6106178383610bf1565b6000805160206110ec833981519152610abc81610b3f565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b3906044016108d5565b6000805160206110ec833981519152610b0981610b3f565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610617573d6000803e3d6000fd5b610b498133610cd1565b50565b60006000805160206110cc833981519152610b678484610655565b610be7576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610b9d3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506103de565b60009150506103de565b60006000805160206110cc833981519152610c0c8484610655565b15610be7576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506103de565b7f9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00805460011901610cb157604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b610cbf610d12565b610cc7610d5b565b565b610cc7610d12565b610cdb8282610655565b610d0e5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610cc757604051631afcd79f60e31b815260040160405180910390fd5b610d63610d12565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b600060208284031215610da057600080fd5b81356001600160e01b031981168114610db857600080fd5b9392505050565b604051610120810167ffffffffffffffff81118282101715610df157634e487b7160e01b600052604160045260246000fd5b60405290565b6001600160a01b0381168114610b4957600080fd5b8035610e1781610df7565b919050565b60006101208284031215610e2f57600080fd5b610e37610dbf565b610e4083610e0c565b8152610e4e60208401610e0c565b6020820152610e5f60408401610e0c565b6040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c0820152610e9860e08401610e0c565b60e0820152610100928301359281019290925250919050565b600060208284031215610ec357600080fd5b5035919050565b60008060408385031215610edd57600080fd5b823591506020830135610eef81610df7565b809150509250929050565b60008060408385031215610f0d57600080fd5b8235610f1881610df7565b946020939093013593505050565b600060e08284031215610f3857600080fd5b60405160e0810181811067ffffffffffffffff82111715610f6957634e487b7160e01b600052604160045260246000fd5b6040528235610f7781610df7565b81526020830135610f8781610df7565b8060208301525060408301356040820152606083013560608201526080830135608082015260a0830135610fba81610df7565b60a082015260c0928301359281019290925250919050565b600080600060608486031215610fe757600080fd5b8335610ff281610df7565b9250602084013561100281610df7565b929592945050506040919091013590565b60008060006060848603121561102857600080fd5b833561103381610df7565b9250602084013561104381610df7565b9150604084013561105381610df7565b809150509250925092565b60006020828403121561107057600080fd5b8135610db881610df7565b60006020828403121561108d57600080fd5b81518015158114610db857600080fd5b6000806000606084860312156110b257600080fd5b835192506020840151915060408401519050925092509256fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268008680f626de6e162cab5bbd12f3f5bbcefa5088bd5542a0c0b765248ca787e53ba2646970667358221220b0fbf7345341294da39eef8dfdd7ce02cfe374b941ec7649f204ad0e67c52a6b64736f6c63430008140033";

type TreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasury__factory extends ContractFactory {
  constructor(...args: TreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Treasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Treasury__factory {
    return super.connect(runner) as Treasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryInterface {
    return new Interface(_abi) as TreasuryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Treasury {
    return new Contract(address, _abi, runner) as unknown as Treasury;
  }
}
