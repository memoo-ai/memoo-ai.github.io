/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquidityHolder,
  LiquidityHolderInterface,
} from "../../../contracts/memoo/LiquidityHolder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "ClaimToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMOO_MANAGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "claimToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defaultAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "address",
        name: "memooManage",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "liquidityLocker",
            type: "address",
          },
          {
            internalType: "address",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockDate",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "referral",
            type: "address",
          },
          {
            internalType: "bool",
            name: "feeInEth",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "withdrawer",
            type: "address",
          },
        ],
        internalType: "struct MemooManageStructs.LockLPTokenParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "lockLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611085806100df6000396000f3fe6080604052600436106101015760003560e01c80639dc29fac1161008f578063d547741f11610061578063d547741f146102db578063d6eb1bbf146102fb578063e1f21c671461032b578063e63ab1e91461034b578063e9bb84c21461037f57005b80639dc29fac14610266578063a217fddf14610286578063beabacc81461029b578063c0c53b8b146102bb57005b80632f2ff15d116100d35780632f2ff15d146101ad57806336568abe146101cd5780634b4e9704146101ed5780635c975abb1461020f57806391d148541461024657005b806301ffc9a71461010a57806311f94ce51461013f578063125bfb661461015f578063248a9ca31461017f57005b3661010857005b005b34801561011657600080fd5b5061012a610125366004610d8d565b61039f565b60405190151581526020015b60405180910390f35b34801561014b57600080fd5b5061010861015a366004610df5565b6103d6565b34801561016b57600080fd5b5061010861017a366004610ea5565b61051e565b34801561018b57600080fd5b5061019f61019a366004610ee6565b6105da565b604051908152602001610136565b3480156101b957600080fd5b506101086101c8366004610eff565b6105fc565b3480156101d957600080fd5b506101086101e8366004610eff565b61061e565b3480156101f957600080fd5b5061019f60008051602061103083398151915281565b34801561021b57600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661012a565b34801561025257600080fd5b5061012a610261366004610eff565b610656565b34801561027257600080fd5b50610108610281366004610f2f565b61068e565b34801561029257600080fd5b5061019f600081565b3480156102a757600080fd5b506101086102b6366004610ea5565b6106e8565b3480156102c757600080fd5b506101086102d6366004610f5b565b61077b565b3480156102e757600080fd5b506101086102f6366004610eff565b6108e4565b34801561030757600080fd5b5061012a610316366004610fa6565b60006020819052908152604090205460ff1681565b34801561033757600080fd5b50610108610346366004610ea5565b610900565b34801561035757600080fd5b5061019f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b34801561038b57600080fd5b5061010861039a366004610f2f565b61094d565b60006001600160e01b03198216637965db0b60e01b14806103d057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000805160206110308339815191526103ee8161099b565b60208201518251604080850151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af115801561044a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046e9190610fc3565b50815160208301516040808501516060860151608087015160a088015160c0890151945163457a0b7b60e11b81526001600160a01b03968716600482015260248101949094526044840192909252841660648301521515608482015290821660a4820152911690638af416f690670de0b6b3a76400009060c4016000604051808303818588803b15801561050157600080fd5b505af1158015610515573d6000803e3d6000fd5b50505050505050565b60006105298161099b565b6001600160a01b038416156105515761054c6001600160a01b03851684846109a8565b610589565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610587573d6000803e3d6000fd5b505b604080516001600160a01b038087168252851660208201529081018390527f7f94f93110499c9cb02fa9d1a5792b02f416866cce7d8752e9c5ec67cb8d8b299060600160405180910390a150505050565b6000908152600080516020611010833981519152602052604090206001015490565b610605826105da565b61060e8161099b565b61061883836109fa565b50505050565b6001600160a01b03811633146106475760405163334bd91960e11b815260040160405180910390fd5b6106518282610a9f565b505050565b6000918252600080516020611010833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000805160206110308339815191526106a68161099b565b604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561050157600080fd5b6000805160206110308339815191526107008161099b565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044015b6020604051808303816000875af1158015610750573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107749190610fc3565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107c15750825b905060008267ffffffffffffffff1660011480156107de5750303b155b9050811580156107ec575080155b1561080a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561083457845460ff60401b1916600160401b1785555b61083c610b1b565b610844610b2d565b61084f6000896109fa565b5061087a7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a886109fa565b50610893600080516020611030833981519152876109fa565b5083156108da57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6108ed826105da565b6108f68161099b565b6106188383610a9f565b6000805160206110308339815191526109188161099b565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b390604401610731565b6000805160206110308339815191526109658161099b565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610618573d6000803e3d6000fd5b6109a58133610b35565b50565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610651908490610b77565b6000600080516020611010833981519152610a158484610656565b610a95576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610a4b3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506103d0565b60009150506103d0565b6000600080516020611010833981519152610aba8484610656565b15610a95576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506103d0565b610b23610bda565b610b2b610c23565b565b610b2b610bda565b610b3f8282610656565b610b735760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044015b60405180910390fd5b5050565b6000610b8c6001600160a01b03841683610c56565b90508051600014158015610bb1575080806020019051810190610baf9190610fc3565b155b1561065157604051635274afe760e01b81526001600160a01b0384166004820152602401610b6a565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610b2b57604051631afcd79f60e31b815260040160405180910390fd5b610c2b610bda565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b6060610c6483836000610c6b565b9392505050565b606081471015610c905760405163cd78605960e01b8152306004820152602401610b6a565b600080856001600160a01b03168486604051610cac9190610fe0565b60006040518083038185875af1925050503d8060008114610ce9576040519150601f19603f3d011682016040523d82523d6000602084013e610cee565b606091505b5091509150610cfe868383610d08565b9695505050505050565b606082610d1d57610d1882610d64565b610c64565b8151158015610d3457506001600160a01b0384163b155b15610d5d57604051639996b31560e01b81526001600160a01b0385166004820152602401610b6a565b5080610c64565b805115610d745780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215610d9f57600080fd5b81356001600160e01b031981168114610c6457600080fd5b6001600160a01b03811681146109a557600080fd5b8035610dd781610db7565b919050565b80151581146109a557600080fd5b8035610dd781610ddc565b600060e08284031215610e0757600080fd5b60405160e0810181811067ffffffffffffffff82111715610e3857634e487b7160e01b600052604160045260246000fd5b604052610e4483610dcc565b8152610e5260208401610dcc565b60208201526040830135604082015260608301356060820152610e7760808401610dcc565b6080820152610e8860a08401610dea565b60a0820152610e9960c08401610dcc565b60c08201529392505050565b600080600060608486031215610eba57600080fd5b8335610ec581610db7565b92506020840135610ed581610db7565b929592945050506040919091013590565b600060208284031215610ef857600080fd5b5035919050565b60008060408385031215610f1257600080fd5b823591506020830135610f2481610db7565b809150509250929050565b60008060408385031215610f4257600080fd5b8235610f4d81610db7565b946020939093013593505050565b600080600060608486031215610f7057600080fd5b8335610f7b81610db7565b92506020840135610f8b81610db7565b91506040840135610f9b81610db7565b809150509250925092565b600060208284031215610fb857600080fd5b8135610c6481610db7565b600060208284031215610fd557600080fd5b8151610c6481610ddc565b6000825160005b818110156110015760208186018101518583015201610fe7565b50600092019182525091905056fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268008680f626de6e162cab5bbd12f3f5bbcefa5088bd5542a0c0b765248ca787e53ba26469706673582212200288620d9c6755af64f007ead1522920efae92bfbf14843c01608e2277afe79064736f6c63430008140033";

type LiquidityHolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityHolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityHolder__factory extends ContractFactory {
  constructor(...args: LiquidityHolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LiquidityHolder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquidityHolder__factory {
    return super.connect(runner) as LiquidityHolder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityHolderInterface {
    return new Interface(_abi) as LiquidityHolderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidityHolder {
    return new Contract(address, _abi, runner) as unknown as LiquidityHolder;
  }
}
