/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LiquidityHolder,
  LiquidityHolderInterface,
} from "../../../contracts/memoo/LiquidityHolder";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MEMOO_MANAGE_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorised",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defaultAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "address",
        name: "memooManage",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "liquidityLocker",
            type: "address",
          },
          {
            internalType: "address",
            name: "lpToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unlockDate",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "referral",
            type: "address",
          },
          {
            internalType: "bool",
            name: "feeInEth",
            type: "bool",
          },
          {
            internalType: "address payable",
            name: "withdrawer",
            type: "address",
          },
        ],
        internalType: "struct MemooManageStructs.LockLPTokenParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "lockLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b610d89806100df6000396000f3fe6080604052600436106100f65760003560e01c80639dc29fac1161008f578063d547741f11610061578063d547741f146102b0578063d6eb1bbf146102d0578063e1f21c6714610300578063e63ab1e914610320578063e9bb84c21461035457005b80639dc29fac1461023b578063a217fddf1461025b578063beabacc814610270578063c0c53b8b1461029057005b806336568abe116100c857806336568abe146101a25780634b4e9704146101c25780635c975abb146101e457806391d148541461021b57005b806301ffc9a7146100ff57806311f94ce514610134578063248a9ca3146101545780632f2ff15d1461018257005b366100fd57005b005b34801561010b57600080fd5b5061011f61011a366004610ab9565b610374565b60405190151581526020015b60405180910390f35b34801561014057600080fd5b506100fd61014f366004610b28565b6103ab565b34801561016057600080fd5b5061017461016f366004610bd8565b6104f3565b60405190815260200161012b565b34801561018e57600080fd5b506100fd61019d366004610bf1565b610515565b3480156101ae57600080fd5b506100fd6101bd366004610bf1565b610537565b3480156101ce57600080fd5b50610174600080516020610d3483398151915281565b3480156101f057600080fd5b507fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f033005460ff1661011f565b34801561022757600080fd5b5061011f610236366004610bf1565b61056f565b34801561024757600080fd5b506100fd610256366004610c21565b6105a7565b34801561026757600080fd5b50610174600081565b34801561027c57600080fd5b506100fd61028b366004610c4d565b610601565b34801561029c57600080fd5b506100fd6102ab366004610c8e565b610694565b3480156102bc57600080fd5b506100fd6102cb366004610bf1565b6107fd565b3480156102dc57600080fd5b5061011f6102eb366004610cd9565b60006020819052908152604090205460ff1681565b34801561030c57600080fd5b506100fd61031b366004610c4d565b610819565b34801561032c57600080fd5b506101747f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b34801561036057600080fd5b506100fd61036f366004610c21565b610866565b60006001600160e01b03198216637965db0b60e01b14806103a557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080516020610d348339815191526103c3816108b4565b60208201518251604080850151905163095ea7b360e01b81526001600160a01b039283166004820152602481019190915291169063095ea7b3906044016020604051808303816000875af115801561041f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104439190610cf6565b50815160208301516040808501516060860151608087015160a088015160c0890151945163457a0b7b60e11b81526001600160a01b03968716600482015260248101949094526044840192909252841660648301521515608482015290821660a4820152911690638af416f690670de0b6b3a76400009060c4016000604051808303818588803b1580156104d657600080fd5b505af11580156104ea573d6000803e3d6000fd5b50505050505050565b6000908152600080516020610d14833981519152602052604090206001015490565b61051e826104f3565b610527816108b4565b61053183836108c1565b50505050565b6001600160a01b03811633146105605760405163334bd91960e11b815260040160405180910390fd5b61056a8282610966565b505050565b6000918252600080516020610d14833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020610d348339815191526105bf816108b4565b604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b1580156104d657600080fd5b600080516020610d34833981519152610619816108b4565b60405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905285169063a9059cbb906044015b6020604051808303816000875af1158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610cf6565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156106da5750825b905060008267ffffffffffffffff1660011480156106f75750303b155b905081158015610705575080155b156107235760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561074d57845460ff60401b1916600160401b1785555b6107556109e2565b61075d6109f4565b6107686000896108c1565b506107937f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a886108c1565b506107ac600080516020610d34833981519152876108c1565b5083156107f357845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610806826104f3565b61080f816108b4565b6105318383610966565b600080516020610d34833981519152610831816108b4565b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820184905285169063095ea7b39060440161064a565b600080516020610d3483398151915261087e816108b4565b6040516001600160a01b0384169083156108fc029084906000818181858888f19350505050158015610531573d6000803e3d6000fd5b6108be81336109fc565b50565b6000600080516020610d148339815191526108dc848461056f565b61095c576000848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556109123390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019150506103a5565b60009150506103a5565b6000600080516020610d14833981519152610981848461056f565b1561095c576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a460019150506103a5565b6109ea610a3d565b6109f2610a86565b565b6109f2610a3d565b610a06828261056f565b610a395760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166109f257604051631afcd79f60e31b815260040160405180910390fd5b610a8e610a3d565b7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300805460ff19169055565b600060208284031215610acb57600080fd5b81356001600160e01b031981168114610ae357600080fd5b9392505050565b6001600160a01b03811681146108be57600080fd5b8035610b0a81610aea565b919050565b80151581146108be57600080fd5b8035610b0a81610b0f565b600060e08284031215610b3a57600080fd5b60405160e0810181811067ffffffffffffffff82111715610b6b57634e487b7160e01b600052604160045260246000fd5b604052610b7783610aff565b8152610b8560208401610aff565b60208201526040830135604082015260608301356060820152610baa60808401610aff565b6080820152610bbb60a08401610b1d565b60a0820152610bcc60c08401610aff565b60c08201529392505050565b600060208284031215610bea57600080fd5b5035919050565b60008060408385031215610c0457600080fd5b823591506020830135610c1681610aea565b809150509250929050565b60008060408385031215610c3457600080fd5b8235610c3f81610aea565b946020939093013593505050565b600080600060608486031215610c6257600080fd5b8335610c6d81610aea565b92506020840135610c7d81610aea565b929592945050506040919091013590565b600080600060608486031215610ca357600080fd5b8335610cae81610aea565b92506020840135610cbe81610aea565b91506040840135610cce81610aea565b809150509250925092565b600060208284031215610ceb57600080fd5b8135610ae381610aea565b600060208284031215610d0857600080fd5b8151610ae381610b0f56fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268008680f626de6e162cab5bbd12f3f5bbcefa5088bd5542a0c0b765248ca787e53ba264697066735822122064913d07db85e14ac54ea6fd0fd162d0979c1c1e0e72f6984a5e59ad67a034f364736f6c63430008140033";

type LiquidityHolderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LiquidityHolderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LiquidityHolder__factory extends ContractFactory {
  constructor(...args: LiquidityHolderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LiquidityHolder & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LiquidityHolder__factory {
    return super.connect(runner) as LiquidityHolder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidityHolderInterface {
    return new Interface(_abi) as LiquidityHolderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LiquidityHolder {
    return new Contract(address, _abi, runner) as unknown as LiquidityHolder;
  }
}
