import { useState, forwardRef, useImperativeHandle } from 'react';

export const IconTwitter = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        id="Layer_2"
        data-name="Layer 2"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 36.05 33.76"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <g id="Design">
          <path
            style={{ fill: hovered ? hoverColor : color, strokeWidth: 0 }}
            d="M.08,0h.18C3.73,0,7.19,0,10.66,0c.11,0,.18.03.24.12,2.97,3.98,5.94,7.95,8.91,11.92.04.05.07.1.12.16.09-.1.18-.19.27-.28,2.01-2.17,4.01-4.34,6.02-6.51,1.64-1.77,3.28-3.54,4.92-5.31.06-.07.13-.1.22-.1.96,0,1.92,0,2.88,0h.16c-4.36,4.71-8.7,9.4-13.04,14.09,4.9,6.55,9.79,13.09,14.7,19.65-.06,0-.11.01-.15.01-3.49,0-6.98,0-10.47,0-.09,0-.14-.04-.2-.11-3.25-4.34-6.5-8.69-9.74-13.03-.02-.03-.05-.06-.08-.11-.1.1-.19.2-.27.29-2,2.16-4,4.32-6,6.48-1.97,2.13-3.94,4.25-5.91,6.38-.04.05-.12.09-.18.09-.98,0-1.96,0-2.94,0-.03,0-.06,0-.12,0,4.68-5.05,9.33-10.08,14-15.12C9.36,12.42,4.73,6.22.08,0ZM31.39,31.43c-.03-.05-.05-.08-.08-.11-.82-1.09-1.63-2.18-2.45-3.27-3.02-4.03-6.03-8.07-9.05-12.1-3.37-4.5-6.73-9-10.09-13.5-.05-.07-.1-.1-.2-.1-1.55,0-3.1,0-4.65,0-.04,0-.08,0-.14,0,.04.06.07.09.09.13.38.5.76,1.01,1.13,1.51,2.76,3.69,5.52,7.38,8.28,11.08,4.05,5.42,8.1,10.83,12.15,16.25.06.08.12.11.22.11,1.54,0,3.08,0,4.62,0h.15Z"
          />
        </g>
      </svg>
    );
  },
);

export const IconTelegram = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        id="Layer_2"
        data-name="Layer 2"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 40.24 33.89"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <g id="Design">
          <g id="b3W9pD.tif">
            <path
              style={{ fill: hovered ? hoverColor : color, strokeWidth: 0 }}
              d="M31.97,33.89c-.47-.08-.91-.26-1.33-.49-.26-.15-.49-.35-.73-.53-.6-.45-1.2-.9-1.8-1.35-.9-.68-1.81-1.36-2.71-2.04-.85-.64-1.7-1.28-2.55-1.92-.42-.32-.84-.63-1.26-.95-.07-.05-.11-.05-.17,0-.7.67-1.41,1.34-2.11,2.01-.55.52-1.1,1.05-1.65,1.57-.46.44-.92.89-1.4,1.32-.4.36-.87.5-1.4.29-.36-.14-.59-.42-.78-.74-.04-.08-.06-.15-.05-.24.07-.77.12-1.54.19-2.31.06-.8.13-1.6.2-2.4.07-.8.13-1.6.19-2.41,0-.08.05-.12.1-.17.5-.45.99-.9,1.49-1.35.95-.86,1.9-1.73,2.85-2.59.83-.75,1.65-1.5,2.48-2.25.6-.55,1.2-1.09,1.8-1.64.62-.56,1.24-1.12,1.85-1.68.88-.8,1.76-1.6,2.64-2.4.91-.83,1.83-1.67,2.74-2.5.58-.53,1.16-1.05,1.74-1.58.46-.41.91-.82,1.37-1.24.14-.13.27-.26.34-.45.05-.16-.01-.28-.17-.32-.17-.04-.33-.02-.5.01-.37.08-.7.26-1.02.46-.51.32-1.02.64-1.53.96-.56.35-1.13.7-1.69,1.05-.87.54-1.75,1.08-2.62,1.63-.82.51-1.63,1.02-2.45,1.52-.57.35-1.14.7-1.7,1.06-.76.47-1.52.95-2.28,1.42-.88.55-1.76,1.09-2.64,1.64-1.02.63-2.03,1.27-3.05,1.9-.92.57-1.84,1.14-2.76,1.71-.45.28-.9.56-1.35.84-.05.03-.1.04-.16.02-.96-.31-1.92-.62-2.88-.92-.87-.28-1.74-.55-2.61-.83-.87-.28-1.74-.56-2.61-.84-.25-.08-.5-.16-.75-.24-.36-.11-.68-.28-.94-.57-.32-.35-.35-.82-.1-1.22.24-.38.58-.64.97-.85.37-.19.78-.32,1.16-.47.64-.25,1.29-.5,1.93-.75.99-.38,1.98-.77,2.97-1.15.82-.32,1.64-.64,2.46-.96.78-.3,1.57-.61,2.35-.91.82-.32,1.65-.64,2.47-.96.62-.24,1.25-.48,1.87-.72.63-.24,1.26-.49,1.89-.74.79-.31,1.59-.61,2.38-.92.71-.28,1.43-.55,2.14-.83.75-.29,1.5-.58,2.24-.87.72-.28,1.43-.56,2.15-.84.62-.24,1.25-.48,1.87-.72.71-.28,1.43-.55,2.14-.83.99-.38,1.98-.77,2.97-1.15.79-.31,1.58-.61,2.37-.92.36-.14.72-.29,1.09-.4.43-.12.87-.2,1.32-.15.62.08,1.07.48,1.23,1.09.04.14.06.29.1.43v.9c-.04.26-.08.52-.13.78-.09.44-.18.88-.27,1.32-.16.78-.33,1.56-.49,2.33-.12.59-.25,1.18-.37,1.77-.21,1.01-.42,2.02-.63,3.03-.15.74-.31,1.48-.47,2.22-.16.75-.32,1.5-.48,2.25-.24,1.16-.48,2.32-.73,3.49-.19.93-.39,1.86-.59,2.78-.2.94-.39,1.88-.59,2.81-.16.78-.33,1.56-.49,2.33-.16.78-.33,1.56-.49,2.33-.09.44-.19.88-.28,1.32-.1.49-.2.97-.4,1.43-.17.39-.4.75-.76,1-.19.13-.41.2-.63.25h-.47Z"
            />
          </g>
        </g>
      </svg>
    );
  },
);
export const IconGame = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#1F3B4F', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="20"
        height="15"
        viewBox="0 0 20 15"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M0 11.2774C0 10.8642 0 10.4511 0 10.038C0.00786344 9.98072 0.0235903 9.92346 0.025163 9.86621C0.0361718 9.4376 0.0802071 9.01054 0.135251 8.58502C0.478097 5.94682 1.4799 3.55464 2.97238 1.34969C3.01799 1.28315 3.06831 1.22435 3.14695 1.19031C4.38937 0.641006 5.68212 0.247983 7.02205 0.00659931C7.14787 -0.0166107 7.22808 0.0205253 7.28312 0.131933C7.3995 0.365581 7.5316 0.589944 7.63383 0.828234C7.7046 0.995346 7.80525 1.0232 7.97353 0.999988C8.6718 0.900959 9.37637 0.857633 10.0809 0.862275C10.7478 0.868465 11.4146 0.908695 12.0751 1.00618C12.2104 1.02629 12.2953 0.992251 12.3535 0.860728C12.4588 0.623986 12.5878 0.396528 12.6963 0.159785C12.7655 0.0127886 12.863 -0.0166107 13.0203 0.0127886C14.3225 0.251078 15.579 0.63327 16.7916 1.15936C16.9001 1.20578 16.9772 1.27696 17.0416 1.3729C17.5764 2.16358 18.056 2.98367 18.4634 3.84399C19.7294 6.51778 20.1917 9.32465 19.9291 12.2553C19.9197 12.3559 19.8725 12.4193 19.7923 12.475C18.3313 13.5133 16.7428 14.3009 15.0255 14.8362C14.8839 14.8796 14.8006 14.8564 14.7156 14.7357C14.4121 14.3102 14.1306 13.8723 13.8774 13.4173C13.782 13.244 13.8276 13.1203 14.0142 13.046C14.4483 12.8711 14.8713 12.6746 15.2802 12.4487C15.3919 12.3868 15.3982 12.345 15.3007 12.2522C15.1356 12.0959 14.9861 12.0789 14.7707 12.1748C13.4858 12.7412 12.1349 13.0661 10.7305 13.1466C8.81649 13.258 6.97802 12.9253 5.22132 12.1702C5.01845 12.0835 4.87691 12.0866 4.71964 12.2383C4.5891 12.3636 4.57967 12.3683 4.73851 12.4565C5.16156 12.6886 5.59877 12.8943 6.05013 13.0707C6.25301 13.1497 6.25458 13.1558 6.15865 13.3415C5.90387 13.8274 5.60192 14.2839 5.28738 14.7326C5.19773 14.8595 5.11281 14.8811 4.96498 14.8347C3.2995 14.3133 1.75827 13.5535 0.328692 12.5648C0.138397 12.4332 0.0613348 12.2862 0.0581895 12.0681C0.0518987 11.8035 0.0204449 11.5404 0 11.2774ZM15.0899 8.16569C15.0899 7.75255 15.0192 7.4663 14.8367 7.14445C14.269 6.13714 12.9873 5.91587 12.1632 6.68335C11.3517 7.43999 11.3296 8.8264 12.1176 9.60781C12.7655 10.25 13.6871 10.3041 14.3917 9.72541C14.8792 9.3231 15.0899 8.78772 15.0884 8.16724L15.0899 8.16569ZM8.46264 8.1595C8.46893 7.85777 8.40759 7.56997 8.28492 7.29454C7.76908 6.13404 6.30333 5.86171 5.45094 6.7669C4.67403 7.59163 4.74165 8.96412 5.59877 9.70993C6.22942 10.2592 7.15101 10.2608 7.78009 9.71148C8.25189 9.29834 8.45634 8.7707 8.46421 8.1595H8.46264Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconFacebook = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#1F3B4F', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="11"
        height="19"
        viewBox="0 0 11 19"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M6.7181 14.8197C6.7181 16.1434 6.7181 17.4671 6.7181 18.7908C6.7181 18.9969 6.71602 18.999 6.51629 19C5.4136 19 4.31091 19 3.20822 19C3.00745 19 3.00328 18.9958 3.00328 18.794C3.00328 16.1611 3.00328 13.5283 3.00328 10.8955C3.00328 10.7324 2.91972 10.6509 2.75258 10.6509C1.89955 10.6509 1.04757 10.6478 0.194547 10.654C0.0489087 10.654 -0.0010244 10.6135 1.58753e-05 10.4626C0.00521724 9.43753 0.00521724 8.41353 1.58753e-05 7.3885C1.58753e-05 7.24697 0.0457879 7.20118 0.186225 7.20222C1.05381 7.20639 1.9214 7.2043 2.78899 7.2043C3.00328 7.2043 3.00432 7.2043 3.00432 6.99513C3.00432 6.12724 2.99392 5.25934 3.00849 4.39144C3.02305 3.52147 3.20302 2.68791 3.65658 1.9324C4.30259 0.854297 5.28668 0.287146 6.50172 0.0810985C7.27153 -0.0489819 8.04341 -7.16724e-05 8.81529 0.0717327C9.18147 0.105033 9.54452 0.152903 9.90966 0.199732C10.124 0.226789 10.1302 0.231992 10.1302 0.441161C10.1302 1.28929 10.1271 2.13741 10.1333 2.98553C10.1344 3.13643 10.0834 3.17909 9.93775 3.17805C9.42801 3.17181 8.91828 3.16661 8.40854 3.18222C7.99972 3.1947 7.6169 3.30918 7.29441 3.57974C6.8887 3.92003 6.73474 4.38 6.7233 4.88575C6.70562 5.60067 6.72122 6.31768 6.71602 7.0326C6.71498 7.171 6.76595 7.20847 6.89599 7.20847C7.85616 7.2043 8.81737 7.20639 9.77754 7.20639C10.0022 7.20639 10.0022 7.21159 9.96895 7.42804C9.81603 8.42082 9.66415 9.41359 9.51331 10.4064C9.47586 10.652 9.48003 10.653 9.23556 10.653C8.4616 10.653 7.68659 10.653 6.91263 10.653C6.71914 10.653 6.7181 10.653 6.7181 10.8507C6.7181 12.1744 6.7181 13.4981 6.7181 14.8218V14.8197Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconDownload = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#1F3B4F', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="20"
        height="20"
        viewBox="0 0 20 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M9.98578 19.993C6.75563 19.9302 4.11528 18.6301 2.1049 16.114C0.706922 14.3647 0.0493455 12.3217 0.000403698 10.0841C-0.0159102 9.31612 0.463468 8.77525 1.21265 8.78529C1.8238 8.79282 2.386 9.0551 2.45126 9.95739C2.53785 11.1621 2.72483 12.3392 3.29456 13.4235C4.27214 15.2858 5.75295 16.5758 7.77336 17.1694C9.89166 17.7931 11.9585 17.5923 13.8635 16.4453C16.0445 15.1314 17.238 13.1624 17.4827 10.625C17.5053 10.3966 17.5303 10.1682 17.5479 9.93982C17.6182 9.04757 18.2155 8.77651 18.8003 8.78655C19.5483 8.7991 20.0101 9.3111 19.9925 10.0703C19.9649 11.255 19.7792 12.4145 19.35 13.5251C18.7978 14.957 17.9683 16.2044 16.8439 17.2522C15.722 18.2976 14.4545 19.1057 12.9737 19.5312C12.0024 19.811 11.0161 20.0482 9.98578 19.9917V19.993Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M8.70763 9.41015C8.79296 9.24325 8.77037 9.08387 8.77037 8.92952C8.77163 6.44729 8.77037 3.96381 8.77037 1.48158C8.77037 1.18793 8.78292 0.898044 8.91343 0.625727C9.14559 0.140073 9.68897 -0.0494192 10.1119 0.0108169C10.8084 0.109955 11.1284 0.446273 11.2112 1.09005C11.23 1.23436 11.2262 1.38119 11.2262 1.52801C11.2262 4.01024 11.2262 6.49372 11.2288 8.97595C11.2288 9.1165 11.1848 9.2696 11.3028 9.40513C11.5274 9.27964 11.673 9.07258 11.8474 8.89689C12.3544 8.38614 12.8514 7.86535 13.3609 7.35585C13.849 6.86643 14.4752 6.79239 15.0437 7.08102C15.5658 7.34456 15.7276 8.18033 15.4729 8.67477C15.3825 8.85046 15.2633 9.00858 15.1215 9.15038C13.7562 10.5145 12.3958 11.8836 11.028 13.2452C10.6477 13.6229 10.206 13.8488 9.6463 13.6806C9.4016 13.6066 9.19202 13.4698 9.01383 13.2929C7.61083 11.8936 6.20783 10.4919 4.81111 9.08513C4.37189 8.64214 4.27149 7.98833 4.54255 7.50519C4.94789 6.7811 5.95685 6.69074 6.60689 7.33326C7.20674 7.92809 7.78903 8.54049 8.38135 9.14285C8.47421 9.23823 8.55578 9.34991 8.70512 9.41141L8.70763 9.41015Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconMore = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#1F3B4F', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="18"
        height="5"
        viewBox="0 0 18 5"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M0.730469 2.53516C0.730469 1.96484 0.878906 1.52734 1.17578 1.22266C1.47266 0.917969 1.90234 0.765625 2.46484 0.765625C3.03516 0.765625 3.46875 0.925781 3.76562 1.24609C4.0625 1.55859 4.21094 1.98828 4.21094 2.53516C4.21094 3.08984 4.05859 3.53125 3.75391 3.85938C3.45703 4.17969 3.02734 4.33984 2.46484 4.33984C1.90234 4.33984 1.47266 4.17969 1.17578 3.85938C0.878906 3.53906 0.730469 3.09766 0.730469 2.53516ZM7.33984 2.53516C7.33984 1.96484 7.48828 1.52734 7.78516 1.22266C8.08203 0.917969 8.51172 0.765625 9.07422 0.765625C9.64453 0.765625 10.0781 0.925781 10.375 1.24609C10.6719 1.55859 10.8203 1.98828 10.8203 2.53516C10.8203 3.08984 10.668 3.53125 10.3633 3.85938C10.0664 4.17969 9.63672 4.33984 9.07422 4.33984C8.51172 4.33984 8.08203 4.17969 7.78516 3.85938C7.48828 3.53906 7.33984 3.09766 7.33984 2.53516ZM13.9492 2.53516C13.9492 1.96484 14.0977 1.52734 14.3945 1.22266C14.6914 0.917969 15.1211 0.765625 15.6836 0.765625C16.2539 0.765625 16.6875 0.925781 16.9844 1.24609C17.2812 1.55859 17.4297 1.98828 17.4297 2.53516C17.4297 3.08984 17.2773 3.53125 16.9727 3.85938C16.6758 4.17969 16.2461 4.33984 15.6836 4.33984C15.1211 4.33984 14.6914 4.17969 14.3945 3.85938C14.0977 3.53906 13.9492 3.09766 13.9492 2.53516Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconVector = ({
  className,
  color = '#07E993',
  hoverColor = '#B53BFF',
}: {
  className: string;
  hoverColor?: string;
  color?: string;
}) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="48"
      height="34"
      viewBox="0 0 48 34"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
    >
      <path
        d="M2.58204 16.6277C2.71495 18.7308 3.42379 20.4508 5.45131 21.488C9.30827 23.4608 13.1314 25.5013 16.9597 27.5288C17.2958 27.7061 17.46 27.6774 17.6893 27.3568C19.3676 24.9958 22.3255 24.7325 24.3765 26.7627C24.7022 27.0858 24.9498 27.1692 25.385 26.9373C29.659 24.6413 33.9433 22.361 38.2355 20.099C38.6681 19.8696 38.8166 19.6533 38.7176 19.1504C38.3059 17.102 39.5698 15.0172 41.5843 14.3474C43.6561 13.6594 45.8478 14.6028 46.8224 16.6016C47.7346 18.4702 47.1117 20.8026 45.3761 21.9493C43.9089 22.9187 42.3765 23.0021 40.8311 22.1525C40.4454 21.9389 40.1483 21.9076 39.7574 22.1213C35.2307 24.5866 30.6962 27.0415 26.1564 29.486C25.7551 29.7023 25.5648 29.9811 25.4945 30.4372C25.1765 32.4543 23.5634 33.8537 21.4421 33.9919C19.5892 34.1143 17.7363 32.8426 17.1916 31.0079C17.0404 30.4971 16.7668 30.2157 16.3133 29.9837C12.2036 27.8859 8.10167 25.7724 4.00234 23.6536C1.61259 22.4184 0.551921 20.2996 0.108891 17.7718C-0.107411 16.5469 0.0020431 15.356 0.405982 14.191C0.830769 12.9636 1.66731 12.1088 2.83222 11.5303C9.51675 8.21536 16.1883 4.89524 22.865 1.58034C23.6207 1.20507 24.3843 0.840221 25.1322 0.446707C26.2555 -0.142262 27.3839 -0.144868 28.5019 0.415434C32.3797 2.35173 36.3122 4.17076 40.2343 6.01064C41.6468 6.67257 43.0567 7.33972 44.4718 7.99645C44.9409 8.21536 45.3787 8.46293 45.3995 9.0519C45.4204 9.6539 44.9669 9.90669 44.5161 10.1386C39.919 12.5232 35.3219 14.9051 30.7274 17.2923C27.939 18.7386 25.1427 20.1693 22.375 21.6574C21.1997 22.2907 20.1573 22.3063 18.9533 21.6574C14.3406 19.1686 9.68094 16.7606 5.04476 14.3187C3.85901 13.6933 3.14234 13.9852 2.7358 15.2726C2.59507 15.7182 2.6081 16.169 2.58464 16.6303L2.58204 16.6277ZM41.6338 18.4441C41.639 19.1869 42.2097 19.7498 42.9551 19.7393C43.6926 19.7289 44.2841 19.1426 44.2789 18.4233C44.2737 17.6727 43.6483 17.0577 42.9081 17.076C42.2175 17.0916 41.6312 17.7223 41.6338 18.4441ZM21.2701 31.034C21.9841 31.034 22.5965 30.4346 22.607 29.7257C22.62 28.9934 21.9763 28.3524 21.2518 28.368C20.5638 28.3836 19.9227 29.0377 19.9306 29.7127C19.9384 30.4085 20.5743 31.034 21.2701 31.034Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};

export const IconProfile = ({ className, hoverColor = '#B53BFF' }: { className: string; hoverColor?: string }) => {
  const [hovered, setHovered] = useState(false);

  return (
    <div onMouseOver={() => setHovered(true)} onMouseLeave={() => setHovered(false)} className="cursor-pointer">
      {!hovered ? (
        <svg xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 46 46" fill="none">
          <rect x="0.5" y="0.5" width="45" height="45" rx="6.5" fill="#1F3B4F" stroke="#07D788" />
          <path
            d="M7.9 23.7778V23.7707V23.7673V23.7639V23.7605V23.7571V23.7537V23.7503V23.7469V23.7435V23.7401V23.7367V23.7333V23.7299V23.7265V23.7231V23.7197V23.7163V23.7129V23.7095V23.7061V23.7027V23.6993V23.6959V23.6925V23.6891V23.6857V23.6823V23.6789V23.6755V23.6721V23.6687V23.6653V23.6619V23.6585V23.6551V23.6517V23.6483V23.6449V23.6415V23.6381V23.6347V23.6313V23.6279V23.6245V23.6211V23.6177V23.6143V23.6109V23.6075V23.6041V23.6007V23.5973V23.5939V23.5905V23.5871V23.5837V23.5803V23.5769V23.5735V23.5701V23.5667V23.5633V23.5599V23.5566V23.5532V23.5498V23.5464V23.543V23.5396V23.5362V23.5328V23.5294V23.526V23.5226V23.5192V23.5158V23.5124V23.509V23.5056V23.5022V23.4988V23.4954V23.492V23.4886V23.4852V23.4818V23.4784V23.475V23.4716V23.4682V23.4648V23.4614V23.458V23.4546V23.4512V23.4478V23.4444V23.441V23.4376V23.4342V23.4308V23.4274V23.424V23.4205V23.4171V23.4137V23.4103V23.4069V23.4035V23.4001V23.3967V23.3933V23.3899V23.3865V23.3831V23.3797V23.3763V23.3729V23.3695V23.3661V23.3627V23.3593V23.3559V23.3525V23.3491V23.3457V23.3423V23.3389V23.3355V23.3321V23.3287V23.3253V23.3219V23.3185V23.3151V23.3117V23.3083V23.3049V23.3015V23.2981V23.2947V23.2913V23.2879V23.2845V23.2811V23.2777V23.2743V23.2709V23.2675V23.2641V23.2607V23.2572V23.2538V23.2504V23.247V23.2436V23.2402V23.2368V23.2334V23.23V23.2266V23.2232V23.2198V23.2164V23.213V23.2096V23.2062V23.2028V23.1994V23.196V23.1926V23.1892V23.1858V23.1824V23.1789V23.1755V23.1721V23.1687V23.1653V23.1619V23.1585V23.1551V23.1517V23.1483V23.1449V23.1415V23.1381V23.1347V23.1313V23.1279V23.1245V23.121V23.1176V23.1142V23.1108V23.1074V23.104V23.1006V23.0972V23.0938V23.0904V23.087V23.0836V23.0802V23.0768V23.0733V23.0699V23.0665V23.0631V23.0597V23.0563V23.0529V23.0495V23.0461V23.0427V23.0393V23.0359V23.0324V23.029V23.0256V23.0222V23.0188V23.0154V23.012V23.0086V23.0052V23.0018V22.9984V22.9949V22.9915V22.9881V22.9847V22.9813V22.9779V22.9745V22.9711V22.9677V22.9642V22.9608V22.9574V22.954V22.9506V22.9472V22.9438V22.9404V22.937V22.9335V22.9301V22.9267V22.9233V22.9199V22.9165V22.9131V22.9097V22.9062V22.9028V22.8994V22.896V22.8926V22.8892V22.8858V22.8824V22.8789V22.8755V22.8721V22.8687V22.8653V22.8619V22.8585V22.855V22.8516V22.8482V22.8448V22.8414V22.838V22.8345V22.8311V22.8277V22.8243V22.8209V22.8175V22.8141V22.8106V22.8072V22.8038V22.8004V22.797V22.7936V22.7901V22.7867V22.7833V22.7799V22.7765V22.7731V22.7696V22.7662V22.7628V22.7594V22.756V22.7525V22.7491V22.7457V22.7423V22.7389V22.7355V22.732V22.7286V22.7252V22.7218V22.7184V22.7149V22.7115V22.7081V22.7047V22.7013V22.6978V22.6944V22.691V22.6876V22.6841V22.6807V22.6773V22.6739V22.6705V22.667V22.6636V22.6602V22.6568V22.6534V22.6499V22.6465V22.6431V22.6397V22.6362V22.6328V22.6294V22.626V22.6225V22.6191V22.6157V22.6123V22.6088V22.6054V22.602V22.5986V22.5951V22.5917V22.5883V22.5849V22.5814V22.578V22.5746V22.5712V22.5677V22.5643V22.5609V22.5575V22.554V22.5506V22.5472V22.5438V22.5403V22.5369V22.5335V22.53V22.5266V22.5232V22.5198V22.5163V22.5129V22.5095V22.506V22.5026V22.4992V22.4958V22.4923V22.4889V22.4855V22.482V22.4786V22.4752V22.4717V22.4683V22.4649V22.4615V22.458V22.4546V22.4512V22.4477V22.4443V22.4409V22.4374V22.434V22.4306V22.4271V22.4237V22.4203V22.4168V22.4134V22.41V22.4065V22.4031V22.3997V22.3962V22.3928V22.3894V22.3859V22.3825V22.379V22.3756V22.3722V22.3687V22.3653V22.3619V22.3584V22.355V22.3516V22.3481V22.3447V22.3412V22.3378V22.3344V22.3309V22.3275V22.3241V22.3206V22.3172V22.3137V22.3103V22.3069V22.3034V22.3V22.2965V22.2931V22.2897V22.2862V22.2828V22.2793V22.2759V22.2725V22.269V22.2656V22.2621V22.2587V22.2552V22.2518V22.2484V22.2449V22.2415V22.238V22.2346V22.2311V22.2277V22.2243V22.2208V22.2174V22.2139V22.2105V22.207V22.2036V22.2001V22.1967V22.1932V22.1898V22.1864V22.1829V22.1795V22.176V22.1726V22.1691V22.1657V22.1622V22.1588V22.1553V22.1519V22.1484V22.145V22.1415V22.1381V22.1346V22.1312V22.1277V22.1243V22.1208V22.1174V22.1139V22.1105V22.107V22.1036V22.1001V22.0967V22.0932V22.0898V22.0863V22.0829V22.0794V22.076V22.0725V22.069V22.0656V22.0621V22.0587V22.0552V22.0518V22.0483V22.0449V22.0414V22.038V22.0345V22.031V22.0276V22.0241V22.0207V22.0097L7.90238 21.999C7.92202 21.9106 7.94091 21.8157 7.95037 21.7317C7.95045 21.731 7.95053 21.7303 7.95061 21.7296L8.05 21.7407C8.14 20.4007 8.42 19.0907 8.88 17.8307L7.9 23.7778ZM7.9 23.7778L7.90101 23.7848C7.93065 23.9923 7.95645 24.204 7.98243 24.4173C8.02549 24.7707 8.06907 25.1283 8.13153 25.4781C8.73555 28.9508 10.3872 31.8509 13.0137 34.1756L13.014 34.1758C15.2588 36.1488 17.867 37.337 20.8262 37.7497L20.8273 37.7499C21.0231 37.775 21.2212 37.7975 21.4186 37.82L21.4187 37.82C21.6163 37.8425 21.8131 37.865 22.0073 37.8899L22.0072 37.8907H22.02H23.77H23.7771L23.7841 37.8897C23.9917 37.86 24.2034 37.8342 24.4166 37.8082C24.7698 37.7652 25.1273 37.7216 25.477 37.6592C28.6278 37.1156 31.3166 35.6956 33.561 33.4311L33.561 33.431C35.6952 31.2767 37.0444 28.6888 37.6281 25.7099L37.6282 25.7097C39.1383 17.9274 34.2056 10.2162 26.4937 8.33352L26.4937 8.33352C19.0244 6.51149 11.4035 10.5784 8.78603 17.7965L7.9 23.7778ZM18.1764 14.893C15.9114 17.3486 15.8012 21.7884 19.1579 24.3259C15.9982 25.655 13.8998 27.9399 12.9149 31.2569C8.84125 26.5197 8.54128 18.7422 13.7402 13.6219L13.7402 13.6219C19.03 8.41151 27.385 8.59001 32.4567 14.0587L32.4568 14.0588C37.3957 19.361 36.6803 26.908 32.8681 31.2757C32.4267 29.6947 31.6742 28.2904 30.5743 27.0738C29.4823 25.8551 28.1738 24.9566 26.6232 24.3422C28.3732 22.9892 29.2897 21.2348 29.26 19.0293L29.26 19.029C29.2295 17.1692 28.466 15.6135 27.0868 14.3762L27.02 14.4507L27.0868 14.3762C24.5246 12.0784 20.5321 12.3241 18.1764 14.893ZM18.1764 14.893C18.1764 14.8929 18.1765 14.8929 18.1765 14.8929L18.25 14.9607L18.1763 14.8931C18.1763 14.893 18.1764 14.893 18.1764 14.893ZM24.4981 35.8314L24.4971 35.8315C24.0256 35.8926 23.554 35.923 23.2421 35.9432C23.2165 35.9448 23.192 35.9464 23.1687 35.9479L23.162 35.9413L23.1215 35.9407C19.8022 35.891 17.0642 34.9278 14.6727 33.0028L14.6728 33.0026L14.6681 32.9993C14.6505 32.9867 14.6275 32.9593 14.6099 32.9232C14.5922 32.8867 14.5877 32.8574 14.5891 32.8438C14.9355 30.4711 16.0809 28.5852 17.9993 27.1712C19.4421 26.1138 21.0714 25.5807 22.86 25.5807H22.8603C26.1809 25.5708 29.1157 27.4679 30.4994 30.433L30.4996 30.4335C30.8552 31.1841 31.0919 31.9733 31.1906 32.7914C31.1935 32.823 31.1872 32.8701 31.1706 32.9178C31.1536 32.9665 31.1316 32.9999 31.1157 33.0141C29.1803 34.5819 26.9783 35.5338 24.4981 35.8314ZM22.9 23.5807L22.8996 23.5807C20.4756 23.5904 18.4993 21.6156 18.47 19.1795C18.4407 16.7659 20.455 14.7407 22.89 14.7407L22.8904 14.7407C25.3244 14.7309 27.32 16.7454 27.32 19.1707C27.31 21.5958 25.3344 23.5807 22.9 23.5807Z"
            fill="#07D788"
            stroke="#07E993"
            strokeWidth="0.2"
          />
        </svg>
      ) : (
        <svg xmlns="http://www.w3.org/2000/svg" width="46" height="46" viewBox="0 0 46 46" fill="none">
          <rect width="46" height="46" rx="7" fill="#07E993" />
          <path
            d="M7.9 23.7778V23.7707V23.7673V23.7639V23.7605V23.7571V23.7537V23.7503V23.7469V23.7435V23.7401V23.7367V23.7333V23.7299V23.7265V23.7231V23.7197V23.7163V23.7129V23.7095V23.7061V23.7027V23.6993V23.6959V23.6925V23.6891V23.6857V23.6823V23.6789V23.6755V23.6721V23.6687V23.6653V23.6619V23.6585V23.6551V23.6517V23.6483V23.6449V23.6415V23.6381V23.6347V23.6313V23.6279V23.6245V23.6211V23.6177V23.6143V23.6109V23.6075V23.6041V23.6007V23.5973V23.5939V23.5905V23.5871V23.5837V23.5803V23.5769V23.5735V23.5701V23.5667V23.5633V23.5599V23.5566V23.5532V23.5498V23.5464V23.543V23.5396V23.5362V23.5328V23.5294V23.526V23.5226V23.5192V23.5158V23.5124V23.509V23.5056V23.5022V23.4988V23.4954V23.492V23.4886V23.4852V23.4818V23.4784V23.475V23.4716V23.4682V23.4648V23.4614V23.458V23.4546V23.4512V23.4478V23.4444V23.441V23.4376V23.4342V23.4308V23.4274V23.424V23.4205V23.4171V23.4137V23.4103V23.4069V23.4035V23.4001V23.3967V23.3933V23.3899V23.3865V23.3831V23.3797V23.3763V23.3729V23.3695V23.3661V23.3627V23.3593V23.3559V23.3525V23.3491V23.3457V23.3423V23.3389V23.3355V23.3321V23.3287V23.3253V23.3219V23.3185V23.3151V23.3117V23.3083V23.3049V23.3015V23.2981V23.2947V23.2913V23.2879V23.2845V23.2811V23.2777V23.2743V23.2709V23.2675V23.2641V23.2607V23.2572V23.2538V23.2504V23.247V23.2436V23.2402V23.2368V23.2334V23.23V23.2266V23.2232V23.2198V23.2164V23.213V23.2096V23.2062V23.2028V23.1994V23.196V23.1926V23.1892V23.1858V23.1824V23.1789V23.1755V23.1721V23.1687V23.1653V23.1619V23.1585V23.1551V23.1517V23.1483V23.1449V23.1415V23.1381V23.1347V23.1313V23.1279V23.1245V23.121V23.1176V23.1142V23.1108V23.1074V23.104V23.1006V23.0972V23.0938V23.0904V23.087V23.0836V23.0802V23.0768V23.0733V23.0699V23.0665V23.0631V23.0597V23.0563V23.0529V23.0495V23.0461V23.0427V23.0393V23.0359V23.0324V23.029V23.0256V23.0222V23.0188V23.0154V23.012V23.0086V23.0052V23.0018V22.9984V22.9949V22.9915V22.9881V22.9847V22.9813V22.9779V22.9745V22.9711V22.9677V22.9642V22.9608V22.9574V22.954V22.9506V22.9472V22.9438V22.9404V22.937V22.9335V22.9301V22.9267V22.9233V22.9199V22.9165V22.9131V22.9097V22.9062V22.9028V22.8994V22.896V22.8926V22.8892V22.8858V22.8824V22.8789V22.8755V22.8721V22.8687V22.8653V22.8619V22.8585V22.855V22.8516V22.8482V22.8448V22.8414V22.838V22.8345V22.8311V22.8277V22.8243V22.8209V22.8175V22.8141V22.8106V22.8072V22.8038V22.8004V22.797V22.7936V22.7901V22.7867V22.7833V22.7799V22.7765V22.7731V22.7696V22.7662V22.7628V22.7594V22.756V22.7525V22.7491V22.7457V22.7423V22.7389V22.7355V22.732V22.7286V22.7252V22.7218V22.7184V22.7149V22.7115V22.7081V22.7047V22.7013V22.6978V22.6944V22.691V22.6876V22.6841V22.6807V22.6773V22.6739V22.6705V22.667V22.6636V22.6602V22.6568V22.6534V22.6499V22.6465V22.6431V22.6397V22.6362V22.6328V22.6294V22.626V22.6225V22.6191V22.6157V22.6123V22.6088V22.6054V22.602V22.5986V22.5951V22.5917V22.5883V22.5849V22.5814V22.578V22.5746V22.5712V22.5677V22.5643V22.5609V22.5575V22.554V22.5506V22.5472V22.5438V22.5403V22.5369V22.5335V22.53V22.5266V22.5232V22.5198V22.5163V22.5129V22.5095V22.506V22.5026V22.4992V22.4958V22.4923V22.4889V22.4855V22.482V22.4786V22.4752V22.4717V22.4683V22.4649V22.4615V22.458V22.4546V22.4512V22.4477V22.4443V22.4409V22.4374V22.434V22.4306V22.4271V22.4237V22.4203V22.4168V22.4134V22.41V22.4065V22.4031V22.3997V22.3962V22.3928V22.3894V22.3859V22.3825V22.379V22.3756V22.3722V22.3687V22.3653V22.3619V22.3584V22.355V22.3516V22.3481V22.3447V22.3412V22.3378V22.3344V22.3309V22.3275V22.3241V22.3206V22.3172V22.3137V22.3103V22.3069V22.3034V22.3V22.2965V22.2931V22.2897V22.2862V22.2828V22.2793V22.2759V22.2725V22.269V22.2656V22.2621V22.2587V22.2552V22.2518V22.2484V22.2449V22.2415V22.238V22.2346V22.2311V22.2277V22.2243V22.2208V22.2174V22.2139V22.2105V22.207V22.2036V22.2001V22.1967V22.1932V22.1898V22.1864V22.1829V22.1795V22.176V22.1726V22.1691V22.1657V22.1622V22.1588V22.1553V22.1519V22.1484V22.145V22.1415V22.1381V22.1346V22.1312V22.1277V22.1243V22.1208V22.1174V22.1139V22.1105V22.107V22.1036V22.1001V22.0967V22.0932V22.0898V22.0863V22.0829V22.0794V22.076V22.0725V22.069V22.0656V22.0621V22.0587V22.0552V22.0518V22.0483V22.0449V22.0414V22.038V22.0345V22.031V22.0276V22.0241V22.0207V22.0097L7.90238 21.999C7.92202 21.9106 7.94091 21.8157 7.95037 21.7317C7.95045 21.731 7.95053 21.7303 7.95061 21.7296L8.05 21.7407C8.14 20.4007 8.42 19.0907 8.88 17.8307L7.9 23.7778ZM7.9 23.7778L7.90101 23.7848C7.93065 23.9923 7.95645 24.204 7.98243 24.4173C8.02549 24.7707 8.06907 25.1283 8.13153 25.4781C8.73555 28.9508 10.3872 31.8509 13.0137 34.1756L13.014 34.1758C15.2588 36.1488 17.867 37.337 20.8262 37.7497L20.8273 37.7499C21.0231 37.775 21.2212 37.7975 21.4186 37.82L21.4187 37.82C21.6163 37.8425 21.8131 37.865 22.0073 37.8899L22.0072 37.8907H22.02H23.77H23.7771L23.7841 37.8897C23.9917 37.86 24.2034 37.8342 24.4166 37.8082C24.7698 37.7652 25.1273 37.7216 25.477 37.6592C28.6278 37.1156 31.3166 35.6956 33.561 33.4311L33.561 33.431C35.6952 31.2767 37.0444 28.6888 37.6281 25.7099L37.6282 25.7097C39.1383 17.9274 34.2056 10.2162 26.4937 8.33352L26.4937 8.33352C19.0244 6.51149 11.4035 10.5784 8.78603 17.7965L7.9 23.7778ZM18.1764 14.893C15.9114 17.3486 15.8012 21.7884 19.1579 24.3259C15.9982 25.655 13.8998 27.9399 12.9149 31.2569C8.84125 26.5197 8.54128 18.7422 13.7402 13.6219L13.7402 13.6219C19.03 8.41151 27.385 8.59001 32.4567 14.0587L32.4568 14.0588C37.3957 19.361 36.6803 26.908 32.8681 31.2757C32.4267 29.6947 31.6742 28.2904 30.5743 27.0738C29.4823 25.8551 28.1738 24.9566 26.6232 24.3422C28.3732 22.9892 29.2897 21.2348 29.26 19.0293L29.26 19.029C29.2295 17.1692 28.466 15.6135 27.0868 14.3762L27.02 14.4507L27.0868 14.3762C24.5246 12.0784 20.5321 12.3241 18.1764 14.893ZM18.1764 14.893C18.1764 14.8929 18.1765 14.8929 18.1765 14.8929L18.25 14.9607L18.1763 14.8931C18.1763 14.893 18.1764 14.893 18.1764 14.893ZM24.4981 35.8314L24.4971 35.8315C24.0256 35.8926 23.554 35.923 23.2421 35.9432C23.2165 35.9448 23.192 35.9464 23.1687 35.9479L23.162 35.9413L23.1215 35.9407C19.8022 35.891 17.0642 34.9278 14.6727 33.0028L14.6728 33.0026L14.6681 32.9993C14.6505 32.9867 14.6275 32.9593 14.6099 32.9232C14.5922 32.8867 14.5877 32.8574 14.5891 32.8438C14.9355 30.4711 16.0809 28.5852 17.9993 27.1712C19.4421 26.1138 21.0714 25.5807 22.86 25.5807H22.8603C26.1809 25.5708 29.1157 27.4679 30.4994 30.433L30.4996 30.4335C30.8552 31.1841 31.0919 31.9733 31.1906 32.7914C31.1935 32.823 31.1872 32.8701 31.1706 32.9178C31.1536 32.9665 31.1316 32.9999 31.1157 33.0141C29.1803 34.5819 26.9783 35.5338 24.4981 35.8314ZM22.9 23.5807L22.8996 23.5807C20.4756 23.5904 18.4993 21.6156 18.47 19.1795C18.4407 16.7659 20.455 14.7407 22.89 14.7407L22.8904 14.7407C25.3244 14.7309 27.32 16.7454 27.32 19.1707C27.31 21.5958 25.3344 23.5807 22.9 23.5807Z"
            fill="#1F3B4F"
            stroke="black"
            strokeWidth="0.2"
          />
        </svg>
      )}
    </div>
  );
};

interface IconProps {
  className?: string;
  hoverColor?: string;
  [key: string]: any;
  color?: string;
  iconColor?: string;
}
export const IconSwipeDark = ({ className, hoverColor, ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <circle cx="20" cy="20" r="19.5" fill={hovered ? '#07E993' : '#1F3B4F'} stroke="#07E993" />
      <path
        d="M22.5718 31C22.2208 30.7955 21.8067 30.6579 21.5319 30.375C18.5124 27.2922 15.5097 24.1903 12.5107 21.0827C11.8236 20.3717 11.8329 19.5059 12.5162 18.8007C15.5116 15.7141 18.5106 12.6332 21.5115 9.55233C21.9423 9.11084 22.4511 8.86811 23.0658 9.07452C23.6024 9.25418 23.8958 9.67273 23.9831 10.2308C24.0778 10.8309 23.7473 11.2648 23.3703 11.6547C20.9971 14.0991 18.6183 16.5359 16.2469 18.9804C15.9461 19.29 15.4763 19.6244 15.4596 19.9665C15.4447 20.2647 15.9479 20.603 16.2413 20.905C18.6201 23.3666 21.0045 25.8206 23.387 28.2784C23.7919 28.697 24.102 29.1576 23.9534 29.8036C23.7937 30.5012 23.322 30.8968 22.5718 31Z"
        fill={hovered ? '#1F3B4F' : '#07E993'}
      />
    </svg>
  );
};
export const IconSwipeLight = ({ className, hoverColor, ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <circle cx="20" cy="20" r="20" fill="white" />
      <path
        d="M22.5718 31.001C22.2208 30.7965 21.8067 30.6589 21.5319 30.376C18.5124 27.2932 15.5097 24.1913 12.5107 21.0837C11.8236 20.3727 11.8329 19.5069 12.5162 18.8017C15.5116 15.7151 18.5106 12.6342 21.5115 9.5533C21.9423 9.11181 22.4511 8.86909 23.0658 9.0755C23.6024 9.25515 23.8958 9.67371 23.9831 10.2318C24.0778 10.8319 23.7473 11.2658 23.3703 11.6556C20.9971 14.1001 18.6183 16.5369 16.2469 18.9813C15.9461 19.291 15.4763 19.6254 15.4596 19.9675C15.4447 20.2657 15.9479 20.604 16.2413 20.9059C18.6201 23.3676 21.0045 25.8216 23.387 28.2794C23.7919 28.698 24.102 29.1586 23.9534 29.8046C23.7937 30.5021 23.322 30.8978 22.5718 31.001Z"
        fill={hovered ? '#B53BFF' : 'black'}
      />
    </svg>
  );
};
export const IconDraft = ({ className, ...rest }: IconProps) => {
  return (
    <svg width="17" height="20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...rest}>
      <path
        d="M15.1254 0.30127C10.5631 0.30127 6.00078 0.30127 1.43934 0.30127C0.725202 0.30127 0.398813 0.629437 0.398813 1.34714C0.398813 4.20993 0.398813 7.07184 0.398813 9.93463C0.398813 12.8045 0.396145 15.6745 0.405038 18.5444C0.405038 18.7507 0.447727 18.9801 0.546444 19.1571C0.796349 19.6045 1.33796 19.6889 1.82087 19.3875C3.91439 18.0801 6.00701 16.7728 8.09697 15.4601C8.23481 15.3739 8.32731 15.3703 8.46782 15.4583C10.5444 16.7648 12.6237 18.065 14.7066 19.3599C14.8586 19.4551 15.0392 19.5387 15.2135 19.5582C15.7729 19.6187 16.1642 19.1989 16.1642 18.5666C16.1642 12.8268 16.1642 7.08696 16.1642 1.34714C16.1651 0.631216 15.8369 0.30127 15.1254 0.30127Z"
        fill="#7D83B5"
      />
    </svg>
  );
};
export const IconDraftBtn = ({
  className,
  hoverBgColor = '#1F3B4F',
  hoverColor = '#07E993',
  bgColor = '#07E993',
  color = '#A005FE',
  ...rest
}: IconProps) => {
  const [hovered, setHovered] = useState(false);

  return (
    <svg
      width="39"
      height="39"
      viewBox="0 0 39 39"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      style={{
        border: hovered ? `1px solid #fff` : 'none',
      }}
      {...rest}
    >
      <rect y="0.280762" width="38.5284" height="38.5284" rx="7" fill={hovered ? hoverBgColor : bgColor} />
      <path
        d="M19.3025 14.7708C21.5693 14.7708 23.8349 14.7732 26.1017 14.7673C26.3029 14.7673 26.4089 14.7863 26.3922 15.0387C26.2756 16.7761 26.1755 18.5158 26.0684 20.2543C25.9243 22.5953 25.7815 24.9363 25.6338 27.2774C25.5696 28.2931 24.8457 28.9921 23.8313 28.9944C20.8026 29.0016 17.775 29.0016 14.7462 28.9944C13.7128 28.9921 13.0211 28.3109 12.9532 27.2452C12.7913 24.6875 12.6389 22.1285 12.4782 19.5696C12.3853 18.0883 12.2877 16.607 12.1794 15.1257C12.1603 14.8613 12.2103 14.7625 12.5044 14.7637C14.7712 14.7756 17.0368 14.7708 19.3036 14.7708H19.3025Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M19.2929 13.5718C16.9975 13.5718 14.7009 13.5718 12.4055 13.5718C11.9222 13.5718 11.4793 13.4682 11.1852 13.0395C10.7709 12.437 11.059 11.2986 11.9758 11.2593C13.0723 11.2129 14.1699 11.2069 15.2676 11.2117C15.6046 11.2129 15.8117 11.1379 15.9415 10.8009C16.1582 10.2365 16.6189 10.0031 17.2071 10.0019C18.5929 10.0007 19.9787 9.99831 21.3633 10.0019C21.9741 10.0031 22.4396 10.2531 22.6622 10.8461C22.7693 11.1307 22.9372 11.2177 23.242 11.2105C24.1718 11.1879 25.1028 11.1819 26.0327 11.2129C26.3874 11.2248 26.7494 11.3189 27.0875 11.4344C27.4637 11.563 27.5971 12.1917 27.5732 12.5037C27.5328 13.0217 27.2375 13.3384 26.7649 13.4872C26.5625 13.5515 26.3374 13.567 26.122 13.567C23.8456 13.573 21.5693 13.5706 19.2929 13.5706V13.5718Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconQueue = ({ className = '', color = '#B53BFF', ...rest }: IconProps) => {
  return (
    <svg width="21" height="20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...rest}>
      <path
        d="M4.66072 2.21922C4.77138 1.41201 4.42543 0.286807 5.72186 0.340388C6.86686 0.388145 6.56634 1.41317 6.66419 2.17379H14.3111C14.4171 1.41084 14.0945 0.359025 15.3781 0.322916C16.0304 0.304279 16.2028 0.680511 16.3204 2.21922C16.5906 2.21922 16.869 2.21339 17.1486 2.21922C18.9237 2.25882 20.1188 3.44808 20.134 5.22208C20.1491 7.05548 20.1421 8.89005 20.1363 10.7234C20.134 11.5458 19.7985 11.8883 18.9762 11.8929C17.1998 11.9022 15.4247 11.8906 13.6484 11.8976C11.1126 11.9069 9.54475 13.4805 9.53426 16.0221C9.53077 16.813 9.53892 17.6051 9.53193 18.396C9.52378 19.2626 9.19647 19.5981 8.34849 19.6016C6.8622 19.6074 5.37591 19.6109 3.88962 19.6016C2.0271 19.5888 0.848321 18.4193 0.843662 16.5603C0.833178 12.8166 0.834343 9.07176 0.841332 5.32691C0.844826 3.41081 2.03293 2.23785 3.95602 2.22038C4.18199 2.21805 4.40913 2.22038 4.66072 2.22038V2.21922Z"
        fill={color}
      />
      <path
        d="M17.8855 16.6917C17.4289 16.27 17.0166 15.9194 16.6404 15.5362C16.1791 15.0668 16.1674 14.5054 16.5751 14.1035C16.9863 13.697 17.5326 13.718 18.0113 14.1839C18.6054 14.7616 19.1913 15.3499 19.7702 15.9439C20.2664 16.4541 20.2792 16.9643 19.7946 17.4675C19.2064 18.079 18.6054 18.6789 17.9939 19.2683C17.5361 19.7097 16.9374 19.7155 16.553 19.3137C16.1616 18.9048 16.1942 18.3516 16.6567 17.8786C17.0201 17.5071 17.4045 17.1553 17.8855 16.6929V16.6917Z"
        fill={color}
      />
      <path
        d="M13.091 16.7223C12.5866 16.2552 12.1777 15.9046 11.8003 15.5202C11.3414 15.0531 11.3379 14.4835 11.7573 14.0863C12.1603 13.7043 12.6984 13.7194 13.1515 14.1574C13.7747 14.7607 14.3897 15.3734 14.9907 15.9978C15.438 16.4625 15.4427 16.9657 14.9966 17.4316C14.3839 18.0723 13.7561 18.7001 13.1154 19.3128C12.7054 19.7042 12.1346 19.7007 11.7607 19.3454C11.3566 18.9633 11.3484 18.4089 11.7549 17.9511C11.9471 17.7356 12.1544 17.533 12.3664 17.3361C12.5645 17.1532 12.7765 16.9867 13.0898 16.7211L13.091 16.7223Z"
        fill={color}
      />
    </svg>
  );
};

export const IconLaunched = ({ className = '', color = '#B53BFF', ...rest }: IconProps) => {
  return (
    <svg width="20" height="20" fill="none" xmlns="http://www.w3.org/2000/svg" className={className} {...rest}>
      <path
        d="M8.94302 14.6756C8.49089 14.8236 8.10766 14.9365 7.73289 15.0737C7.24811 15.2509 6.80927 15.1562 6.44297 14.8248C6.02468 14.4474 5.6354 14.0359 5.24734 13.6281C4.87257 13.2336 4.86169 12.7627 5.01885 12.2735C5.13249 11.9215 5.25701 11.5732 5.39362 11.1763C5.24734 11.1641 5.14458 11.1496 5.04061 11.1496C3.88488 11.1483 2.72794 11.1617 1.5722 11.1386C1.31591 11.1338 1.0306 11.0476 0.815414 10.908C0.487795 10.6956 0.395916 10.2065 0.624403 9.81563C1.32921 8.60672 2.05094 7.40751 2.79684 6.22409C3.31306 5.40359 4.13271 5.13777 5.05391 5.12806C5.94851 5.11835 6.84433 5.11956 7.73893 5.12927C7.95533 5.1317 8.09073 5.05402 8.208 4.8756C9.13404 3.48219 10.2354 2.2575 11.7308 1.46977C12.9833 0.80705 14.3131 0.334894 15.7493 0.322757C16.7007 0.315474 17.6545 0.390728 18.606 0.446561C19.0883 0.474478 19.5199 0.871379 19.5997 1.36174C20.0603 4.16433 19.7025 6.8152 18.0644 9.19903C17.4031 10.1616 16.5556 10.9711 15.5885 11.6108C15.0421 11.9725 14.9115 12.3803 14.9405 12.9811C14.9804 13.7968 14.9647 14.6173 14.9187 15.4329C14.8656 16.3967 14.336 17.0885 13.5357 17.5752C12.5142 18.1967 11.4661 18.7757 10.4566 19.4165C9.65145 19.9275 8.90071 19.3473 8.93094 18.5463C8.97446 17.3871 8.94182 16.2243 8.94182 15.0627C8.94182 14.9547 8.94182 14.8479 8.94182 14.6743L8.94302 14.6756ZM16.4952 5.105C16.5024 4.30149 15.7795 3.57565 14.9756 3.58051C14.1692 3.58536 13.4729 4.27235 13.4608 5.07587C13.4487 5.91822 14.1051 6.59915 14.9453 6.61492C15.7952 6.6307 16.4867 5.95706 16.4952 5.10621V5.105Z"
        fill={color}
      />
    </svg>
  );
};

export const IconIMO = ({ className = '', color = '#B53BFF', ...rest }: IconProps) => {
  return (
    <svg
      width="16"
      height="20"
      viewBox="0 0 16 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <path
        d="M9.60579 9.98814C10.4136 10.7955 11.1789 11.5799 11.9649 12.3426C13.2413 13.5815 13.9183 15.0742 13.9146 16.8582C13.9146 17.1144 13.9873 17.2341 14.2477 17.2909C14.8556 17.4238 15.185 17.9218 15.1111 18.5455C15.0348 19.1933 14.6146 19.6018 13.98 19.603C11.5531 19.6103 9.12622 19.6067 6.70053 19.6067C5.08986 19.6067 3.47798 19.6006 1.86731 19.6091C1.36715 19.6115 1.01111 19.3952 0.79918 18.9649C0.584827 18.5261 0.600571 18.062 0.921494 17.6909C1.09104 17.4939 1.37321 17.3755 1.62631 17.2764C1.79344 17.2111 1.86368 17.1579 1.86368 16.9706C1.86973 15.1515 2.51642 13.6057 3.83766 12.3402C4.56427 11.644 5.2594 10.9164 5.98239 10.2178C6.17131 10.0341 6.17858 9.92287 5.98844 9.73552C5.14193 8.90396 4.29421 8.07361 3.47677 7.21425C2.37231 6.05152 1.8879 4.63134 1.86489 3.04558C1.86125 2.81835 1.81645 2.69869 1.56213 2.66847C1.00263 2.60321 0.586039 2.00129 0.679288 1.43201C0.801602 0.679015 1.20245 0.338172 2.009 0.327294C2.71382 0.317624 3.41864 0.324876 4.12346 0.324876C7.31573 0.324876 10.5068 0.322459 13.6991 0.327294C14.1702 0.327294 14.6352 0.394979 14.9198 0.839767C15.2904 1.41992 15.202 2.52585 14.1714 2.68056C13.9425 2.71561 13.9159 2.85823 13.9171 3.04799C13.9268 4.24336 13.6458 5.365 12.9773 6.35973C12.677 6.80693 12.3161 7.2203 11.9419 7.6119C11.2601 8.32381 10.5492 9.0067 9.85163 9.7041C9.76807 9.7875 9.69662 9.88298 9.60579 9.98693V9.98814ZM11.4962 17.222C11.6076 16.3554 11.3751 15.3063 10.8192 14.6874C9.93398 13.7036 8.98696 12.7753 8.06778 11.8205C7.92004 11.667 7.81347 11.7334 7.69236 11.8567C6.98391 12.5698 6.28394 13.2914 5.55732 13.984C4.74593 14.7575 4.31965 15.6942 4.25546 16.8062C4.23366 17.1845 4.25909 17.2208 4.63815 17.2208C6.82042 17.2208 9.0027 17.2208 11.1862 17.2208H11.4974L11.4962 17.222Z"
        fill={color}
      />
    </svg>
  );
};
export const IconEdit = ({
  className,
  hoverBgColor = '#1F3B4F',
  hoverColor = '#07E993',
  bgColor = '#07E993',
  color = '#A005FE',
  ...rest
}: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <rect x="0.892578" y="0.548828" width="38.5737" height="38.5737" rx="7" fill={hovered ? hoverBgColor : bgColor} />
      <path
        d="M26.5027 18.4523C26.1694 18.7576 25.8617 19.0191 25.5759 19.3037C22.6604 22.2204 19.7474 25.1383 16.8392 28.0623C16.6507 28.2508 16.4464 28.3566 16.1885 28.4065C14.4151 28.7507 12.643 29.1059 10.8709 29.4537C10.7748 29.4732 10.675 29.4696 10.5352 29.4793C10.6106 29.0743 10.675 28.7021 10.7492 28.3311C11.0642 26.7682 11.3768 25.204 11.704 23.6435C11.732 23.5085 11.839 23.3759 11.94 23.2737C14.8433 20.3595 17.7515 17.4489 20.6584 14.5371C20.9223 14.2719 21.1875 14.008 21.449 13.7404C21.5463 13.6407 21.6327 13.5896 21.7531 13.7088C23.3112 15.2656 24.8704 16.8213 26.5027 18.4511V18.4523Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M29.8623 15.0211C29.6458 15.2376 29.3928 15.493 29.1374 15.746C28.5998 16.28 28.0573 16.8078 27.5258 17.3479C27.3786 17.4963 27.2801 17.5388 27.1098 17.3673C25.6296 15.8761 24.1421 14.3923 22.6557 12.9084C22.5463 12.7989 22.4672 12.7138 22.6205 12.5629C23.3843 11.8125 24.1384 11.0535 24.8986 10.2982C24.9472 10.2495 25.0129 10.2167 25.0482 10.1924C26.6464 11.7955 28.2361 13.3888 29.8623 15.0199V15.0211Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconLock = ({ color = '#A005FE', bgColor = '#07E993', className, ...rest }: IconProps) => {
  return (
    <svg
      width="50"
      height="50"
      viewBox="0 0 50 50"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <circle cx="25" cy="25" r="25" fill={bgColor} />
      <path
        d="M27.2726 21.4969C27.2726 20.9076 27.2651 20.3572 27.2739 19.8068C27.2914 18.6821 27.5397 17.6189 28.1327 16.6497C28.9878 15.2517 30.2517 14.4443 31.8365 14.1133C34.7453 13.5052 37.6855 15.4085 38.3425 18.306C38.5957 19.4206 38.528 20.5465 38.4866 21.6687C38.4641 22.3069 37.9149 22.7332 37.2705 22.7294C36.6185 22.7256 36.1132 22.3081 36.0668 21.6612C36.0204 21.028 36.0467 20.3911 36.0317 19.7554C36.0079 18.7448 35.7258 17.8408 34.8932 17.1926C33.8727 16.3977 32.748 16.2711 31.5732 16.7814C30.4987 17.2478 29.8968 18.1054 29.8053 19.2689C29.7489 19.9911 29.7953 20.7221 29.7953 21.4982C30.1464 21.4982 30.5175 21.4919 30.8886 21.4982C31.9456 21.5207 32.7668 21.9684 33.2357 22.9275C33.4037 23.2711 33.4915 23.6861 33.4953 24.0697C33.5178 26.5197 33.5153 28.9696 33.504 31.4208C33.4965 32.9003 32.4145 33.9873 30.9262 33.9911C26.8175 34.0023 22.7088 34.0036 18.6013 33.9911C17.078 33.986 16.0235 32.9178 16.0122 31.3669C15.9947 28.9583 15.9972 26.5497 16.0122 24.1412C16.021 22.5601 17.1043 21.5007 18.6828 21.4982C21.4048 21.4944 24.1256 21.4982 26.8476 21.4982C26.9717 21.4982 27.0959 21.4982 27.2726 21.4982V21.4969Z"
        fill={color}
      />
    </svg>
  );
};
export const IconClose = ({ className, color = '#07E993', hoverColor = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="15"
      height="15"
      viewBox="0 0 15 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path d="M1 1.30078L14 13.6994" stroke={hovered ? hoverColor : color} strokeWidth="2" strokeMiterlimit="10" />
      <path d="M1.30078 14L13.6994 1" stroke={hovered ? hoverColor : color} strokeWidth="2" strokeMiterlimit="10" />
    </svg>
  );
};
export const IconAdd = ({ className, ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="38"
      height="38"
      viewBox="0 0 38 38"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <circle
        cx="19.168"
        cy="19.1689"
        r="17.8047"
        fill={hovered ? '#07E993' : '#1F3B4F'}
        stroke="#07E993"
        strokeWidth="2"
      />
      <line x1="11" y1="19" x2="27" y2="19" stroke={hovered ? '#000000' : '#07E993'} strokeWidth="2" />
      <line x1="19" y1="27" x2="19" y2="11" stroke={hovered ? '#000000' : '#07E993'} strokeWidth="2" />
    </svg>
  );
};
export const IconAddress = ({ className, ...rest }: IconProps) => {
  return (
    <svg
      width="20"
      height="18"
      viewBox="0 0 20 18"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <path
        d="M3.39552 12.3116C2.82092 12.3116 2.36107 11.8576 2.35938 11.2889C2.35769 10.7532 2.82092 10.3119 3.38792 10.3076C3.94312 10.3034 4.38018 10.7397 4.37428 11.2932C4.36837 11.8796 3.9524 12.3124 3.39467 12.3124L3.39552 12.3116Z"
        fill="#B53BFF"
      />
      <path
        d="M9.99009 17.4981C7.57121 17.4981 5.15234 17.5006 2.73222 17.4981C1.21071 17.4944 -0.00624241 16.4717 2.40927e-05 14.8048C0.016317 10.7478 0.00127739 6.69091 0.0075439 2.63398C0.0087972 1.34809 0.724432 0.415634 1.95016 0.0922822C2.22839 0.0195907 2.52793 0.00455113 2.8187 0.00455113C7.57247 -0.000462077 12.3275 -0.00422198 17.0825 0.00956433C17.4547 0.00956433 17.8533 0.0885223 18.1942 0.236412C18.6667 0.4407 18.7532 0.921967 18.7231 1.37817C18.6867 1.92711 18.3534 2.3006 17.8708 2.40838C17.639 2.45977 17.3971 2.48985 17.1602 2.48985C12.5832 2.49486 8.00486 2.49361 3.4278 2.49486C3.28242 2.49486 3.13453 2.49862 2.99291 2.5287C2.66955 2.59638 2.47028 2.85205 2.48908 3.15034C2.51039 3.48873 2.71969 3.71307 3.06059 3.74565C3.20597 3.75944 3.3526 3.75568 3.49799 3.75568C8.10637 3.75568 12.716 3.75568 17.3244 3.75568C18.3659 3.75568 19.1993 4.15674 19.6906 5.09671C19.8636 5.42633 19.9764 5.82989 19.9801 6.19962C20.0027 9.15114 20.0077 12.1027 19.9864 15.0529C19.9764 16.4353 18.8133 17.4931 17.372 17.4956C14.9118 17.4994 12.4503 17.4956 9.99009 17.4956V17.4981ZM16.2553 11.8645C16.9772 11.8696 17.5525 11.3494 17.5111 10.6526C17.4648 9.88182 17.0963 9.38927 16.2729 9.36796C15.5685 9.34916 15.0547 9.80035 15.0221 10.6338C14.9945 11.3469 15.5272 11.8583 16.2553 11.8633V11.8645Z"
        fill="#B53BFF"
      />
    </svg>
  );
};
export const IconETH = ({ className, color = '#B53BFF', ...rest }: IconProps) => {
  return (
    <svg
      width="13"
      height="20"
      viewBox="0 0 13 20"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <path
        d="M11.6414 8.95892C11.5423 9.1054 11.4766 9.28086 11.35 9.38004C9.68991 10.6739 8.02065 11.9572 6.35293 13.2434C6.11948 13.4235 5.89213 13.4143 5.65868 13.2358C4.00316 11.9556 2.34458 10.68 0.689063 9.39835C0.365588 9.14812 0.348804 8.94518 0.59141 8.53931C2.17217 5.90879 3.7697 3.29047 5.32147 0.644693C5.83109 -0.223501 6.20187 -0.209769 6.70844 0.655374C8.24648 3.27979 9.83333 5.87675 11.3988 8.48591C11.4812 8.62476 11.5468 8.77429 11.6414 8.96044V8.95892ZM1.27498 8.50574C1.27956 8.95892 1.58167 9.10845 1.97228 8.9345C3.19752 8.38673 4.42428 7.83896 5.64189 7.27288C5.91044 7.14776 6.13016 7.15234 6.39412 7.2744C7.61173 7.84049 8.8385 8.38826 10.0607 8.94366C10.3262 9.0642 10.5764 9.0642 10.7061 8.77429C10.8328 8.49049 10.6863 8.29366 10.4147 8.17159C9.03991 7.5521 7.66971 6.92499 6.29037 6.31619C6.14541 6.2521 5.92875 6.23532 5.78837 6.29635C4.37393 6.92041 2.96712 7.56126 1.56641 8.21126C1.42909 8.27535 1.33754 8.44014 1.27651 8.50422L1.27498 8.50574Z"
        fill={color}
      />
      <path
        d="M6.01341 15.1704C6.97926 14.438 7.92832 13.7209 8.87739 13.0022C9.61436 12.4438 10.3544 11.8869 11.0883 11.3223C11.3431 11.127 11.5979 11.0049 11.8665 11.2658C12.135 11.5283 12.013 11.7861 11.8314 12.0455C10.0645 14.5693 8.30215 17.0945 6.53677 19.6197C6.18583 20.1217 5.84862 20.1263 5.50531 19.635C3.72925 17.1006 1.95777 14.5647 0.184759 12.0303C0.0413313 11.8243 -0.0807348 11.6229 0.0672703 11.3681C0.245792 11.0614 0.554009 11.0339 0.911052 11.304C2.06458 12.1752 3.21505 13.0495 4.36552 13.9238C4.90109 14.3297 5.43665 14.7356 6.01189 15.172L6.01341 15.1704Z"
        fill={color}
      />
    </svg>
  );
};
export const IconTip = ({ className, color = '#2B526E', bgColor = '#fff', ...rest }: IconProps) => {
  // const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="12"
      height="12"
      viewBox="0 0 12 12"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      // onMouseOver={() => setHovered(true)}
      // onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M6 12C9.31371 12 12 9.31371 12 6C12 2.68629 9.31371 0 6 0C2.68629 0 0 2.68629 0 6C0 9.31371 2.68629 12 6 12Z"
        fill={bgColor}
      />
      <path
        d="M6.0004 4.05153C5.74601 4.05153 5.53974 3.97819 5.37931 3.82922C5.21889 3.68025 5.13867 3.49691 5.13867 3.27918C5.13867 3.06146 5.21889 2.87582 5.37931 2.72914C5.53974 2.58017 5.74601 2.50684 6.0004 2.50684C6.25479 2.50684 6.46106 2.57559 6.62148 2.71539C6.78191 2.85519 6.86212 3.03396 6.86212 3.25168C6.86212 3.48315 6.7842 3.67338 6.62607 3.82464C6.47022 3.9759 6.26167 4.05153 6.0004 4.05153ZM5.30827 9.49461V5.53794H6.69253V9.49461H5.30827Z"
        fill={color}
      />
    </svg>
  );
};
export const IconCompleted = ({ className, ...rest }: IconProps) => {
  return (
    <svg
      width="50"
      height="50"
      viewBox="0 0 50 50"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <circle cx="25" cy="25" r="25" fill="#07E993" />
      <path
        d="M21.8028 27.7426C21.0281 27.657 20.0698 27.5644 19.1156 27.4402C17.946 27.2883 16.8303 26.9196 15.7808 26.4073C15.2727 26.1587 14.7949 25.7514 14.4428 25.3067C13.6681 24.3249 14.1569 23.3252 14.9993 22.6886C15.999 21.9333 17.1755 21.5659 18.3782 21.305C20.0339 20.9473 21.7117 20.8037 23.4074 20.9252C25.2135 21.055 26.9921 21.3312 28.6409 22.1128C29.1573 22.3572 29.6572 22.7231 30.0383 23.1457C30.7771 23.9687 30.7508 24.8869 29.7925 25.7334C29.08 26.3631 28.2432 26.7815 27.3221 27.0383C25.9468 27.4208 24.5563 27.6929 23.1271 27.7412C22.7487 27.7536 22.3703 27.7426 21.8042 27.7426H21.8028Z"
        fill="#A005FE"
      />
      <path
        d="M22.6657 19.489C22.3909 19.489 22.1147 19.4849 21.8399 19.489C20.8429 19.507 19.7658 18.6177 19.607 17.629C19.4993 16.9607 19.8169 16.4553 20.2685 16.012C21.0514 15.2456 22.0525 14.9101 23.0716 14.6201C24.8971 14.1009 26.7599 13.9393 28.6531 14.0194C30.2798 14.0871 31.8636 14.3591 33.4047 14.8838C34.2774 15.1807 35.0741 15.606 35.6458 16.3462C36.2534 17.1319 36.1636 18.0018 35.4539 18.6964C34.6847 19.449 33.7264 19.8439 32.7225 20.1574C31.6109 20.504 30.4676 20.6945 29.3104 20.7498C28.9348 20.7677 28.5385 20.5689 28.167 20.4294C26.3926 19.7652 24.5395 19.5677 22.6657 19.4876V19.489Z"
        fill="#A005FE"
      />
      <path
        d="M30.4738 31.1536C30.8107 32.1008 30.4903 33.4127 29.7902 34.0313C28.8292 34.8805 27.6499 35.2465 26.4375 35.5364C24.5567 35.9866 22.6429 36.0847 20.7248 35.9355C19.1437 35.8126 17.5778 35.5378 16.121 34.8709C15.2801 34.4856 14.435 34.0175 14.1657 33.0564C14 32.4654 14.0539 31.8122 14 31.0693C16.5643 32.8286 19.3868 33.2456 22.2714 33.2497C25.1616 33.2539 27.9896 32.8396 30.4724 31.1536H30.4738Z"
        fill="#A005FE"
      />
      <path
        d="M30.4905 27.035C30.8261 28.4062 30.4505 29.4281 29.3734 30.1862C28.4275 30.8517 27.3573 31.2273 26.2416 31.4497C24.6757 31.7617 23.0891 31.9592 21.4886 31.8653C19.5913 31.7535 17.7202 31.4704 15.9886 30.635C15.5109 30.4043 15.0855 30.0522 14.6699 29.7167C14.3109 29.4267 14.1051 29.0138 14.0748 28.5526C14.043 28.0513 14.0678 27.5473 14.0678 27.0088C14.4987 27.2601 14.895 27.5252 15.3175 27.7337C16.9856 28.5554 18.7725 28.9144 20.6145 29.069C22.2122 29.203 23.8085 29.1629 25.3827 28.913C27.0715 28.6451 28.7258 28.2115 30.1784 27.2339C30.271 27.1717 30.3662 27.1151 30.4919 27.0364L30.4905 27.035Z"
        fill="#A005FE"
      />
      <path
        d="M36.0218 20.0859C36.0218 20.6783 36.0535 21.2362 36.0135 21.7872C35.9707 22.3754 35.5923 22.7855 35.1449 23.1308C34.2266 23.8391 33.144 24.1581 31.9979 24.4799C31.8736 23.5782 31.6858 22.7331 30.9277 22.0537C32.8278 21.7126 34.5139 21.1644 36.0218 20.0873V20.0859Z"
        fill="#A005FE"
      />
      <path
        d="M31.9798 28.6314C31.9798 27.7504 31.9729 26.9287 31.9909 26.1071C31.9922 26.0339 32.14 25.9345 32.238 25.8986C33.108 25.581 33.9917 25.3007 34.8493 24.9541C35.258 24.7898 35.6184 24.5053 36.0216 24.2637C36.041 24.3175 36.0796 24.3741 36.0796 24.4321C36.0796 24.8215 36.0727 25.2123 36.07 25.6017C36.0658 26.1527 35.8283 26.5932 35.4403 26.966C34.6035 27.7683 33.5512 28.155 32.4756 28.496C32.3361 28.5402 32.1939 28.5734 31.9798 28.6314Z"
        fill="#A005FE"
      />
    </svg>
  );
};
export const IconBack = ({
  className,
  color = '#19FDA6',
  bgColor = '#B53BFF',
  hoverColor = '#B53BFF',
  hoverBgColor = '#19FDA6',
  ...rest
}: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="40"
      height="40"
      viewBox="0 0 40 40"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <rect width="40" height="40" rx="7" fill={hovered ? hoverBgColor : bgColor} />
      <path
        d="M20.6349 10C23.1742 10 25.7135 10 28.2528 10C28.2808 10.0053 28.3095 10.0122 28.3383 10.0153C29.1905 10.0969 29.7758 10.8349 29.8053 11.514C29.8068 11.543 29.8144 11.5713 29.8197 11.6003V20.9264C29.797 20.9989 29.8076 21.0752 29.7932 21.1485C29.7327 21.456 29.5996 21.727 29.3901 21.9574C29.0552 22.3252 28.6355 22.5069 28.1439 22.5076C25.6825 22.5099 23.2211 22.5084 20.7597 22.5092C20.6758 22.5092 20.5926 22.5015 20.5094 22.4893C20.0307 22.4183 19.6526 22.1802 19.3759 21.7819C19.1717 21.4881 19.084 21.1584 19.084 20.799C19.0863 17.7526 19.0847 14.7062 19.0855 11.6598C19.0855 11.601 19.0855 11.5423 19.0923 11.4843C19.1785 10.7563 19.7139 10.1748 20.4262 10.0359C20.4958 10.0221 20.5654 10.0122 20.6357 10.0008L20.6349 10Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M15.9936 29.9992H11.4504C11.4005 29.974 11.3453 29.9702 11.2923 29.9557C10.6186 29.7733 10.2004 29.3399 10.0401 28.6546C10.0302 28.6134 10.0227 28.5722 10 28.5355V20.6143C10.0234 20.5784 10.0318 20.5372 10.0401 20.4952C10.1966 19.7253 10.8847 19.1598 11.6697 19.1636C13.0452 19.1705 14.4207 19.1651 15.7962 19.1659C15.8545 19.1659 15.9127 19.1659 15.9701 19.1728C16.8246 19.2765 17.4447 19.9778 17.4455 20.8486C17.447 23.3387 17.447 25.8287 17.4455 28.3188C17.4455 29.098 16.9373 29.7504 16.1894 29.9466C16.1244 29.9633 16.0564 29.971 15.9936 29.9985V29.9992Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M20.538 29.9994C20.473 29.9696 20.4011 29.9627 20.3323 29.9452C19.5996 29.7575 19.0869 29.1042 19.0846 28.3434C19.0816 27.4948 19.0808 26.6462 19.0846 25.7976C19.0884 24.9666 19.7342 24.2523 20.5546 24.1668C20.628 24.1592 20.7028 24.1607 20.777 24.1607C23.2285 24.1607 25.6801 24.1622 28.1324 24.1592C28.5544 24.1592 28.9257 24.2874 29.2433 24.5636C29.5745 24.8513 29.7696 25.2153 29.8044 25.6602C29.8067 25.6892 29.8142 25.7175 29.8188 25.7465V28.4197C29.7938 28.5044 29.8067 28.5937 29.7847 28.6799C29.6123 29.3591 29.1904 29.7857 28.5181 29.9597C28.4682 29.9727 28.4168 29.9788 28.3691 30.0001H20.5388L20.538 29.9994Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M15.8983 10C15.9626 10.0237 16.0314 10.0206 16.0979 10.0328C16.7936 10.1625 17.3404 10.744 17.4296 11.4507C17.4402 11.5346 17.447 11.6186 17.447 11.7033C17.447 13.0823 17.4508 14.4612 17.4447 15.8394C17.4425 16.44 17.1778 16.9086 16.6848 17.2413C16.4095 17.4275 16.0995 17.5099 15.7698 17.5114C15.2865 17.5137 14.8033 17.5122 14.3194 17.5122C13.4361 17.5122 12.5537 17.5153 11.6704 17.5107C11.2046 17.5084 10.8016 17.3382 10.4741 17.0017C10.2495 16.7712 10.1089 16.4927 10.0416 16.1767C10.0318 16.1325 10.025 16.0875 10 16.0478V11.4438C10.0348 11.4019 10.0355 11.3477 10.0492 11.2981C10.2223 10.6464 10.6299 10.2312 11.2742 10.0519C11.371 10.0252 11.4708 10.0237 11.5676 10H15.8983Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconCollect = ({
  className = 'cursor-pointer',
  color = '#B53BFF',
  hoverColor = '#B53BFF',
  ...rest
}: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="23"
      height="23"
      viewBox="0 0 23 23"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M8.85229 2.09762C10.0261 0.20968 12.7739 0.20968 13.9477 2.09762L15.5804 4.72359C15.9934 5.38785 16.6495 5.86453 17.4089 6.05206L20.4109 6.79338C22.5691 7.32635 23.4182 9.93962 21.9854 11.6394L19.9925 14.0037C19.4884 14.6017 19.2378 15.373 19.2941 16.1532L19.5167 19.2373C19.6768 21.4546 17.4538 23.0697 15.3944 22.2323L12.5301 21.0675C11.8055 20.7729 10.9945 20.7729 10.2699 21.0675L7.40555 22.2323C5.3462 23.0697 3.12322 21.4546 3.28328 19.2373L3.5059 16.1532C3.56221 15.373 3.3116 14.6017 2.80748 14.0037L0.814573 11.6394C-0.618233 9.93962 0.230867 7.32635 2.38914 6.79338L5.39112 6.05206C6.15049 5.86453 6.80659 5.38785 7.21959 4.72359L8.85229 2.09762Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconAwaiting = ({ className, color = '#07E993', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="20"
      height="21"
      viewBox="0 0 20 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M11.2336 3.23268C11.2336 3.57031 11.2649 3.88284 11.2248 4.18533C11.1834 4.49661 11.1306 4.83424 10.9763 5.09531C10.7165 5.5321 10.1165 5.66012 9.54666 5.48566C9.12995 5.35763 8.79985 4.95348 8.78981 4.4715C8.77098 3.56404 8.75215 2.65406 8.79232 1.74785C8.82872 0.932003 9.35086 0.576798 10.1065 0.59437C11.885 0.6383 13.5744 1.06379 15.1069 1.99134C17.2633 3.29544 18.7393 5.1543 19.5175 7.55162C20.0974 9.33895 20.1476 11.1564 19.7058 12.9814C19.2338 14.9306 18.2398 16.5748 16.7675 17.9342C15.6303 18.9835 14.335 19.7604 12.8452 20.1884C11.0754 20.6967 9.29814 20.752 7.5058 20.2763C4.9566 19.601 2.99984 18.1287 1.56521 15.936C0.318854 14.0307 -0.150569 11.9107 0.0414678 9.67281C0.243546 7.31064 1.22381 5.26224 2.88687 3.55776C3.42282 3.00926 4.18846 2.97161 4.70056 3.46362C5.20136 3.94309 5.21265 4.73132 4.69051 5.29237C4.06671 5.96136 3.51696 6.67302 3.14418 7.51397C1.76101 10.6292 2.60698 14.3545 5.31181 16.4958C6.75899 17.6417 8.41954 18.1689 10.2307 18.1061C13.4439 17.9944 15.9504 16.1318 16.9758 13.3981C18.0879 10.4322 17.5846 7.70852 15.4057 5.37019C14.3388 4.2255 12.9958 3.53015 11.4482 3.25276C11.408 3.24523 11.3666 3.24649 11.2336 3.23644V3.23268Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M10.9138 10.4711C10.8837 10.9392 10.7669 11.2379 10.4343 11.4112C10.1218 11.5743 9.81178 11.5605 9.51431 11.3748C9.41767 11.3145 9.3273 11.2417 9.24697 11.1614C8.26796 10.1811 7.28518 9.20211 6.31496 8.21305C5.79658 7.68464 5.85055 7.00435 6.41662 6.66797C6.78563 6.44832 7.18602 6.47845 7.55629 6.83867C8.59429 7.84781 9.61849 8.872 10.6276 9.90875C10.7895 10.0757 10.8498 10.3405 10.9138 10.4698V10.4711Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconAirdropped = ({ className, color = '#07E993', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="16"
      height="21"
      viewBox="0 0 16 21"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M7.73067 20.0725C6.69693 20.0725 5.66217 20.0735 4.62842 20.0725C4.19515 20.0725 4.10238 19.9787 4.10136 19.5495C4.10136 17.9561 4.10442 16.3617 4.09524 14.7682C4.09524 14.6184 4.04427 14.4491 3.96373 14.3217C2.7944 12.4652 1.6424 10.5966 0.426172 8.77171C-0.01118 8.11619 -0.0825429 7.47801 0.0795527 6.75214C0.502632 4.86307 1.56492 3.40625 3.12267 2.30726C7.8265 -1.00907 13.2725 1.57834 14.9771 5.45946C15.2727 6.13231 15.448 6.83472 15.496 7.56976C15.5164 7.88783 15.4185 8.16615 15.2493 8.43223C14.0065 10.3825 12.7648 12.3327 11.5323 14.2901C11.4395 14.4369 11.3855 14.6337 11.3844 14.807C11.3732 16.3749 11.3783 17.9439 11.3773 19.5118C11.3773 19.9848 11.2886 20.0725 10.8084 20.0725C9.78286 20.0725 8.75727 20.0725 7.73169 20.0725H7.73067ZM6.33909 14.0444C6.34317 14.0118 6.34623 14.0026 6.34419 13.9955C5.90582 11.6405 5.46745 9.28654 5.025 6.93259C5.00971 6.85409 4.96383 6.77457 4.91489 6.70933C4.0667 5.58995 2.90042 5.34324 1.65055 5.98347C1.11533 6.2577 0.728954 6.60126 0.746285 7.25372C0.749344 7.36281 0.707546 7.47495 0.719779 7.58097C0.736091 7.71962 0.754441 7.87356 0.825804 7.98672C2.07261 9.96347 3.32758 11.9361 4.58459 13.9058C4.62333 13.9669 4.70692 14.0373 4.77115 14.0383C5.29414 14.0495 5.81814 14.0444 6.33909 14.0444ZM9.12428 14.0454C9.63605 14.0454 10.1274 14.0393 10.6178 14.0495C10.7656 14.0526 10.8431 13.9965 10.9185 13.8772C12.1511 11.93 13.3887 9.9859 14.6223 8.03973C14.6763 7.95512 14.7538 7.85419 14.7456 7.76754C14.7089 7.36485 14.7008 6.9438 14.5693 6.57068C14.4989 6.36984 14.2125 6.2261 13.9994 6.09663C12.7393 5.32999 11.5598 5.51043 10.6443 6.60942C10.5424 6.73176 10.47 6.89997 10.4394 7.05799C10.1662 8.46281 9.9052 9.86968 9.64115 11.2765C9.46988 12.191 9.29963 13.1055 9.12428 14.0464V14.0454ZM8.36987 14.0362C8.38313 13.9812 8.39128 13.9496 8.3974 13.917C8.79601 11.7955 9.19055 9.67394 9.59426 7.55345C9.75839 6.69098 9.76553 6.6818 9.06006 6.14454C8.61761 5.8071 8.13743 5.57772 7.55736 5.64398C6.85392 5.72452 6.35133 6.14964 5.88543 6.62675C5.80897 6.70525 5.76615 6.86938 5.78654 6.97949C6.12602 8.84511 6.47672 10.7087 6.8264 12.5723C6.91815 13.0606 7.01296 13.5489 7.10675 14.0373H8.36885L8.36987 14.0362Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};

export const IconWebsite = ({ className, color = '#07E993', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="18"
      height="15"
      viewBox="0 0 18 15"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M17.136 15H0.00545994C0.00545994 14.8866 0.00545994 14.7841 0.00545994 14.6802C0.00545994 9.89568 0.00818991 5.11115 0 0.326622C0 0.0614978 0.0805342 0 0.333057 0C5.82849 0.00683309 11.3239 0.00683309 16.8194 0C17.0828 0 17.1429 0.0778972 17.1429 0.336188C17.1347 5.12072 17.136 9.90525 17.136 14.6898C17.136 14.7854 17.136 14.8811 17.136 14.9986V15ZM10.1637 4.01102C11.6815 4.01102 13.2008 4.00692 14.7186 4.01512C14.9548 4.01649 15.038 3.94133 15.0271 3.70763C15.0121 3.39605 15.0244 3.08172 15.023 2.76877C15.023 2.40115 15.0189 2.39705 14.6463 2.39568C12.8691 2.39568 11.0919 2.39568 9.31466 2.39568C8.09164 2.39568 6.86724 2.39978 5.64422 2.39295C5.42855 2.39295 5.33573 2.45308 5.34528 2.6813C5.3603 3.02979 5.3603 3.37828 5.34528 3.72677C5.33573 3.94816 5.40671 4.01649 5.63466 4.01512C7.14434 4.00556 8.65401 4.00966 10.1623 4.00966L10.1637 4.01102ZM3.17769 4.29938C3.47252 4.29938 3.766 4.29255 4.06083 4.30211C4.23419 4.30758 4.29698 4.24198 4.29561 4.06842C4.28879 3.50674 4.29015 2.9437 4.29561 2.38202C4.29561 2.21665 4.24647 2.13739 4.06493 2.14012C3.49436 2.14696 2.9238 2.14696 2.35324 2.14012C2.17988 2.13876 2.11163 2.21255 2.113 2.37928C2.11573 2.95053 2.11573 3.52177 2.113 4.09302C2.113 4.23925 2.17715 4.30211 2.32321 4.30075C2.60849 4.29665 2.89377 4.30075 3.17905 4.30075L3.17769 4.29938Z"
        fill="#07E993"
      />
    </svg>
  );
};
export const IconUpload = ({ className, color = '#07E993', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.00619492 18.2139H2.92425C2.92425 19.9917 2.92425 21.7235 2.92425 23.4537C2.92425 25.9578 4.01852 27.0664 6.52582 27.0679C12.1304 27.0743 17.735 27.0743 23.3395 27.0679C25.4488 27.0664 26.6461 25.8436 26.6493 23.7122C26.6525 21.8995 26.6493 20.0868 26.6493 18.2202H29.5087C29.5293 18.4359 29.5673 18.6595 29.5673 18.8847C29.5705 20.6213 29.5784 22.3578 29.5626 24.0944C29.534 27.3899 26.9934 29.9685 23.717 29.9812C17.7968 30.0034 11.8766 30.0066 5.95649 29.986C2.54998 29.9733 0.0410847 27.4438 0.00936671 24.0405C-0.00966407 22.1215 0.00619492 20.2026 0.00619492 18.2139Z"
        fill="#07E993"
      />
      <path
        d="M13.0956 5.58395C11.0561 7.62659 9.01506 9.66922 6.9978 11.6912C6.33806 11.0125 5.68784 10.3416 5.08203 9.7168C8.2903 6.51804 11.5747 3.23999 14.8242 0C18.0055 3.18131 21.2883 6.46412 24.5458 9.71997C23.9384 10.3242 23.2723 10.9887 22.584 11.6754C20.6 9.66764 18.5574 7.60121 16.5148 5.5332C16.4434 5.57126 16.3705 5.60932 16.2991 5.64738V21.075H13.3192V5.66324C13.2447 5.63787 13.1717 5.61091 13.0972 5.58554L13.0956 5.58395Z"
        fill="#07E993"
      />
    </svg>
  );
};

export const IconQueueBtn = forwardRef(
  ({ className, hoverColor = '#242842', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="19"
        height="20"
        viewBox="0 0 19 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M9.67385 1.19223C9.98225 1.19223 10.2917 1.17779 10.6001 1.19532C11.2272 1.23039 11.6398 1.68835 11.6078 2.29381C11.5779 2.85388 11.1096 3.26542 10.5052 3.23964C9.1705 3.18291 7.87192 3.31184 6.63832 3.8781C3.78742 5.18906 2.13505 8.19261 2.55279 11.3272C2.96021 14.3864 5.35727 16.8402 8.44231 17.3559C12.4536 18.0274 16.206 15.1785 16.6567 11.125C16.7547 10.2441 16.6773 9.38083 16.469 8.5237C16.3328 7.96363 16.6577 7.44069 17.2095 7.29835C17.7748 7.15395 18.308 7.47885 18.4514 8.08121C19.1136 10.8599 18.6628 13.4519 16.9558 15.7427C14.9125 18.4853 12.1153 19.7251 8.71255 19.4394C4.46714 19.0815 1.03451 15.7005 0.52704 11.4819C-0.0701635 6.51652 3.32534 2.04523 8.2649 1.30156C8.73008 1.23142 9.20351 1.21698 9.67282 1.17676C9.67282 1.18192 9.67282 1.18707 9.67385 1.19223Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M10.6319 15.4456C10.472 16.1088 10.1574 16.4182 9.6355 16.4368C9.08987 16.4564 8.77116 16.1696 8.5494 15.4621C8.25131 15.4033 7.95219 15.3692 7.66752 15.2826C6.41741 14.902 5.53656 13.7179 5.53037 12.4338C5.52728 11.8551 5.92541 11.4023 6.46486 11.3693C7.05484 11.3322 7.49423 11.7128 7.56231 12.3193C7.64895 13.0877 7.9852 13.3889 8.75465 13.3889C9.35495 13.3889 9.95525 13.3909 10.5555 13.3889C11.1785 13.3858 11.62 12.9639 11.62 12.3781C11.62 11.7922 11.1806 11.3765 10.5545 11.3683C9.75721 11.358 8.95578 11.3972 8.16467 11.3208C6.66392 11.1764 5.52109 9.82627 5.52934 8.29046C5.53759 6.77527 6.70312 5.46225 8.18736 5.29516C8.30598 5.28175 8.42459 5.26628 8.55868 5.24977C8.57621 5.17448 8.59065 5.10022 8.60922 5.02802C8.7268 4.55974 9.12494 4.25031 9.60353 4.25444C10.0718 4.25856 10.4772 4.56077 10.57 5.02286C10.6123 5.23224 10.7134 5.26525 10.8928 5.28587C12.3915 5.45709 13.4487 6.50607 13.6437 8.00166C13.7458 8.78349 13.2981 9.34872 12.5957 9.32603C12.1233 9.31055 11.7262 8.96812 11.6458 8.50087C11.621 8.3575 11.6221 8.20898 11.5911 8.06767C11.4952 7.63446 11.0981 7.31265 10.6401 7.3075C9.94493 7.29925 9.25078 7.29821 8.55558 7.3075C7.99345 7.31472 7.5685 7.75824 7.5685 8.31521C7.5685 8.87116 7.99242 9.31365 8.55558 9.3219C9.23324 9.33221 9.9109 9.3219 10.5886 9.32603C12.1997 9.33634 13.4921 10.5184 13.6499 12.1202C13.7984 13.6364 12.7401 15.0443 11.2033 15.3672C11.0197 15.4053 10.832 15.4187 10.6308 15.4456H10.6319Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M16.7022 4.25732C16.7022 4.62038 16.7063 4.93703 16.7022 5.25266C16.6939 5.8447 16.2546 6.28513 15.6811 6.28203C15.121 6.27894 14.6899 5.84573 14.6775 5.26297C14.6703 4.9391 14.6764 4.61522 14.6764 4.25628C14.3258 4.25628 14.0029 4.26557 13.6811 4.25422C12.8487 4.22637 12.3691 3.38575 12.7951 2.7019C12.9962 2.37803 13.2995 2.22228 13.678 2.21713C14.0009 2.21197 14.3247 2.21713 14.6775 2.21713C14.6775 1.89222 14.6764 1.59414 14.6775 1.29708C14.6795 0.631805 15.0911 0.188286 15.6965 0.192411C16.2886 0.196537 16.6991 0.643151 16.7022 1.2878C16.7032 1.58589 16.7022 1.88397 16.7022 2.2161C17.0539 2.2161 17.385 2.20991 17.7161 2.21713C18.2813 2.23054 18.7125 2.65136 18.7372 3.20215C18.761 3.73128 18.3618 4.18718 17.8058 4.24391C17.5769 4.26763 17.3438 4.25319 17.1127 4.25525C16.9858 4.25628 16.86 4.25525 16.7022 4.25525V4.25732Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconLaunchedBtn = forwardRef(
  ({ className, hoverColor = '#242842', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="21"
        height="20"
        viewBox="0 0 21 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M7.0954 12.4979C6.39088 12.4201 5.51932 12.3359 4.65154 12.2229C3.58784 12.0848 2.57312 11.7494 1.61868 11.2835C1.15653 11.0575 0.722014 10.687 0.401774 10.2826C-0.302752 9.38972 0.141815 8.48049 0.907878 7.90155C1.81711 7.21461 2.88708 6.88055 3.98092 6.6432C5.48667 6.31794 7.01252 6.18733 8.55469 6.29785C10.1973 6.41589 11.8149 6.66706 13.3143 7.37787C13.784 7.60015 14.2386 7.93295 14.5852 8.31724C15.2571 9.06572 15.2332 9.90085 14.3617 10.6707C13.7137 11.2433 12.9526 11.6239 12.115 11.8574C10.8642 12.2053 9.59955 12.4527 8.29975 12.4967C7.95565 12.508 7.61155 12.4979 7.09666 12.4979H7.0954Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M7.8829 4.99204C7.63299 4.99204 7.38182 4.98827 7.13191 4.99204C6.22519 5.00836 5.24563 4.1996 5.10121 3.30042C5.00326 2.69259 5.2921 2.23295 5.70276 1.82983C6.41482 1.13284 7.32531 0.827669 8.25212 0.563943C9.91234 0.0917467 11.6065 -0.0551866 13.3282 0.0176521C14.8076 0.0791883 16.2481 0.326589 17.6496 0.803808C18.4433 1.07381 19.1679 1.46061 19.6878 2.13374C20.2404 2.84832 20.1587 3.6395 19.5132 4.27118C18.8137 4.95562 17.9422 5.31479 17.0292 5.59986C16.0182 5.91508 14.9784 6.08838 13.926 6.13862C13.5844 6.15494 13.224 5.9741 12.8862 5.84726C11.2724 5.2432 9.58707 5.06362 7.8829 4.99078V4.99204Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M14.9822 15.6C15.2886 16.4616 14.9972 17.6546 14.3605 18.2172C13.4865 18.9896 12.414 19.3224 11.3114 19.5861C9.6009 19.9955 7.8603 20.0847 6.11594 19.949C4.67801 19.8372 3.25388 19.5873 1.92897 18.9808C1.16416 18.6304 0.39559 18.2047 0.150701 17.3306C0 16.7931 0.0489778 16.1991 0 15.5234C2.3321 17.1234 4.89903 17.5026 7.52248 17.5064C10.151 17.5102 12.7229 17.1334 14.9809 15.6H14.9822Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M14.9969 11.8554C15.302 13.1025 14.9604 14.0318 13.9809 14.7212C13.1206 15.3265 12.1474 15.6681 11.1326 15.8703C9.70852 16.1541 8.26556 16.3337 6.81004 16.2483C5.08451 16.1466 3.38285 15.8892 1.80802 15.1294C1.3735 14.9197 0.986705 14.5994 0.608697 14.2942C0.282178 14.0305 0.0950581 13.655 0.0674296 13.2356C0.0385453 12.7797 0.0611504 12.3213 0.0611504 11.8315C0.452973 12.0601 0.813399 12.3012 1.19769 12.4909C2.71474 13.2381 4.3398 13.5646 6.01509 13.7053C7.4681 13.8271 8.91985 13.7907 10.3515 13.5633C11.8874 13.3197 13.3919 12.9254 14.713 12.0362C14.7972 11.9797 14.8838 11.9282 14.9981 11.8567L14.9969 11.8554Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M20.0293 5.53467C20.0293 6.07342 20.0582 6.58078 20.0217 7.08186C19.9828 7.61685 19.6387 7.98984 19.2318 8.3038C18.3967 8.94804 17.4121 9.23814 16.3698 9.53075C16.2567 8.71069 16.0859 7.94211 15.3965 7.32424C17.1245 7.01405 18.6579 6.51548 20.0293 5.53592V5.53467Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M16.3527 13.3067C16.3527 12.5055 16.3465 11.7582 16.3628 11.011C16.3641 10.9445 16.4984 10.854 16.5876 10.8214C17.3788 10.5325 18.1825 10.2776 18.9624 9.96239C19.3341 9.81295 19.6619 9.55424 20.0286 9.33447C20.0462 9.38345 20.0813 9.43494 20.0813 9.48769C20.0813 9.84183 20.0751 10.1972 20.0725 10.5514C20.0688 11.0525 19.8528 11.4531 19.4999 11.7922C18.7388 12.5218 17.7819 12.8734 16.8036 13.1836C16.6768 13.2238 16.5474 13.254 16.3527 13.3067Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconAirdropBtn = forwardRef(
  ({ className, hoverColor = '#242842', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="16"
        height="20"
        viewBox="0 0 16 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M7.73067 19.9299C6.69693 19.9299 5.66217 19.931 4.62842 19.9299C4.19515 19.9299 4.10238 19.8362 4.10136 19.407C4.10136 17.8135 4.10442 16.2191 4.09524 14.6256C4.09524 14.4758 4.04427 14.3066 3.96373 14.1791C2.7944 12.3227 1.6424 10.454 0.426172 8.62914C-0.01118 7.97362 -0.0825429 7.33543 0.0795527 6.60957C0.502632 4.72049 1.56492 3.26367 3.12267 2.16468C7.8265 -1.15165 13.2725 1.43576 14.9771 5.31688C15.2727 5.98973 15.448 6.69214 15.496 7.42718C15.5164 7.74526 15.4185 8.02357 15.2493 8.28965C14.0065 10.2399 12.7648 12.1901 11.5323 14.1475C11.4395 14.2943 11.3855 14.4911 11.3844 14.6644C11.3732 16.2323 11.3783 17.8013 11.3773 19.3692C11.3773 19.8423 11.2886 19.9299 10.8084 19.9299C9.78286 19.9299 8.75727 19.9299 7.73169 19.9299H7.73067ZM6.33909 13.9018C6.34317 13.8692 6.34623 13.86 6.34419 13.8529C5.90582 11.4979 5.46745 9.14397 5.025 6.79001C5.00971 6.71151 4.96383 6.63199 4.91489 6.56675C4.0667 5.44737 2.90042 5.20066 1.65055 5.84089C1.11533 6.11512 0.728954 6.45868 0.746285 7.11115C0.749344 7.22023 0.707546 7.33237 0.719779 7.4384C0.736091 7.57704 0.754441 7.73098 0.825804 7.84414C2.07261 9.82089 3.32758 11.7936 4.58459 13.7632C4.62333 13.8243 4.70692 13.8947 4.77115 13.8957C5.29414 13.9069 5.81814 13.9018 6.33909 13.9018ZM9.12428 13.9028C9.63605 13.9028 10.1274 13.8967 10.6178 13.9069C10.7656 13.91 10.8431 13.8539 10.9185 13.7346C12.1511 11.7874 13.3887 9.84332 14.6223 7.89716C14.6763 7.81254 14.7538 7.71161 14.7456 7.62496C14.7089 7.22227 14.7008 6.80123 14.5693 6.4281C14.4989 6.22727 14.2125 6.08352 13.9994 5.95405C12.7393 5.18741 11.5598 5.36785 10.6443 6.46684C10.5424 6.58918 10.47 6.75739 10.4394 6.91541C10.1662 8.32024 9.9052 9.7271 9.64115 11.134C9.46988 12.0484 9.29963 12.9629 9.12428 13.9039V13.9028ZM8.36987 13.8937C8.38313 13.8386 8.39128 13.807 8.3974 13.7744C8.79601 11.6529 9.19055 9.53136 9.59426 7.41087C9.75839 6.5484 9.76553 6.53922 9.06006 6.00196C8.61761 5.66452 8.13743 5.43514 7.55736 5.5014C6.85392 5.58194 6.35133 6.00706 5.88543 6.48417C5.80897 6.56267 5.76615 6.72681 5.78654 6.83691C6.12602 8.70254 6.47672 10.5661 6.8264 12.4297C6.91815 12.918 7.01296 13.4064 7.10675 13.8947H8.36885L8.36987 13.8937Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconWalletContentCreator = forwardRef(
  ({ className, hoverColor = '#242842', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="21"
        height="21"
        viewBox="0 0 21 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M18.5155 8.06338C18.5155 11.1038 18.5497 14.1452 18.501 17.1846C18.475 18.7784 17.207 19.9738 15.6058 19.9832C11.7166 20.006 7.82638 20.005 3.93717 19.9832C2.24783 19.9738 1.01092 18.6954 1.00677 16.9967C0.996392 13.1428 0.999505 9.28784 1.00573 5.43287C1.00884 3.82759 2.20321 2.52323 3.81991 2.49728C6.86134 2.45059 9.90485 2.48691 12.9473 2.49002C12.9577 2.49002 12.9681 2.51285 13.0967 2.64152C12.6547 3.04103 12.2251 3.4561 11.7612 3.82862C11.6357 3.92928 11.4053 3.92098 11.2227 3.92201C8.88896 3.9272 6.55523 3.92513 4.22149 3.92616C3.00741 3.92616 2.45952 4.48132 2.45848 5.70474C2.45848 9.38642 2.45848 13.0691 2.45848 16.7508C2.45848 18.0054 3.00015 18.546 4.25573 18.546C7.93741 18.546 11.6201 18.546 15.3018 18.546C16.5107 18.546 17.0773 17.9805 17.0773 16.7726C17.0793 14.4731 17.0887 12.1736 17.0679 9.87516C17.0638 9.45491 17.1893 9.16851 17.4913 8.88833C17.8026 8.59882 18.0496 8.23875 18.3246 7.9098L18.5144 8.06338H18.5155Z"
          fill={hovered ? hoverColor : color}
          stroke={hovered ? hoverColor : color}
          strokeWidth="0.5"
        />
        <path
          d="M8.52722 12.7541C8.85824 11.3657 9.1602 10.0748 9.48188 8.78913C9.52858 8.60131 9.64169 8.40623 9.77762 8.26614C11.9266 6.06523 14.0798 3.86951 16.2413 1.68209C17.1161 0.795911 18.1911 0.790723 19.0617 1.69869C19.482 2.13763 19.9012 2.62118 20.1554 3.16285C20.4387 3.76885 20.2198 4.41221 19.7507 4.87813C17.4855 7.133 15.1995 9.36816 12.9187 11.6075C12.8471 11.678 12.7568 11.7517 12.6624 11.7745C11.3113 12.0993 9.95818 12.4169 8.52722 12.7541ZM10.5071 10.7597C11.4877 10.6601 12.2276 10.3311 12.8865 9.64729C14.6007 7.86664 16.3918 6.15966 18.1548 4.42674C19.0285 3.56858 19.0461 3.69103 18.1569 2.809C17.6858 2.34205 17.6266 2.33997 17.1586 2.81523C15.242 4.76191 13.3514 6.73557 11.3964 8.64282C10.7779 9.24675 10.6762 9.96275 10.5061 10.7607L10.5071 10.7597Z"
          fill={hovered ? hoverColor : color}
          stroke={hovered ? hoverColor : color}
          strokeWidth="0.5"
        />
      </svg>
    );
  },
);

export const IconWalletContentCollector = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        version="1.1"
        id="Layer_1"
        xmlns="http://www.w3.org/2000/svg"
        x="0px"
        y="0px"
        width="23"
        height="23"
        viewBox="0 0 479.54 479.49"
        enableBackground="new 0 0 479.54 479.49"
        xmlSpace="preserve"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          fill={hovered ? hoverColor : color}
          d="M239.78,479.48c-59.2,0-118.41,0.05-177.61-0.04c-13.82-0.02-26.65-3.63-37.81-12.15c-12.88-9.84-20.79-22.72-23.3-38.77
          c-0.63-4.01-1-8.11-1-12.16c-0.06-68.11-0.09-136.22,0-204.33c0.02-13.82,3.61-26.67,12.16-37.8
          c9.86-12.83,22.69-20.84,38.77-23.31c4.01-0.62,8.11-1,12.16-1c118.08-0.05,236.15-0.08,354.23,0
          c16.32,0.01,30.92,5.09,42.96,16.49c11.17,10.58,17.41,23.58,18.7,38.88c0.4,4.8,0.47,9.64,0.47,14.46
          c0.03,65.78,0.06,131.55-0.01,197.33c-0.02,16.62-5.18,31.45-16.82,43.6c-9.33,9.73-20.73,15.76-34.12,17.75
          c-4.02,0.6-8.11,0.99-12.17,1C357.53,479.5,298.65,479.48,239.78,479.48z M239.51,434.65c59.2,0,118.39,0,177.59,0
          c0.92,0,1.83,0.02,2.75-0.02c7.25-0.37,12.31-4.05,14.1-10.56c0.56-2.05,0.73-4.27,0.73-6.41c0.04-68.68,0.03-137.36,0.03-206.04
          c0-0.75,0.01-1.5-0.03-2.25c-0.45-7.17-4.06-12.1-10.51-13.87c-2.21-0.61-4.6-0.75-6.91-0.76c-118.31-0.03-236.61-0.03-354.92-0.03
          c-0.92,0-1.83-0.02-2.75,0.03c-7.27,0.42-12.2,4.09-14,10.67c-0.54,1.97-0.7,4.11-0.7,6.17c-0.03,68.76-0.03,137.53-0.03,206.29
          c0,0.67-0.01,1.33,0.03,2c0.4,7.27,4.04,12.22,10.63,14.03c2.05,0.57,4.27,0.72,6.41,0.72
          C121.12,434.65,180.31,434.65,239.51,434.65z"
        />
        <path
          fill={hovered ? hoverColor : color}
          d="M239.79,119.77c-56.79,0-113.57,0.03-170.36-0.04c-7.48-0.01-14.49-1.95-19.26-8.23
          c-5.31-6.98-6.48-14.78-3.1-23.04c3.13-7.64,9.13-11.62,17.02-12.97c2.52-0.43,5.13-0.53,7.69-0.53
          c112.74-0.02,225.48-0.04,338.21,0.02c7.54,0,14.61,1.91,19.45,8.34c5.3,7.06,6.29,14.79,2.99,23.05
          c-3.06,7.65-9.12,11.39-16.84,12.82c-2.43,0.45-4.96,0.55-7.44,0.55C352.03,119.78,295.91,119.77,239.79,119.77z"
        />
        <path
          fill={hovered ? hoverColor : color}
          d="M239.81,44.83c-41.88,0-83.76,0.05-125.64-0.05c-7.39-0.02-14.31-2.01-19.02-8.2
          c-5.31-6.98-6.49-14.77-3.12-23.04c3.12-7.64,9.12-11.63,17.01-12.98c2.52-0.43,5.13-0.53,7.69-0.54
          C199.5,0,282.26-0.02,365.02,0.05c7.55,0.01,14.61,1.91,19.45,8.33c5.31,7.05,6.3,14.79,3.01,23.05
          c-3.05,7.66-9.11,11.4-16.83,12.83c-2.43,0.45-4.96,0.55-7.44,0.55C322.07,44.84,280.94,44.83,239.81,44.83z"
        />
      </svg>
    );
  },
);
export const IconWalletContentWatchList = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="22"
        height="22"
        viewBox="0 0 22 22"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M9.51384 2.75764C10.1986 1.65634 11.8014 1.65634 12.4862 2.75764L13.9848 5.16806C14.5699 6.10909 15.4994 6.7844 16.5752 7.05006L19.3308 7.73053C20.5898 8.04143 21.0851 9.56583 20.2493 10.5574L18.4199 12.7276C17.7058 13.5748 17.3507 14.6675 17.4305 15.7727L17.6349 18.6037C17.7282 19.8971 16.4315 20.8393 15.2302 20.3508L12.6009 19.2816C11.5745 18.8642 10.4255 18.8642 9.39908 19.2816L6.76981 20.3508C5.56852 20.8393 4.27178 19.8971 4.36515 18.6037L4.5695 15.7727C4.64927 14.6675 4.29424 13.5748 3.58007 12.7276L1.75075 10.5574C0.914942 9.56584 1.41025 8.04143 2.66924 7.73053L5.42481 7.05006C6.50058 6.7844 7.43006 6.10909 8.01515 5.16806L9.51384 2.75764Z"
          stroke={hovered ? hoverColor : color}
          strokeWidth="2.5"
        />
      </svg>
    );
  },
);
export const IconWalletContentLogout = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="23"
        height="23"
        viewBox="0 0 23 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M11.08 0.379883C11.41 0.449883 11.7 0.579883 11.86 0.909883C12.12 1.44988 11.81 2.06988 11.23 2.19988C11.09 2.22988 10.95 2.22988 10.81 2.22988C8.25999 2.22988 5.7 2.22988 3.15 2.22988C2.84 2.22988 2.57 2.29988 2.37 2.53988C2.25 2.67988 2.18 2.84988 2.17 3.03988C2.17 3.11988 2.17 3.18988 2.17 3.26988C2.17 8.49988 2.17 13.7199 2.17 18.9499C2.17 19.0699 2.17 19.1999 2.2 19.3199C2.3 19.7299 2.63 19.9699 3.1 19.9799C4.89999 19.9799 6.7 19.9799 8.5 19.9799C9.31999 19.9799 10.13 19.9799 10.95 19.9799C11.48 19.9799 11.85 20.2699 11.94 20.7299C12.04 21.2299 11.7 21.7099 11.2 21.7899C11.08 21.8099 10.95 21.8199 10.83 21.8199C8.31 21.8199 5.79 21.8199 3.27 21.8199C2.52 21.8199 1.83 21.6399 1.26 21.1299C0.779995 20.7099 0.509995 20.1699 0.369995 19.5599C0.369995 13.9199 0.369995 8.27988 0.369995 2.63988C0.389995 2.54988 0.419995 2.46988 0.439995 2.37988C0.689995 1.52988 1.22 0.939883 2.03 0.589883C2.34 0.459883 2.67 0.429883 3 0.379883H11.08Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M3.27 22.19C2.34 22.19 1.6 21.94 1.01 21.41C0.51 20.96 0.18 20.39 0 19.64V2.58L0.08 2.27C0.36 1.32 0.97 0.63 1.88 0.24C2.2 0.1 2.52 0.06 2.82 0.02L2.95 0H11.12H11.16C11.35 0.04 11.93 0.15 12.21 0.73C12.38 1.09 12.38 1.5 12.21 1.86C12.04 2.21 11.71 2.46 11.32 2.55C11.14 2.59 10.97 2.59 10.83 2.59H3.16C2.88 2.6 2.75 2.66 2.67 2.76C2.6 2.85 2.56 2.93 2.56 3.03V3.25V18.93C2.56 19.06 2.56 19.15 2.58 19.22C2.65 19.52 2.91 19.59 3.12 19.59H8.52H9.21C9.8 19.59 10.38 19.59 10.98 19.59C11.69 19.59 12.21 20 12.33 20.65C12.4 20.99 12.33 21.34 12.12 21.62C11.91 21.9 11.62 22.09 11.27 22.15C11.13 22.17 10.98 22.18 10.84 22.18H3.27V22.19ZM0.74 2.69V19.56C0.87 20.06 1.12 20.51 1.51 20.85C1.97 21.25 2.53 21.44 3.27 21.44H10.83C10.94 21.44 11.04 21.43 11.15 21.41C11.29 21.39 11.41 21.31 11.5 21.19C11.59 21.07 11.61 20.93 11.58 20.79C11.52 20.49 11.31 20.34 10.96 20.34C10.37 20.34 9.79 20.34 9.2 20.34H7.16H3.11C2.46 20.34 1.98 19.98 1.84 19.39C1.8 19.24 1.8 19.09 1.8 18.96V3.26V3.02C1.8 2.75 1.91 2.51 2.08 2.3C2.45 1.85 2.97 1.85 3.15 1.85H10.81C10.92 1.85 11.04 1.85 11.15 1.83C11.31 1.8 11.45 1.69 11.52 1.55C11.59 1.4 11.59 1.23 11.52 1.08C11.45 0.94 11.34 0.83 11.04 0.76H2.92C2.65 0.81 2.4 0.84 2.17 0.94C1.46 1.25 1.01 1.75 0.79 2.49L0.73 2.69H0.74Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M18.6 12.0401C18.52 11.9901 18.43 12.0201 18.34 12.0201C15.12 12.0201 11.89 12.0201 8.66997 12.0201C8.51997 12.0201 8.35997 12.0201 8.20997 11.9901C7.77997 11.9201 7.46997 11.5401 7.46997 11.1101C7.46997 10.6701 7.77997 10.2901 8.19997 10.2201C8.34997 10.1901 8.50997 10.1901 8.65997 10.1901C11.88 10.1901 15.11 10.1901 18.33 10.1901H18.62C18.59 10.0801 18.52 10.0301 18.46 9.98013C17.28 8.82013 16.11 7.65013 14.93 6.50013C14.67 6.25013 14.54 5.96013 14.61 5.60013C14.76 4.89013 15.6 4.63013 16.13 5.13013C16.56 5.53013 16.97 5.95013 17.39 6.36013C18.74 7.69013 20.08 9.02013 21.42 10.3501C21.96 10.8801 21.96 11.3801 21.42 11.9001C19.68 13.6201 17.93 15.3401 16.19 17.0601C15.63 17.6101 14.79 17.4101 14.61 16.6801C14.53 16.3601 14.61 16.0701 14.84 15.8301C15.48 15.1901 16.12 14.5601 16.76 13.9301C17.35 13.3501 17.94 12.7601 18.53 12.1801C18.56 12.1501 18.6 12.1301 18.59 12.0701L18.6 12.0401Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M15.48 17.7199C15.36 17.7199 15.25 17.6999 15.13 17.6699C14.69 17.5499 14.37 17.1999 14.25 16.7399C14.14 16.2899 14.25 15.8599 14.58 15.5399C15.05 15.0699 15.52 14.5999 16 14.1399L17.76 12.3999H8.66997C8.49997 12.3999 8.31997 12.3899 8.14997 12.3599C7.53997 12.2599 7.08997 11.7299 7.08997 11.1099C7.08997 10.4799 7.52997 9.94994 8.13997 9.84995C8.30997 9.81994 8.48997 9.80995 8.65997 9.80995H17.76C16.73 8.78995 15.7 7.76994 14.66 6.74994C14.28 6.37994 14.14 5.95994 14.24 5.49994C14.34 5.03994 14.66 4.67994 15.11 4.53994C15.56 4.39994 16.04 4.50994 16.39 4.83994C16.73 5.14994 17.05 5.47994 17.38 5.79994L21.69 10.0599C22.03 10.3999 22.21 10.7499 22.21 11.1099C22.21 11.4699 22.04 11.8099 21.7 12.1499L16.47 17.3099C16.19 17.5899 15.84 17.7299 15.48 17.7299V17.7199ZM18.47 11.6399C18.57 11.6399 18.68 11.6499 18.79 11.7199L18.93 11.7999L18.97 11.9599C18.99 12.0599 19 12.2499 18.81 12.4199L16.53 14.6699C16.06 15.1299 15.59 15.5999 15.12 16.0699C14.98 16.2099 14.94 16.3699 14.98 16.5599C15.03 16.7599 15.16 16.8999 15.33 16.9499C15.53 17.0099 15.76 16.9299 15.93 16.7599L21.16 11.5999C21.35 11.4099 21.45 11.2399 21.45 11.0899C21.45 10.9399 21.35 10.7699 21.16 10.5799L16.85 6.31994C16.53 5.99994 16.21 5.67994 15.87 5.36994C15.72 5.22994 15.52 5.17994 15.33 5.23994C15.15 5.29994 15.01 5.44994 14.97 5.63994C14.94 5.77994 14.94 5.95994 15.18 6.19994C16.25 7.24994 17.31 8.29995 18.38 9.34995L18.71 9.67994C18.8 9.75994 18.92 9.86994 18.97 10.0699L19.09 10.5399H8.64997C8.51997 10.5399 8.37997 10.5399 8.24997 10.5699C8.00997 10.6099 7.82997 10.8299 7.82997 11.0899C7.82997 11.3499 8.00997 11.5699 8.24997 11.6099C8.37997 11.6299 8.50997 11.6399 8.64997 11.6399H18.32C18.32 11.6399 18.4 11.6399 18.45 11.6399H18.47Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconWalletContentProfile = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="20"
        height="23"
        viewBox="0 0 20 23"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(true)}
        className={className}
        {...rest}
      >
        <path
          d="M10.1813 21.9839C7.57699 21.9839 4.9714 21.9839 2.36713 21.9839C1.46702 21.9839 0.941955 21.3983 1.00512 20.4969C1.17356 18.1229 2.16053 16.1924 4.11998 14.808C5.20432 14.0421 6.42158 13.6171 7.75596 13.5407C9.37458 13.4486 10.9932 13.4315 12.6092 13.546C14.7581 13.6973 16.4912 14.6448 17.8256 16.3292C18.8126 17.5741 19.2363 19.0217 19.3521 20.5811C19.3982 21.2009 18.9047 22.0128 18.027 21.9997C15.4122 21.9589 12.7961 21.9852 10.1799 21.9852L10.1813 21.9839ZM10.1549 20.0402C12.4407 20.0402 14.7252 20.0363 17.011 20.0455C17.2966 20.0455 17.3743 19.9784 17.3045 19.6915C17.1163 18.9309 16.8229 18.2216 16.3583 17.5873C15.4516 16.3516 14.2028 15.6607 12.7092 15.5147C11.0998 15.3581 9.47591 15.4081 7.85992 15.491C5.557 15.6094 3.51201 17.4162 3.05274 19.681C2.98826 19.9981 3.0738 20.0468 3.36462 20.0455C5.62806 20.035 7.8915 20.0402 10.1549 20.0402Z"
          fill={hovered ? hoverColor : color}
          stroke="#07E993"
          strokeWidth="0.1"
        />
        <path
          d="M15.399 6.27314C15.4096 9.09717 13.1527 11.4711 10.1694 11.4619C7.24144 11.4527 4.96221 9.22482 4.93721 6.26392C4.91089 3.18723 7.52437 0.981691 10.1944 1.00011C13.0619 1.02117 15.4135 3.39515 15.4003 6.27314H15.399ZM13.4527 6.2534C13.4448 4.47291 11.9433 2.95957 10.1734 2.97404C8.39553 2.98983 6.8835 4.42422 6.90061 6.2534C6.91772 8.1839 8.41922 9.52091 10.1905 9.50906C12.021 9.4959 13.4172 8.09047 13.4541 6.2534H13.4527Z"
          fill={hovered ? hoverColor : color}
          stroke="#07E993"
          strokeWidth="0.1"
        />
      </svg>
    );
  },
);
export const IconMemoo = ({ className, color = '#07E993', hoverColor = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="99"
      height="39"
      viewBox="0 0 99 39"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M22.3379 24.8136C22.3468 27.8108 22.3201 30.8079 22.3869 33.8051C22.4047 34.5611 22.2733 35.2303 21.6471 35.7061C20.8784 36.2887 20.0339 36.8178 19.1493 37.2558C18.5187 37.5693 17.9995 37.3826 17.6408 36.72C15.6577 33.058 14.4321 29.1626 13.0306 25.3205C12.9392 25.0693 12.8367 24.8203 12.7409 24.5713C12.6451 24.5801 12.5471 24.589 12.4512 24.5979C12.3421 27.604 12.0479 30.6189 12.2039 33.6139C12.2774 35.0458 9.84423 37.0669 8.45604 37.0846C7.81208 37.0935 7.616 36.7133 7.50905 36.2397C7.1503 34.6478 6.93639 33.0113 6.37933 31.475C5.2474 28.3622 3.87704 25.3183 2.70054 22.2167C1.93403 20.1956 1.22323 18.15 0.688452 16.0733C-0.0602317 13.1607 2.00978 11.3797 4.51876 10.5815C4.853 10.4748 5.41229 10.5304 5.65071 10.7216C5.82451 10.8594 5.78217 11.4375 5.59055 11.6554C4.8998 12.447 5.00452 13.2852 5.29419 14.1123C6.17657 16.6381 7.11019 19.1483 8.03045 21.6652C8.0505 21.7208 8.11735 21.7609 8.24436 21.8943C8.2711 21.6097 8.30007 21.414 8.30452 21.2183C8.36914 17.1495 8.43376 13.0829 8.48724 9.014C8.49838 8.24692 8.93734 7.65772 9.55233 7.21081C10.2163 6.73055 10.9494 6.29032 11.7271 5.97681C12.527 5.65442 12.9771 5.90566 13.0529 6.65718C13.6434 12.3558 15.9117 17.6809 17.6586 23.1238C17.721 23.315 17.819 23.4973 18.0329 23.673C18.1778 22.2344 18.3003 20.7914 18.4675 19.3551C18.9488 15.2618 19.4256 11.1685 19.9515 7.0774C20.1966 5.17638 21.6048 4.07357 23.5456 3.43989C24.4101 3.15752 24.8335 3.46435 24.7577 4.25589C23.9155 12.8983 26.2729 21.0427 29.6598 29.0136C30.4508 30.8724 31.6229 32.5733 33.43 33.8362C35.7808 35.4793 38.3811 35.9218 41.2332 34.8812C41.5741 34.7567 41.9218 34.6011 42.2805 34.5677C42.617 34.5366 43.1072 34.5477 43.2743 34.7256C43.4459 34.9079 43.4548 35.4237 43.281 35.6038C42.5702 36.3354 41.8883 37.2047 40.9659 37.6472C35.8186 40.1063 30.3862 39.2502 27.0149 34.7656C25.2056 32.3577 24.1918 29.6429 23.2581 26.9036C23.0175 26.201 22.7969 25.494 22.5652 24.7869C22.4872 24.798 22.4114 24.8092 22.3334 24.8203L22.3379 24.8136Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M45.0608 25.0148C43.4899 25.8107 42.1909 26.8402 42.358 28.8924C42.3981 29.3816 42.3335 29.9241 41.5803 29.9218C40.2367 29.9174 39.0401 29.5839 37.984 28.5255C40.5754 27.0292 42.0037 24.6835 43.071 22.0954C44.145 19.4851 44.965 16.7903 44.6664 13.9199C44.3923 11.2985 42.8148 10.2157 40.2256 10.7449C39.8044 10.8316 39.3788 10.9494 38.9911 11.1273C35.1073 12.9149 32.2842 15.7031 31.0208 19.8475C30.6331 21.1193 30.4749 22.4778 30.5216 23.7897C30.7177 25.6907 31.072 27.5206 31.7806 29.0703C32.0391 29.4527 32.2753 30.0441 32.5382 30.4221C34.8734 33.775 38.6168 34.78 42.2064 32.8701C43.3139 32.2809 44.2854 31.5783 45.0474 30.7267C46.1304 29.5172 46.7899 28.0053 46.8189 26.0931C46.8389 24.7391 46.2975 24.3878 45.063 25.0125L45.0608 25.0148ZM36.5869 26.769C34.5191 23.9342 34.2807 19.2361 36.0632 16.3879C36.4153 15.8232 36.8944 15.2829 37.4358 14.9027C38.6591 14.0466 39.7755 14.4936 40.1119 15.9499C40.62 18.1422 40.0072 20.2322 39.3365 22.2777C38.7906 23.9409 38.1355 25.5862 36.5869 26.769Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M51.295 8.74738C51.4421 8.1982 51.6137 7.65346 51.7295 7.0976C52.2131 4.74745 53.9332 3.7736 56.0389 3.27555C57.3825 2.95982 58.227 3.37116 58.695 4.6763C59.3946 6.63513 59.9606 8.64288 60.589 10.6284C60.6892 10.9463 60.8073 11.2598 60.9722 11.7334C61.6407 10.3683 62.1821 9.14093 62.8306 7.97141C63.7932 6.23937 64.9273 4.62961 66.7767 3.70467C67.2224 3.48233 67.6903 3.28 68.1716 3.15104C70.0634 2.64188 70.3887 3.05099 70.3909 4.95423C70.3932 7.8002 70.5469 10.6551 70.8098 13.4922C71.2221 17.9434 71.7033 22.3925 72.305 26.8215C72.5835 28.8671 72.9868 30.9304 74.2591 32.6958C74.4262 32.927 74.2458 33.623 73.9984 33.8987C73.0291 34.9748 71.7479 35.5084 70.3107 35.6085C69.3303 35.6774 68.7821 34.977 68.5393 34.2055C67.8909 32.1533 67.16 30.0944 66.8347 27.9822C66.2709 24.3269 65.9879 20.6315 65.5846 16.9518C65.5401 16.5471 65.4755 16.1447 65.2771 15.7445C65.0031 18.6038 63.889 21.432 65.0298 24.3157C65.373 25.1807 65.1858 25.8188 64.5017 26.3502C64.1073 26.657 63.6907 26.9616 63.2339 27.1506C60.3283 28.3535 59.8269 27.7265 59.0871 25.1829C58.1179 21.8522 57.0706 18.5438 56.0523 15.2264C56.0233 15.1308 55.9364 15.0552 55.7247 14.7528C55.5599 17.7678 54.9515 20.5315 55.5108 23.3419C55.7136 24.3624 55.8607 25.3986 56.1191 26.4058C56.4289 27.6131 55.9698 28.4357 54.9694 29.0294C54.5059 29.3029 54.0246 29.5652 53.5188 29.7409C51.5334 30.4346 51.0455 30.1367 50.4929 28.1356C48.4206 20.6427 46.3261 13.1564 44.2293 5.67017C44.0132 4.89642 43.6478 4.14935 43.5297 3.36449C43.4673 2.95093 43.6522 2.24388 43.953 2.0749C45.1028 1.42789 46.3172 0.852026 47.5672 0.434023C48.3114 0.185 48.8306 0.640801 49.0378 1.49015C49.6305 3.92034 50.3012 6.33053 50.9407 8.7496C51.0611 8.7496 51.1814 8.7496 51.3039 8.7496L51.295 8.74738Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M77.5244 12.9712C78.663 12.3575 79.757 11.6238 80.9558 11.1635C82.4242 10.5988 83.4202 11.0301 84.3494 12.3108C87.6294 16.8399 87.6717 24.9242 84.4252 29.5023C83.4069 30.9386 82.0878 32.0214 80.4366 32.6617C77.999 33.6089 76.2676 32.9997 75.1424 30.6495C74.5385 29.3889 74.0929 28.0326 73.7408 26.6785C72.8518 23.2344 72.4395 19.7214 72.678 16.1618C72.8362 13.8072 73.5135 11.6838 75.7707 10.452C76.31 10.1585 76.8915 9.91618 77.4798 9.74275C78.2441 9.51819 79.1131 9.50707 79.5008 10.2919C79.9041 11.1102 79.1019 11.5682 78.5739 12.0373C78.2129 12.3575 77.8163 12.6399 77.433 12.9378C77.4642 12.9489 77.4932 12.96 77.5244 12.9712ZM80.2896 29.4244C80.4545 29.4311 80.6171 29.4356 80.782 29.4422C81.1274 28.4573 81.5641 27.4923 81.8048 26.4806C82.7339 22.5719 82.1969 18.841 80.2294 15.3413C80.0489 15.0211 79.5364 14.7121 79.1732 14.7054C78.5828 14.6943 77.9856 14.9367 77.1901 15.1168C77.3439 20.0483 77.6893 24.9821 80.2918 29.4267L80.2896 29.4244Z"
        fill={hovered ? hoverColor : color}
      />
      <path
        d="M98.8104 20.5649C98.0751 23.7444 97.0679 26.8127 93.9974 28.6581C93.4114 29.0094 92.7764 29.314 92.1257 29.5186C90.2807 30.0989 88.7767 29.5541 88.0191 27.7999C86.2677 23.7444 86.0739 19.5354 87.5445 15.3799C87.9322 14.2882 88.955 13.232 89.9599 12.5895C91.4194 11.6534 93.1017 11.0331 94.7439 10.4194C95.9204 9.97919 96.7181 10.4083 97.4623 11.7201C99.0243 14.4727 99.2315 17.4499 98.8082 20.5649H98.8104ZM91.845 17.0563C91.7046 19.6399 91.7425 22.228 92.9011 24.8472C93.8927 22.6082 94.1489 19.7778 93.6543 18.2147C92.9747 17.7789 92.4421 17.4365 91.845 17.0541V17.0563Z"
        fill={hovered ? hoverColor : color}
      />
    </svg>
  );
};
export const IconCopy = ({ className, color = '#FFFFFF', hoverColor = '#07E993', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="12"
      height="13"
      viewBox="0 0 12 13"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <path
        d="M8.697 9.9994C9.11837 9.9994 9.52769 10.0027 9.93634 9.99873C10.5815 9.99136 10.9968 9.57936 10.9975 8.93087C11.0008 6.64376 11.0008 4.35666 10.9975 2.06955C10.9961 1.4224 10.5801 1.00437 9.935 1.00236C8.09206 0.998343 6.24912 0.998343 4.40619 1.00236C3.74364 1.0037 3.33834 1.42173 3.33432 2.09366C3.33097 2.6028 3.33432 3.11261 3.33432 3.66731C2.92165 3.66731 2.5264 3.66597 2.13115 3.66731C1.39893 3.67066 1.00167 4.06792 1.001 4.80148C0.999665 7.03299 0.999665 9.26449 1.001 11.496C1.00167 12.2758 1.38889 12.6643 2.16532 12.665C3.95265 12.6664 5.73999 12.6664 7.52799 12.665C8.2649 12.665 8.66283 12.2698 8.66618 11.5389C8.66819 11.0612 8.66819 10.5842 8.6702 10.1066C8.6702 10.0858 8.68025 10.0657 8.697 9.9994ZM9.97587 2.01528V8.97308H4.35125V2.01528H9.97587ZM2.02263 11.6521V4.69296H3.33365C3.33365 6.10582 3.33231 7.49255 3.33365 8.87929C3.33432 9.59342 3.73426 9.99739 4.44236 9.99873C5.39699 10.0014 6.35162 9.99873 7.30558 9.99873C7.42148 9.99873 7.53804 9.99873 7.64724 9.99873V11.6521H2.02263Z"
        fill={hovered ? hoverColor : color}
        stroke={hovered ? hoverColor : color}
        strokeWidth="0.3"
      />
    </svg>
  );
};

export const IconShare = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="25"
        height="25"
        viewBox="0 0 25 25"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M16.8059 16.921C17.4584 16.239 18.1848 15.7978 18.979 15.6087C19.7733 15.4195 20.6243 15.4851 21.5218 15.7984L21.5216 15.7991C22.4179 16.1114 23.1201 16.6206 23.5978 17.2979C24.0758 17.9758 24.3225 18.8128 24.3225 19.7696C24.3225 21.1057 23.8828 22.2418 23.0426 23.0417C22.2764 23.7723 21.2513 24.1498 20.0742 24.1498C19.9823 24.1498 19.8905 24.1475 19.7987 24.1427L19.8064 23.9929M16.8059 16.921L8.81788 15.1159M16.8059 16.921C16.7128 17.0174 16.6651 17.043 16.6334 17.0495C16.6057 17.0552 16.561 17.0521 16.4553 16.9987L16.4548 16.9984C14.2942 15.9178 12.0216 14.7937 9.50656 13.5598C9.41209 13.5132 9.39857 13.4934 9.39297 13.4815C9.38398 13.4624 9.37485 13.4157 9.39445 13.2704L9.39457 13.2695C9.45438 12.8046 9.51223 12.1806 9.39782 11.5724C9.36798 11.4096 9.38118 11.3516 9.40077 11.3186C9.42438 11.2789 9.4794 11.2353 9.63853 11.158L9.63879 11.1579C11.8635 10.0727 14.1317 8.9508 16.3815 7.82206C16.5266 7.7495 16.5899 7.7391 16.6287 7.7455C16.6639 7.75129 16.7129 7.77676 16.8105 7.8877L16.8109 7.88816C17.9885 9.21575 19.9843 9.68571 21.6661 9.03411C23.2608 8.41881 24.3335 6.7568 24.35 4.91261V4.91127V4.89524H24.3502L24.3498 4.88672C24.2533 3.19176 23.4998 1.94666 22.1076 1.21227C20.5107 0.368662 18.8802 0.475587 17.4084 1.52245C16.042 2.4923 15.4716 3.9474 15.7521 5.7063L15.9002 5.68268M16.8059 16.921L24.2 4.89524C24.1062 3.24711 23.3785 2.05222 22.0375 1.3449C20.4906 0.527702 18.9208 0.63071 17.4952 1.64477C16.1794 2.57871 15.6279 3.97504 15.9002 5.68268M19.8064 23.9929L19.7992 24.1428C18.4755 24.0791 17.3278 23.529 16.5792 22.5869C15.8119 21.6216 15.5286 20.3403 15.7732 18.9875L15.7733 18.9873C15.799 18.8465 15.7898 18.795 15.7756 18.7672C15.7611 18.7388 15.7242 18.7013 15.5961 18.6384L15.6623 18.5038M19.8064 23.9929C18.5204 23.9311 17.4151 23.3978 16.6966 22.4936C15.9597 21.5665 15.6829 20.3304 15.9208 19.0142M19.8064 23.9929C19.8957 23.9975 19.9849 23.9998 20.0742 23.9998C21.2183 23.9998 22.2046 23.6336 22.9391 22.9331C23.7446 22.1663 24.1725 21.0721 24.1725 19.7696L15.9208 19.0142M15.6623 18.5038L15.5965 18.6386C13.3717 17.5533 11.0669 16.4131 8.75057 15.25M15.6623 18.5038C15.9231 18.6319 15.9735 18.7258 15.9208 19.0142M15.6623 18.5038L15.9208 19.0142M8.75057 15.25L8.81788 15.1159M8.75057 15.25C8.75064 15.25 8.75071 15.2501 8.75078 15.2501L8.81788 15.1159M8.75057 15.25C8.61753 15.1835 8.56286 15.177 8.53325 15.1825C8.50762 15.1872 8.46675 15.2074 8.38305 15.3109M8.81788 15.1159C8.54786 14.9809 8.4403 15.0015 8.26639 15.2167M8.38305 15.3109C8.38307 15.3109 8.3831 15.3109 8.38312 15.3109L8.26639 15.2167M8.38305 15.3109L8.26639 15.2167M8.38305 15.3109C7.07186 16.9354 4.82817 17.0374 3.29649 16.3184C1.4951 15.4755 0.586615 13.6704 0.916955 11.6286L8.26639 15.2167M15.9002 5.68268C15.9643 6.09014 15.8957 6.2229 15.5318 6.39916M15.9002 5.68268L15.7521 5.70598C15.7836 5.90682 15.774 5.99902 15.7431 6.05898C15.7127 6.11818 15.6452 6.17757 15.4666 6.26409M15.5318 6.39916L15.4666 6.26409M15.5318 6.39916C13.3373 7.459 11.1039 8.56462 8.8911 9.68626M15.5318 6.39916L15.4664 6.26417C15.4665 6.26414 15.4665 6.26411 15.4666 6.26409M15.4666 6.26409L8.8911 9.68626M8.8911 9.68626L8.82328 9.55247C8.65464 9.63796 8.57737 9.65252 8.52817 9.64422C8.48365 9.63671 8.42691 9.60408 8.31977 9.4757L8.3195 9.47538C7.24826 8.19899 5.74913 7.7747 4.00844 8.23417M8.8911 9.68626L0.916958 11.6286C1.05823 10.7548 1.39525 10.0189 1.91893 9.44365C2.44256 8.86845 3.14603 8.46133 4.00844 8.23417M8.8911 9.68626C8.55243 9.85794 8.42429 9.83505 8.20461 9.57181L8.8911 9.68626ZM4.00844 8.23417C4.00846 8.23416 4.00849 8.23416 4.00852 8.23415L4.04672 8.3792L4.00844 8.23417ZM18.2759 21.634L18.2756 21.6337C17.7835 21.1479 17.5125 20.4886 17.5125 19.7719C17.5125 18.4671 18.6517 17.3559 20.0032 17.3559C21.3725 17.3559 22.4852 18.4438 22.4917 19.7703L22.492 19.832L22.4936 19.8336C22.4694 21.2343 21.3969 22.3286 20.0339 22.3436C19.3659 22.3478 18.7456 22.0996 18.2759 21.634ZM18.237 6.72985L18.237 6.72983C17.7679 6.265 17.5102 5.6552 17.5102 5.01428C17.5102 3.63466 18.5964 2.53575 19.9861 2.51353H19.9861H19.9862H19.9863H19.9864H19.9864H19.9865H19.9866H19.9867H19.9868H19.9868H19.9869H19.987H19.9871H19.9872H19.9872H19.9873H19.9874H19.9875H19.9876H19.9876H19.9877H19.9878H19.9879H19.988H19.988H19.9881H19.9882H19.9883H19.9884H19.9884H19.9885H19.9886H19.9887H19.9888H19.9888H19.9889H19.989H19.9891H19.9892H19.9893H19.9893H19.9894H19.9895H19.9896H19.9897H19.9897H19.9898H19.9899H19.99H19.9901H19.9901H19.9902H19.9903H19.9904H19.9905H19.9905H19.9906H19.9907H19.9908H19.9909H19.9909H19.991H19.9911H19.9912H19.9913H19.9913H19.9914H19.9915H19.9916H19.9917H19.9917H19.9918H19.9919H19.992H19.9921H19.9921H19.9922H19.9923H19.9924H19.9925H19.9925H19.9926H19.9927H19.9928H19.9929H19.993H19.993H19.9931H19.9932H19.9933H19.9934H19.9934H19.9935H19.9936H19.9937H19.9938H19.9938H19.9939H19.994H19.9941H19.9942H19.9942H19.9943H19.9944H19.9945H19.9946H19.9946H19.9947H19.9948H19.9949H19.995H19.995H19.9951H19.9952H19.9953H19.9954H19.9954H19.9955H19.9956H19.9957H19.9958H19.9958H19.9959H19.996H19.9961H19.9962H19.9962H19.9963H19.9964H19.9965H19.9966H19.9967H19.9967H19.9968H19.9969H19.997H19.9971H19.9971H19.9972H19.9973H19.9974H19.9975H19.9975H19.9976H19.9977H19.9978H19.9979H19.9979H19.998H19.9981H19.9982H19.9983H19.9983H19.9984H19.9985H19.9986H19.9987H19.9987H19.9988H19.9989H19.999H19.9991H19.9991H19.9992H19.9993H19.9994H19.9995H19.9995H19.9996H19.9997H19.9998H19.9999H19.9999H20H20.0001H20.0002H20.0003H20.0004H20.0004H20.0005H20.0006H20.0007H20.0008H20.0008H20.0009H20.001H20.0011H20.0012H20.0012H20.0013H20.0014H20.0015H20.0016H20.0016H20.0017H20.0018H20.0019H20.002H20.002H20.0021H20.0022H20.0023H20.0024H20.0024H20.0025H20.0026H20.0027H20.0028H20.0028H20.0029H20.003H20.0031H20.0032H20.0032H20.0033H20.0034H20.0035H20.0036H20.0036H20.0037H20.0038H20.0039H20.004H20.0041H20.0041H20.0042H20.0043H20.0044H20.0045H20.0045H20.0046H20.0047H20.0048H20.0049H20.0049H20.005H20.0051H20.0052H20.0053H20.0053H20.0054H20.0055H20.0056H20.0057H20.0057H20.0058H20.0059H20.006H20.0061H20.0061H20.0062H20.0063H20.0064H20.0065H20.0065H20.0066H20.0067H20.0068H20.0069H20.0069H20.007H20.0071H20.0072H20.0073H20.0074H20.0074H20.0075H20.0076H20.0077H20.0078H20.0078H20.0079H20.008H20.0081H20.0082H20.0082H20.0083H20.0084H20.0085H20.0086H20.0086H20.0087H20.0088H20.0089H20.009H20.009H20.0091H20.0092H20.0093H20.0094H20.0094H20.0095H20.0096H20.0097H20.0098H20.0098H20.0099H20.01H20.0101H20.0102H20.0102H20.0103H20.0104H20.0105H20.0106H20.0106H20.0107H20.0108H20.0109H20.011H20.0111H20.0111H20.0112H20.0113H20.0114H20.0115H20.0115H20.0116H20.0117H20.0118H20.0119H20.0119H20.012H20.0121H20.0122H20.0123H20.0123H20.0124H20.0125H20.0126H20.0127H20.0127H20.0128H20.0129H20.013H20.0131H20.0131H20.0132H20.0133H20.0134H20.0135H20.0135H20.0136H20.0137H20.0138H20.0139H20.0139H20.014H20.0141H20.0142H20.0143H20.0143H20.0144H20.0145H20.0146H20.0147H20.0148H20.0148H20.0149H20.015H20.0151H20.0152H20.0152H20.0153H20.0154H20.0155H20.0156H20.0156H20.0157H20.0158H20.0159H20.016H20.016H20.0161H20.0162H20.0163H20.0164H20.0164H20.0165H20.0166H20.0167H20.0168H20.0168H20.0169H20.017H20.0171H20.0172H20.0172H20.0173H20.0174H20.0175H20.0176H20.0176H20.0177H20.0178H20.0179H20.018H20.018H20.0181H20.0182H20.0183H20.0184H20.0185H20.0185H20.0186H20.0187H20.0188H20.0189H20.0189H20.019H20.0191H20.0192H20.0193H20.0193H20.0194H20.0195H20.0196H20.0197H20.0197H20.0198H20.0199H20.02H20.0201H20.0201H20.0202H20.0203H20.0204H20.0205H20.0205H20.0206H20.0207H20.0208H20.0209H20.0209H20.021H20.0211H20.0212H20.0213H20.0213H20.0214H20.0215H20.0216H20.0217H20.0217H20.0218H20.0219H20.022H20.0221H20.0222H20.0222H20.0223H20.0224H20.0225H20.0226H20.0226H20.0227H20.0228H20.0229H20.023H20.023H20.0231H20.0232H20.0233H20.0234H20.0234H20.0235H20.0236H20.0237H20.0238H20.0238H20.0239H20.024H20.0241H20.0242H20.0242H20.0243H20.0244H20.0245H20.0246H20.0246H20.0247H20.0248H20.0249H20.025H20.025H20.0251H20.0252H20.0253H20.0254H20.0255H20.0255H20.0256H20.0257H20.0258H20.0259H20.0259H20.026H20.0261C20.6805 2.51353 21.2901 2.76156 21.7514 3.21425C22.23 3.68657 22.4939 4.32532 22.4939 5.01885C22.4939 6.35587 21.391 7.45582 20.0301 7.46695H20.03H20.03H20.03H20.0299H20.0299H20.0298H20.0298H20.0298H20.0297H20.0297H20.0296H20.0296H20.0296H20.0295H20.0295H20.0294H20.0294H20.0294H20.0293H20.0293H20.0293H20.0292H20.0292H20.0291H20.0291H20.0291H20.029H20.029H20.0289H20.0289H20.0289H20.0288H20.0288H20.0288H20.0287H20.0287H20.0286H20.0286H20.0286H20.0285H20.0285H20.0285H20.0284H20.0284H20.0283H20.0283H20.0283H20.0282H20.0282H20.0282H20.0281H20.0281H20.028H20.028H20.028H20.0279H20.0279H20.0279H20.0278H20.0278H20.0278H20.0277H20.0277H20.0276H20.0276H20.0276H20.0275H20.0275H20.0275H20.0274H20.0274H20.0273H20.0273H20.0273H20.0272H20.0272H20.0272H20.0271H20.0271H20.0271H20.027H20.027H20.0269H20.0269H20.0269H20.0268H20.0268H20.0268H20.0267H20.0267H20.0267H20.0266H20.0266H20.0266H20.0265H20.0265H20.0264H20.0264H20.0264H20.0263H20.0263H20.0263H20.0262H20.0262H20.0262H20.0261H20.0261H20.0261H20.026H20.026H20.026H20.0259H20.0259H20.0258H20.0258H20.0258H20.0257H20.0257H20.0257H20.0256H20.0256H20.0256H20.0255H20.0255H20.0255H20.0254H20.0254H20.0254H20.0253H20.0253H20.0253H20.0252H20.0252H20.0251H20.0251H20.0251H20.025H20.025H20.025H20.0249H20.0249H20.0249H20.0248H20.0248H20.0248H20.0247H20.0247H20.0247H20.0246H20.0246H20.0246H20.0245H20.0245H20.0245H20.0244H20.0244H20.0244H20.0243H20.0243H20.0243H20.0242H20.0242H20.0241H20.0241H20.0241H20.024H20.024H20.024H20.0239H20.0239H20.0239H20.0238H20.0238H20.0238H20.0237H20.0237H20.0237H20.0236H20.0236H20.0236H20.0235H20.0235H20.0235H20.0234H20.0234H20.0234H20.0233H20.0233H20.0233H20.0232H20.0232H20.0232H20.0231H20.0231H20.0231H20.023H20.023H20.023H20.0229H20.0229H20.0229H20.0228H20.0228H20.0228H20.0227H20.0227H20.0227H20.0226H20.0226H20.0226H20.0225H20.0225H20.0225H20.0224H20.0224H20.0224H20.0223H20.0223H20.0223H20.0222H20.0222H20.0222H20.0221H20.0221H20.0221H20.022H20.022H20.022H20.0219H20.0219H20.0219H20.0218H20.0218H20.0218H20.0217H20.0217H20.0217H20.0216H20.0216H20.0216H20.0215H20.0215H20.0215H20.0214H20.0214H20.0214H20.0213H20.0213H20.0212H20.0212H20.0212H20.0212H20.0211H20.0211H20.021H20.021H20.021H20.0209H20.0209H20.0209H20.0208H20.0208H20.0208H20.0207H20.0207H20.0207H20.0206H20.0206H20.0206H20.0205H20.0205H20.0205H20.0204H20.0204H20.0204H20.0203H20.0203H20.0203H20.0202H20.0202H20.0202H20.0201H20.0201H20.0201H20.02H20.02H20.02H20.0199H20.0199H20.0199H20.0198H20.0198H20.0198H20.0197H20.0197H20.0197H20.0196H20.0196H20.0196H20.0195H20.0195H20.0195H20.0194H20.0194H20.0194H20.0193H20.0193H20.0193H20.0192H20.0192H20.0192H20.0191H20.0191H20.0191H20.019H20.019H20.019H20.0189H20.0189H20.0189H20.0188H20.0188H20.0188H20.0187H20.0187H20.0186H20.0186H20.0186H20.0185H20.0185H20.0185H20.0184H20.0184H20.0184H20.0183H20.0183H20.0183H20.0182H20.0182H20.0182H20.0181H20.0181H20.0181H20.018H20.018H20.018H20.0179H20.0179H20.0179H20.0178H20.0178H20.0178H20.0177H20.0177H20.0176H20.0176H20.0176H20.0175H20.0175H20.0175H20.0174H20.0174H20.0174H20.0173H20.0173H20.0173H20.0172H20.0172H20.0172H20.0171H20.0171H20.017H20.017H20.017H20.0169C19.3476 7.46695 18.7172 7.20591 18.237 6.72985ZM2.69786 12.4045L2.69786 12.4044C2.68709 11.0902 3.82715 9.92276 5.12774 9.90722H5.12777H5.12782H5.12787H5.12792H5.12798H5.12803H5.12808H5.12814H5.12819H5.12824H5.12829H5.12834H5.1284H5.12845H5.1285H5.12855H5.1286H5.12866H5.12871H5.12876H5.12881H5.12886H5.12892H5.12897H5.12902H5.12907H5.12912H5.12917H5.12923H5.12928H5.12933H5.12938H5.12943H5.12948H5.12953H5.12958H5.12964H5.12969H5.12974H5.12979H5.12984H5.12989H5.12994H5.12999H5.13004H5.13009H5.13014H5.1302H5.13025H5.1303H5.13035H5.1304H5.13045H5.1305H5.13055H5.1306H5.13065H5.1307H5.13075H5.1308H5.13085H5.1309H5.13095H5.131H5.13105H5.1311H5.13115H5.1312H5.13125H5.1313H5.13135H5.1314H5.13145H5.1315H5.13155H5.1316H5.13165H5.1317H5.13175H5.1318H5.13185H5.1319H5.13195H5.13199H5.13204H5.13209H5.13214H5.13219H5.13224H5.13229H5.13234H5.13239H5.13244H5.13249H5.13254H5.13259H5.13263H5.13268H5.13273H5.13278H5.13283H5.13288H5.13293H5.13298H5.13303H5.13307H5.13312H5.13317H5.13322H5.13327H5.13332H5.13337H5.13341H5.13346H5.13351H5.13356H5.13361H5.13366H5.13371H5.13375H5.1338H5.13385H5.1339H5.13395H5.134H5.13404H5.13409H5.13414H5.13419H5.13424H5.13428H5.13433H5.13438H5.13443H5.13448H5.13452H5.13457H5.13462H5.13467H5.13472H5.13476H5.13481H5.13486H5.13491H5.13496H5.135H5.13505H5.1351H5.13515H5.1352H5.13524H5.13529H5.13534H5.13539H5.13543H5.13548H5.13553H5.13558H5.13562H5.13567H5.13572H5.13577H5.13581H5.13586H5.13591H5.13596H5.136H5.13605H5.1361H5.13615H5.13619H5.13624H5.13629H5.13634H5.13638H5.13643H5.13648H5.13653H5.13657H5.13662H5.13667H5.13671H5.13676H5.13681H5.13686H5.1369H5.13695H5.137H5.13704H5.13709H5.13714H5.13719H5.13723H5.13728H5.13733H5.13738H5.13742H5.13747H5.13752H5.13756H5.13761H5.13766H5.1377H5.13775H5.1378H5.13785H5.13789H5.13794H5.13799H5.13803H5.13808H5.13813H5.13818H5.13822H5.13827H5.13832H5.13836H5.13841H5.13846H5.1385H5.13855H5.1386H5.13864H5.13869H5.13874H5.13879H5.13883H5.13888H5.13893H5.13897H5.13902H5.13907H5.13911H5.13916H5.13921H5.13926H5.1393H5.13935H5.1394H5.13944H5.13949H5.13954H5.13958H5.13963H5.13968H5.13972H5.13977H5.13982H5.13986H5.13991H5.13996H5.14001H5.14005H5.1401H5.14015H5.14019H5.14024H5.14029H5.14033H5.14038H5.14043H5.14048H5.14052H5.14057H5.14062H5.14066H5.14071H5.14076H5.1408H5.14085H5.1409H5.14095H5.14099H5.14104H5.14109H5.14113H5.14118H5.14123H5.14127H5.14132H5.14137H5.14142H5.14146H5.14151H5.14156H5.1416H5.14165H5.1417H5.14175H5.14179H5.14184H5.14189H5.14194H5.14198H5.14203H5.14208H5.14212H5.14217H5.14222H5.14227H5.14231H5.14236H5.14241H5.14246H5.1425H5.14255H5.1426H5.14264H5.14269H5.14274H5.14279H5.14283H5.14288H5.14293H5.14298H5.14302H5.14307H5.14312H5.14317H5.14322H5.14326H5.14331H5.14336H5.14341H5.14345H5.1435H5.14355H5.1436H5.14364H5.14369H5.14374H5.14379H5.14384H5.14388H5.14393H5.14398H5.14403H5.14407H5.14412H5.14417H5.14422H5.14427H5.14431H5.14436H5.14441H5.14446H5.14451H5.14456H5.1446H5.14465H5.1447H5.14475H5.1448H5.14484H5.14489H5.14494H5.14499H5.14504H5.14509H5.14513H5.14518H5.14523H5.14528H5.14533H5.14538H5.14543H5.14547H5.14552H5.14557H5.14562H5.14567H5.14572H5.14577H5.14581H5.14586H5.14591H5.14596H5.14601H5.14606H5.14611H5.14616H5.14621H5.14626H5.1463H5.14635H5.1464H5.14645H5.1465H5.14655H5.1466H5.14665H5.1467H5.14675H5.1468H5.14685H5.1469H5.14694H5.14699H5.14704H5.14709H5.14714H5.14719H5.14724H5.14729H5.14734H5.14739H5.14744H5.14749H5.14754H5.14759H5.14764H5.14769H5.14774H5.14779H5.14784H5.14789H5.14794H5.14799H5.14804H5.14809H5.14814H5.14819H5.14824H5.14829H5.14834H5.14839H5.14844H5.1485H5.14855H5.1486H5.14865H5.1487H5.14875H5.1488H5.14885H5.1489H5.14895H5.149H5.14905H5.14911H5.14916H5.14921H5.14926H5.14931H5.14936H5.14941H5.14946H5.14952H5.14957H5.14962H5.14967H5.14972H5.14977H5.14982H5.14988H5.14993H5.14998H5.15003H5.15008H5.15014H5.15019H5.15024H5.15029H5.15034H5.15039H5.15045H5.1505H5.15055H5.1506H5.15066H5.15071H5.15076H5.15081H5.15087H5.15092H5.15097H5.15102H5.15108H5.15113H5.15118H5.15124H5.15129H5.15134H5.15139H5.15145H5.1515H5.15155H5.15161H5.15166H5.15171H5.15177H5.15182H5.15187H5.15193H5.15198C5.76806 9.90722 6.40401 10.1776 6.89125 10.6562L6.89148 10.6565C7.38314 11.1374 7.66377 11.7689 7.67018 12.3843C7.67659 13.0097 7.41069 13.645 6.93763 14.127C6.45806 14.6133 5.81825 14.8905 5.17894 14.8927H5.16571C3.7925 14.8927 2.70868 13.8052 2.69786 12.4045Z"
          fill="#5D64A2"
          stroke="#5D64A2"
          strokeWidth="0.3"
        />
      </svg>
    );
  },
);

export const IconTranspond = forwardRef(
  ({ className, hoverColor = '#B53BFF', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="22"
        height="21"
        viewBox="0 0 22 21"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M12.1071 3.78195C12.5905 3.78195 13.0726 3.76933 13.5547 3.78699C13.7895 3.79583 13.8627 3.72515 13.8589 3.48914C13.8488 2.74449 13.8564 1.99858 13.8665 1.25393C13.874 0.740246 14.153 0.379281 14.5884 0.158411C15.0402 -0.0712942 15.5173 -0.058673 15.93 0.245497C16.6052 0.744033 17.1972 1.3448 17.8245 1.90266C18.9705 2.91992 20.1038 3.94981 21.2435 4.97338C21.4619 5.17027 21.6865 5.36338 21.8254 5.62716C22.1522 6.24812 22.0172 6.91704 21.4354 7.44461C20.1606 8.60071 18.8771 9.74671 17.5947 10.8952C17.1025 11.337 16.6128 11.78 16.1143 12.2141C15.5892 12.671 14.8295 12.7114 14.3145 12.3252C14.0368 12.117 13.8791 11.8355 13.8702 11.4973C13.8513 10.711 13.8463 9.9234 13.8564 9.1371C13.8601 8.88594 13.8046 8.78497 13.5295 8.7976C12.6637 8.83546 11.7915 8.73197 10.9371 8.99575C9.47051 9.44759 8.48227 11.207 8.89119 12.6811C9.00983 13.1102 9.2307 13.4498 9.61817 13.7009C10.0574 13.9849 10.1445 14.4847 9.86807 14.8431C9.66109 15.1107 9.19663 15.1839 8.79654 14.9782C7.91305 14.5238 7.1053 13.9533 6.45279 13.2024C5.00388 11.5351 4.6732 9.61671 5.37494 7.55693C6.05901 5.54512 7.52937 4.36252 9.59419 3.91194C10.4221 3.73146 11.264 3.78826 12.1033 3.78195H12.1071Z"
          fill={hovered ? hoverColor : color}
        />
        <path
          d="M0.00129186 10.7031C0.00129186 8.66735 0.00507821 6.63155 2.97482e-05 4.59576C-0.00249448 3.84101 0.15527 3.13675 0.60837 2.5221C1.25079 1.65124 2.16077 1.31047 3.20076 1.26756C3.78764 1.24358 4.37579 1.25494 4.96393 1.2663C5.49528 1.27513 5.94081 1.47328 6.15158 1.98949C6.351 2.47667 6.3043 2.95753 5.94207 3.37151C5.68965 3.66053 5.35519 3.76276 4.98413 3.76403C4.42753 3.76655 3.8722 3.76403 3.31561 3.76529C2.69465 3.76655 2.49523 3.96849 2.4864 4.59828C2.4864 4.65129 2.4864 4.70304 2.4864 4.75605C2.4864 8.72288 2.4864 12.6884 2.48766 16.6553C2.48766 16.8118 2.49776 16.9695 2.51921 17.1248C2.56213 17.4239 2.75018 17.5855 3.04173 17.6246C3.15532 17.6397 3.27143 17.6359 3.38755 17.6359C7.41622 17.6359 11.4462 17.6359 15.4748 17.6359C16.1627 17.6359 16.3697 17.4277 16.3747 16.7361C16.3785 16.1593 16.3671 15.5812 16.3886 15.0057C16.4151 14.333 16.92 13.8723 17.6053 13.8622C18.254 13.8521 18.8182 14.3191 18.8321 14.9628C18.8548 15.9851 18.9987 17.0238 18.6667 18.0247C18.2729 19.2123 17.4223 19.8737 16.1993 20.0794C15.8143 20.1438 15.4269 20.14 15.0381 20.14C11.1458 20.14 7.25215 20.1425 3.35978 20.1362C2.55834 20.1349 1.80359 19.9582 1.1536 19.4446C0.461964 18.8981 0.117407 18.1723 0.0252721 17.3141C0.00129186 17.0857 0.00129186 16.8534 0.00129186 16.6225C2.97482e-05 14.6498 0.00129186 12.6771 0.00129186 10.7044V10.7031Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);

export const IconWallet = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg width="23" height="20" viewBox="0 0 23 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M11.4885 19.9995C8.70682 19.9995 5.92514 20.0023 3.14203 19.9995C1.39231 19.9952 -0.00717871 18.8263 2.77064e-05 16.9211C0.0187644 12.2842 0.00146899 7.64737 0.00867541 3.0105C0.0101167 1.5408 0.83309 0.475048 2.24266 0.105474C2.56263 0.0223912 2.9071 0.00520171 3.24147 0.00520171C8.70826 -0.000528131 14.1765 -0.00482551 19.6447 0.0109315C20.0728 0.0109315 20.5311 0.101177 20.9231 0.270207C21.4665 0.503698 21.566 1.05376 21.5314 1.57518C21.4896 2.20259 21.1062 2.62947 20.5513 2.75266C20.2847 2.81139 20.0065 2.84577 19.7341 2.84577C14.4705 2.8515 9.2055 2.85007 3.94194 2.8515C3.77475 2.8515 3.60468 2.8558 3.44181 2.89018C3.06996 2.96753 2.8408 3.25975 2.86242 3.60068C2.88692 3.98744 3.12761 4.24385 3.51964 4.28109C3.68683 4.29685 3.85546 4.29255 4.02265 4.29255C9.32225 4.29255 14.6233 4.29255 19.9229 4.29255C21.1206 4.29255 22.079 4.75094 22.644 5.82529C22.8429 6.20202 22.9726 6.66327 22.977 7.08585C23.0029 10.4593 23.0087 13.8327 22.9842 17.2047C22.9726 18.7847 21.6351 19.9937 19.9777 19.9966C17.1484 20.0009 14.3177 19.9966 11.4885 19.9966V19.9995ZM18.6935 13.5606C19.5237 13.5663 20.1852 12.9718 20.1376 12.1754C20.0843 11.2944 19.6606 10.7315 18.7137 10.7071C17.9037 10.6856 17.3127 11.2013 17.2752 12.1539C17.2435 12.969 17.8561 13.5534 18.6935 13.5591V13.5606Z"
          fill="#07E993"
        />
      </svg>
    );
  },
);
export const IconHorn = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="27"
        height="20"
        viewBox="0 0 27 20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M22.1913 0.365234C22.4482 0.560057 22.7362 0.725232 22.9593 0.952525C27.9258 5.9925 27.8821 14.5082 22.8689 19.5171C22.2915 20.0931 21.6647 20.1567 21.1325 19.6922C20.5932 19.2221 20.5819 18.5077 21.1028 17.8866C21.2087 17.7609 21.3202 17.6409 21.4303 17.5209C22.7997 16.0132 23.6934 14.2626 24.0534 12.2607C24.6844 8.75248 23.8219 5.64238 21.491 2.94028C21.4303 2.86969 21.3654 2.80052 21.3033 2.73134C20.4153 1.74029 20.5042 1.08805 21.6294 0.365234C21.8172 0.365234 22.0035 0.365234 22.1913 0.365234Z"
          fill="#07E993"
        />
        <path
          d="M5.05691 0.365234C6.19761 1.10217 6.27244 1.74593 5.33362 2.7864C1.45129 7.09085 1.43011 13.2362 5.28421 17.5604C5.36185 17.648 5.44091 17.7341 5.51574 17.823C6.06914 18.4696 6.06632 19.191 5.50868 19.6809C4.9835 20.1425 4.36657 20.079 3.77645 19.4734C2.36893 18.0291 1.31435 16.3562 0.714349 14.4306C0.410821 13.4565 0.234352 12.4428 0 11.4475C0 10.6061 0 9.76471 0 8.9219C0.0423527 8.7666 0.10447 8.61272 0.125646 8.4546C0.461645 5.86262 1.46682 3.56145 3.16798 1.57935C3.55481 1.12758 4.04892 0.767585 4.49504 0.365234C4.6828 0.365234 4.86915 0.365234 5.05691 0.365234Z"
          fill="#07E993"
        />
        <path
          d="M21.034 10.1565C20.9902 12.2035 20.3013 13.9908 18.8768 15.4788C18.3079 16.0745 17.6034 16.1381 17.0853 15.6538C16.5672 15.171 16.5785 14.4722 17.1135 13.8482C19.1196 11.5033 19.114 8.89859 17.098 6.50142C16.5728 5.87743 16.5757 5.16872 17.1037 4.69579C17.6204 4.23273 18.3517 4.30191 18.9079 4.89061C20.2999 6.36872 20.9803 8.13765 21.0354 10.1565H21.034Z"
          fill="#07E993"
        />
        <path
          d="M5.62433 10.1569C5.68786 8.15506 6.3415 6.40165 7.70808 4.93625C8.29961 4.30237 9.02525 4.2219 9.55748 4.70472C10.1109 5.2059 10.094 5.87366 9.50948 6.55695C7.56408 8.8327 7.56832 11.5362 9.52219 13.8571C10.0685 14.5066 10.0728 15.1461 9.5349 15.6585C9.02243 16.1456 8.32784 16.0849 7.74902 15.4722C6.33585 13.9786 5.6695 12.1828 5.62433 10.1569Z"
          fill="#07E993"
        />
        <path
          d="M11.2901 10.1701C11.2999 9.04774 12.2359 8.12586 13.3555 8.13434C14.4778 8.14281 15.4011 9.07739 15.3926 10.1969C15.3842 11.3207 14.4496 12.2411 13.3286 12.2313C12.2035 12.2214 11.2802 11.2868 11.2901 10.1701Z"
          fill="#07E993"
        />
      </svg>
    );
  },
);
export const IconSearch = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g clipPath="url(#clip0_1757_1236)">
          <path
            d="M21.1251 10.5614C21.1251 12.8924 20.3685 15.0446 19.0944 16.7916L25.5236 23.2243C26.1583 23.8589 26.1583 24.8891 25.5236 25.5237C24.8889 26.1582 23.8585 26.1582 23.2238 25.5237L16.7947 19.0909C15.0473 20.3711 12.8947 21.1212 10.5633 21.1212C4.7277 21.1212 0 16.3944 0 10.5614C0 4.72842 4.7277 0 10.5633 0C16.399 0 21.1267 4.72684 21.1267 10.5614H21.1251ZM10.5633 17.8724C14.6025 17.8724 17.8757 14.5983 17.8757 10.5614C17.8757 6.52453 14.601 3.2504 10.5633 3.2504C6.52572 3.2504 3.25099 6.52453 3.25099 10.5614C3.25099 14.5983 6.52572 17.8724 10.5633 17.8724Z"
            fill="#07E993"
          />
        </g>
        <defs>
          <clipPath id="clip0_1757_1236">
            <rect width="26" height="26" fill="white" />
          </clipPath>
        </defs>
      </svg>
    );
  },
);
export const IconClear = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
        <rect width="22" height="22" rx="5" fill="#2B526E" />
        <path
          d="M13.1523 8.0625L9.15625 14.8535C9.09375 14.9551 8.99414 15.0059 8.85742 15.0059C8.72852 15.0059 8.60742 14.9629 8.49414 14.877C8.38477 14.7871 8.33008 14.6738 8.33008 14.5371C8.33008 14.416 8.36914 14.2871 8.44727 14.1504L12.4434 7.36523C12.5098 7.25977 12.6133 7.20703 12.7539 7.20703C12.8789 7.20703 12.9961 7.25 13.1055 7.33594C13.2188 7.41797 13.2754 7.52734 13.2754 7.66406C13.2754 7.79297 13.2344 7.92578 13.1523 8.0625Z"
          fill="#07E993"
        />
      </svg>
    );
  },
);
export const IconSetting = forwardRef(
  ({ className, hoverColor = '#1F3B4F', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
          d="M22.5333 26C21.8954 26 21.3781 25.4827 21.3781 24.8445V11.6464C19.5734 11.0081 18.6278 9.02709 19.2659 7.22188C19.6149 6.23469 20.3912 5.45816 21.3781 5.10906V1.15556C21.3781 0.517343 21.8954 0 22.5333 0C23.1713 0 23.6886 0.517343 23.6886 1.15556V5.10918C25.4933 5.74751 26.4389 7.72848 25.8008 9.53369C25.4518 10.5209 24.6755 11.2974 23.6886 11.6465V24.8446C23.6886 25.4828 23.1713 26.0001 22.5333 26.0001V26ZM22.5333 7.22223C21.8951 7.22223 21.3778 7.73957 21.3778 8.37779C21.3778 9.016 21.8951 9.53334 22.5333 9.53334C23.1716 9.53334 23.6889 9.016 23.6889 8.37779C23.6882 7.73992 23.1712 7.22292 22.5333 7.22223ZM13 26C12.362 26 11.8448 25.4827 11.8448 24.8445V20.8909C10.04 20.2525 9.09445 18.2715 9.73255 16.4663C10.0815 15.4791 10.8578 14.7026 11.8448 14.3535V1.15556C11.8448 0.517343 12.362 0 13 0C13.638 0 14.1552 0.517343 14.1552 1.15556V14.3536C15.96 14.992 16.9056 16.9729 16.2675 18.7781C15.9185 19.7653 15.1422 20.5419 14.1552 20.891V24.8446C14.1552 25.4828 13.638 26.0001 13 26.0001V26ZM13 16.4667C12.3618 16.4667 11.8444 16.984 11.8444 17.6222C11.8444 18.2605 12.3618 18.7778 13 18.7778C13.6382 18.7778 14.1556 18.2605 14.1556 17.6222C14.1549 16.9844 13.6379 16.4674 13 16.4667ZM3.46666 26C2.82867 26 2.31144 25.4827 2.31144 24.8445V11.6464C0.506696 11.0081 -0.438896 9.02709 0.199202 7.22188C0.54818 6.23469 1.32448 5.45816 2.31144 5.10906V1.15556C2.31144 0.517343 2.82867 0 3.46666 0C4.10464 0 4.62187 0.517343 4.62187 1.15556V5.10918C6.42661 5.74751 7.37221 7.72848 6.73411 9.53369C6.38513 10.5209 5.60883 11.2974 4.62187 11.6465V24.8446C4.62187 25.4828 4.10464 26.0001 3.46666 26.0001V26ZM3.46666 7.22223C2.82844 7.22223 2.3111 7.73957 2.3111 8.37779C2.3111 9.016 2.82844 9.53334 3.46666 9.53334C4.10487 9.53334 4.62221 9.016 4.62221 8.37779C4.62152 7.73992 4.10452 7.22292 3.46666 7.22223Z"
          fill="#A005FE"
        />
      </svg>
    );
  },
);
export const IconArrow = forwardRef(
  ({ className, hoverColor = '#A005FE', color = '#07E993', ...rest }: IconProps, ref) => {
    const [hovered, setHovered] = useState(false);
    useImperativeHandle(ref, () => ({
      setHovered,
    }));
    return (
      <svg
        width="22"
        height="12"
        viewBox="0 0 22 12"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        onMouseOver={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
        className={className}
        {...rest}
      >
        <path
          d="M22 1.4277C21.7955 1.77867 21.6579 2.19277 21.375 2.46761C18.2922 5.48707 15.1903 8.48981 12.0827 11.4888C11.3717 12.1759 10.5059 12.1666 9.8007 11.4833C6.71409 8.48796 3.63321 5.48892 0.552324 2.48803C0.110834 2.05721 -0.131891 1.5484 0.0745201 0.933737C0.254175 0.397067 0.672731 0.103664 1.23081 0.0163852C1.83093 -0.0783211 2.26477 0.252223 2.65466 0.629191C5.09911 3.00242 7.53591 5.38122 9.98036 7.75259C10.29 8.05342 10.6244 8.52324 10.9665 8.53995C11.2647 8.55481 11.603 8.05157 11.905 7.75816C14.3666 5.37936 16.8206 2.99499 19.2784 0.612478C19.697 0.207655 20.1576 -0.102462 20.8036 0.046097C21.5012 0.205798 21.8968 0.677472 22 1.4277Z"
          fill={hovered ? hoverColor : color}
        />
      </svg>
    );
  },
);
export const IconCoin = forwardRef(({ className, iconColor, color, ...rest }: IconProps, ref) => {
  const [hovered, setHovered] = useState(false);
  useImperativeHandle(ref, () => ({
    setHovered,
  }));
  return (
    <svg width="93" height="14" viewBox="0 0 93 14" fill="none" xmlns="http://www.w3.org/2000/svg" {...rest}>
      <path
        d="M15.315 10.8144L12.7735 13.5292C12.6625 13.648 12.5066 13.7165 12.3434 13.7165H0.296122C0.132862 13.7165 0.000784618 13.5849 0.000784618 13.4223C0.000784618 13.3483 0.0292161 13.277 0.0796613 13.2222L2.61844 10.5074C2.72942 10.3886 2.88533 10.3201 3.04859 10.3201H15.0958C15.2582 10.3164 15.3921 10.4452 15.3958 10.607C15.3976 10.6837 15.3682 10.7587 15.315 10.8144ZM12.7735 5.34646C12.6616 5.22767 12.5066 5.16005 12.3434 5.15914H0.296122C0.132862 5.15914 0.000784618 5.29072 0.000784618 5.45337C0.000784618 5.52738 0.0292161 5.59865 0.0796613 5.65348L2.61844 8.37009C2.73034 8.48888 2.88533 8.5565 3.04859 8.55742H15.0958C15.2591 8.55742 15.3903 8.42401 15.3893 8.26136C15.3893 8.18734 15.3609 8.11698 15.3105 8.06307L12.7735 5.34646ZM0.296122 3.39649H12.3434C12.5066 3.39649 12.6625 3.32887 12.7735 3.20917L15.315 0.494383C15.4269 0.376508 15.4214 0.191014 15.3031 0.0795354C15.2894 0.0667427 15.2747 0.0557775 15.2591 0.0457262C15.2105 0.0146583 15.1527 -0.000875669 15.0949 3.8093e-05H3.04768C2.88442 3.8093e-05 2.7285 0.0676565 2.61752 0.187359L0.0787488 2.90214C-0.0322307 3.02185 -0.0248948 3.20734 0.0943394 3.31791C0.149371 3.36816 0.220911 3.39649 0.295204 3.39649H0.296122Z"
        fill="url(#paint0_linear_3277_325)"
      />
      <path
        d="M30.0021 5.80073H23.557V3.68628H31.6768V1.57184H23.535C22.3656 1.56544 21.4117 2.50479 21.4053 3.66983V5.8126C21.4099 6.97765 22.3619 7.91883 23.5313 7.91426C23.5322 7.91426 23.5341 7.91426 23.535 7.91426H29.9883V10.0287H21.5584V12.1431H30.0011C30.8578 12.1477 31.6328 11.6378 31.9648 10.8511C32.0731 10.5952 32.129 10.3211 32.1309 10.0442V7.90146C32.1263 6.73642 31.1742 5.79524 30.0039 5.79981C30.003 5.79981 30.0021 5.79981 30.0011 5.79981L30.0021 5.80073ZM42.4877 1.57184H36.0179C35.1594 1.56544 34.3816 2.07441 34.0487 2.86298C33.9405 3.11884 33.8836 3.39296 33.8827 3.67075V10.0461C33.8845 10.3238 33.9405 10.598 34.0487 10.8538C34.3816 11.6415 35.1594 12.1514 36.0179 12.145H42.4877C43.6571 12.1514 44.611 11.212 44.6174 10.047V3.67075C44.6147 3.11061 44.3881 2.57515 43.9892 2.18223C43.5902 1.7884 43.05 1.5691 42.4877 1.57184ZM42.4721 10.0305H36.0344V3.68628H42.4694L42.4721 10.0305ZM65.1477 1.57184H58.8375C57.6681 1.56544 56.7142 2.50479 56.7078 3.66983V12.1441H58.8586V8.67085H65.1404V12.1441H67.2912V3.67075C67.2857 2.5057 66.3327 1.56544 65.1624 1.57184C65.1569 1.57184 65.1523 1.57184 65.1468 1.57184H65.1477ZM65.1321 6.55732H58.8503V3.6872H65.1321V6.55732ZM90.2667 1.57184H83.9565C82.7871 1.56544 81.8332 2.50479 81.8268 3.66983V12.145H83.9776V8.67177H90.2447V12.145H92.3955V3.67075C92.3928 3.11061 92.1662 2.57515 91.7673 2.18223C91.3683 1.7884 90.828 1.5691 90.2658 1.57184H90.2667ZM90.2456 6.55732H83.9638V3.6872H90.2456V6.55732ZM77.7682 10.0305H76.9079L73.8317 2.45819C73.6161 1.92364 73.0961 1.57275 72.5183 1.57275H70.6096C70.0382 1.57001 69.5209 1.90993 69.2999 2.43534C69.2283 2.6053 69.1907 2.78805 69.1898 2.97355V12.1468H71.3406V3.68628H72.2009L75.2753 11.2586C75.4945 11.7923 76.0164 12.1404 76.5951 12.1386H78.5038C78.8789 12.1404 79.2385 11.9942 79.5045 11.731C79.7705 11.4688 79.9209 11.1115 79.9236 10.7378V1.57184H77.7682V10.0305ZM48.6686 1.57184H46.5178V10.0461C46.5206 10.6071 46.7481 11.1435 47.1489 11.5373C47.5497 11.9312 48.0917 12.1495 48.6549 12.145H55.1082V10.0305H48.6686V1.57184Z"
        fill={color ?? 'white'}
      />
      <defs>
        <linearGradient
          id="paint0_linear_3277_325"
          x1="1.29952"
          y1="14.0436"
          x2="13.8791"
          y2="-0.19106"
          gradientUnits="userSpaceOnUse"
        >
          <stop offset="0.08" stopColor={iconColor ?? '#8D4FF5'} />
          <stop offset="0.3" stopColor={iconColor ?? '#7F58E9'} />
          <stop offset="0.5" stopColor={iconColor ?? '#6395CF'} />
          <stop offset="0.6" stopColor={iconColor ?? '#63B1C6'} />
          <stop offset="0.72" stopColor={iconColor ?? '#6BDBBA'} />
          <stop offset="0.97" stopColor={iconColor ?? '#75F6A2'} />
          {/* <stop offset="0.08" stopColor={iconColor ?? '#8D4FF5'} />
          <stop offset="0.3" stopColor={iconColor ?? '#7F58E9'} />
          <stop offset="0.5" stopColor={iconColor ?? '#6395CF'} />
          <stop offset="0.6" stopColor={iconColor ?? '#63B1C6'} />
          <stop offset="0.72" stopColor={iconColor ?? '#6BDBBA'} />
          <stop offset="0.97" stopColor={iconColor ?? '#75F6A2'} /> */}
        </linearGradient>
      </defs>
    </svg>
  );
});
export const IconMinus = ({ className, color = '#07E993', hoverColor = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="16"
      height="2"
      viewBox="0 0 16 2"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <line
        y1="-1"
        x2="16"
        y2="-1"
        transform="matrix(1 -8.74228e-08 -8.74228e-08 -1 0 0)"
        stroke={hovered ? hoverColor : color}
        strokeWidth="2"
      />
    </svg>
  );
};
export const IconPlus = ({ className, color = '#07E993', hoverColor = '#B53BFF', ...rest }: IconProps) => {
  const [hovered, setHovered] = useState(false);
  return (
    <svg
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      onMouseOver={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
      className={className}
      {...rest}
    >
      <line x1="8.74228e-08" y1="8" x2="16" y2="8" stroke={hovered ? hoverColor : color} strokeWidth="2" />
      <line x1="8" y1="16" x2="8" stroke={hovered ? hoverColor : color} strokeWidth="2" />
    </svg>
  );
};

export const IconSolana = forwardRef(({ className, iconColor, color, ...rest }: IconProps, ref) => {
  const [hovered, setHovered] = useState(false);
  useImperativeHandle(ref, () => ({
    setHovered,
  }));
  return (
    <svg width="16" height="14" viewBox="0 0 16 14" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M15.315 10.8144L12.7735 13.5292C12.6625 13.648 12.5066 13.7165 12.3434 13.7165H0.296122C0.132862 13.7165 0.000784618 13.5849 0.000784618 13.4223C0.000784618 13.3483 0.0292161 13.277 0.0796613 13.2222L2.61844 10.5074C2.72942 10.3886 2.88533 10.3201 3.04859 10.3201H15.0958C15.2582 10.3164 15.3921 10.4452 15.3958 10.607C15.3976 10.6837 15.3682 10.7587 15.315 10.8144ZM12.7735 5.34646C12.6616 5.22767 12.5066 5.16005 12.3434 5.15914H0.296122C0.132862 5.15914 0.000784618 5.29072 0.000784618 5.45337C0.000784618 5.52738 0.0292161 5.59865 0.0796613 5.65348L2.61844 8.37009C2.73034 8.48888 2.88533 8.5565 3.04859 8.55742H15.0958C15.2591 8.55742 15.3903 8.42401 15.3893 8.26136C15.3893 8.18734 15.3609 8.11698 15.3105 8.06307L12.7735 5.34646ZM0.296122 3.39649H12.3434C12.5066 3.39649 12.6625 3.32887 12.7735 3.20917L15.315 0.494383C15.4269 0.376508 15.4214 0.191014 15.3031 0.0795354C15.2894 0.0667427 15.2747 0.0557775 15.2591 0.0457262C15.2105 0.0146583 15.1527 -0.000875669 15.0949 3.8093e-05H3.04768C2.88442 3.8093e-05 2.7285 0.0676565 2.61752 0.187359L0.0787488 2.90214C-0.0322307 3.02185 -0.0248948 3.20734 0.0943394 3.31791C0.149371 3.36816 0.220911 3.39649 0.295204 3.39649H0.296122Z"
        fill="#fff"
      />
    </svg>
  );
});
export const IconTriangle = forwardRef(({ className, iconColor, color = '#131522', ...rest }: IconProps, ref) => {
  const [hovered, setHovered] = useState(false);
  useImperativeHandle(ref, () => ({
    setHovered,
  }));
  return (
    <svg
      width="14"
      height="5"
      viewBox="0 0 14 5"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      {...rest}
    >
      <path d="M7 0L13.9282 4.5H0.0717969L7 0Z" fill={color} />
    </svg>
  );
});
export const IconError = forwardRef(({ className, iconColor, color = '#EF4D61', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0013716 9.74742C0.231449 4.02189 4.77139 -0.0805219 10.1122 0.00119949C16.0992 0.0942361 20.169 4.89568 20.0244 10.2126C19.8685 15.9432 15.3587 20.072 9.94498 19.999C3.83348 19.9161 -0.0841215 15.0153 0.0013716 9.74742ZM12.5047 13.4588C12.672 13.4588 12.8128 13.44 12.9473 13.367C13.552 13.0389 13.6438 12.2883 13.1208 11.749C12.6129 11.2234 12.0911 10.7105 11.5618 10.2063C11.3984 10.0504 11.4134 9.95361 11.5656 9.80776C12.0685 9.32121 12.5601 8.82208 13.0592 8.33049C13.2101 8.18088 13.332 8.01492 13.4074 7.81628C13.6162 7.25932 13.2842 6.69732 12.6971 6.598C12.3124 6.53262 11.9993 6.66841 11.734 6.93243C11.2387 7.42653 10.7396 7.91811 10.258 8.42604C10.0808 8.61212 9.97012 8.62595 9.78405 8.42856C9.29749 7.91057 8.79711 7.40641 8.28666 6.91357C7.66432 6.3126 6.78802 6.52759 6.59189 7.32343C6.49634 7.70941 6.68115 8.01744 6.93763 8.27894C7.4355 8.78562 7.9384 9.28852 8.4501 9.78136C8.61732 9.94229 8.65378 10.0441 8.46016 10.2252C7.95726 10.6954 7.47825 11.1933 6.98666 11.676C6.85842 11.8018 6.75156 11.9413 6.66984 12.101C6.47748 12.4719 6.61452 13.0376 6.95397 13.2803C7.37767 13.5833 7.85542 13.5267 8.28038 13.1055C8.79333 12.5989 9.30252 12.0884 9.80165 11.5679C9.96006 11.4032 10.0657 11.3894 10.2316 11.5629C10.7144 12.0696 11.211 12.5637 11.7064 13.0578C11.9314 13.2828 12.1741 13.4802 12.5035 13.4576L12.5047 13.4588Z"
        fill={color}
      />
    </svg>
  );
});
export const IconWarning = forwardRef(({ className, iconColor, color = '#FFC12E', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconInfo = forwardRef(({ className, iconColor, color = '#04D0EA', ...rest }: IconProps, ref) => {
  return (
    <svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M0.0012091 9.75414C0.233707 3.97813 4.82964 -0.0975081 10.1419 0.00177496C16.1605 0.114882 20.1758 4.94708 20.0338 10.2066C19.8792 15.9235 15.3863 20.0683 9.95591 19.9991C3.85943 19.9225 -0.0792228 15.04 0.0012091 9.75414ZM9.06362 8.11157C9.06362 8.79021 9.05733 9.47011 9.06613 10.1488C9.07367 10.7017 9.31874 11.0788 9.73095 11.2107C10.3644 11.413 10.955 10.9958 10.9739 10.2468C11.0091 8.83671 11.0078 7.42539 10.9751 6.01531C10.9575 5.24367 10.3204 4.81386 9.67566 5.06773C9.20438 5.25372 9.0787 5.6584 9.06739 6.10454C9.05105 6.77313 9.06362 7.44172 9.06362 8.11031V8.11157ZM11.283 13.7921C11.2742 13.0418 10.759 12.5215 10.025 12.5215C9.27978 12.5215 8.74692 13.0644 8.7708 13.8235C8.79467 14.5675 9.28983 15.03 10.025 15.0224C10.8055 15.0136 11.2554 14.5436 11.283 13.7933V13.7921Z"
        fill={color}
      />
    </svg>
  );
});
export const IconSuccess = forwardRef(({ className, iconColor, color = '#36D39D', ...rest }: IconProps, ref) => {
  return (
    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path
        d="M20 9.99887C19.9932 15.4465 15.6471 20 10 20C4.36192 20.0022 0 15.4555 0 10.0011C0 4.55354 4.35291 0 9.99775 0C15.6493 0 19.991 4.55354 19.9977 9.99887H20ZM14.668 7.59824C14.659 6.97894 14.2516 6.58259 13.734 6.58034C13.4459 6.58034 13.2118 6.71771 13.016 6.91364C11.625 8.30762 10.2341 9.70161 8.84763 11.0978C8.77335 11.1722 8.73059 11.1767 8.65631 11.0978C8.12064 10.5529 7.58046 10.0124 7.04479 9.4674C6.92775 9.34805 6.79496 9.24896 6.64866 9.17239C6.26153 8.97196 5.84065 9.08231 5.58632 9.36831C5.2172 9.78043 5.25321 10.3051 5.64483 10.6992C6.44384 11.5032 7.2451 12.3049 8.05087 13.1066C8.47175 13.5255 9.03218 13.5278 9.45307 13.1066C11.0916 11.4717 12.7279 9.83673 14.3597 8.19728C14.5465 8.01036 14.6703 7.7784 14.6703 7.59824H14.668Z"
        fill={color}
      />
    </svg>
  );
});
