const B="6.11.1";function x(t,r,n){const e=r.split("|").map(o=>o.trim());for(let o=0;o<e.length;o++)switch(r){case"any":return;case"bigint":case"boolean":case"number":case"string":if(typeof t===r)return}const i=new Error(`invalid value for type ${r}`);throw i.code="INVALID_ARGUMENT",i.argument=`value.${n}`,i.value=t,i}async function L(t){const r=Object.keys(t);return(await Promise.all(r.map(e=>Promise.resolve(t[e])))).reduce((e,i,o)=>(e[r[o]]=i,e),{})}function d(t,r,n){for(let e in r){let i=r[e];const o=n?n[e]:null;o&&x(i,o,e),Object.defineProperty(t,e,{enumerable:!0,value:i,writable:!1})}}function u(t){if(t==null)return"null";if(Array.isArray(t))return"[ "+t.map(u).join(", ")+" ]";if(t instanceof Uint8Array){const r="0123456789abcdef";let n="0x";for(let e=0;e<t.length;e++)n+=r[t[e]>>4],n+=r[t[e]&15];return n}if(typeof t=="object"&&typeof t.toJSON=="function")return u(t.toJSON());switch(typeof t){case"boolean":case"symbol":return t.toString();case"bigint":return BigInt(t).toString();case"number":return t.toString();case"string":return JSON.stringify(t);case"object":{const r=Object.keys(t);return r.sort(),"{ "+r.map(n=>`${u(n)}: ${u(t[n])}`).join(", ")+" }"}}return"[ COULD NOT SERIALIZE ]"}function R(t,r){return t&&t.code===r}function O(t){return R(t,"CALL_EXCEPTION")}function T(t,r,n){let e=t;{const o=[];if(n){if("message"in n||"code"in n||"name"in n)throw new Error(`value will overwrite populated values: ${u(n)}`);for(const b in n){if(b==="shortMessage")continue;const m=n[b];o.push(b+"="+u(m))}}o.push(`code=${r}`),o.push(`version=${B}`),o.length&&(t+=" ("+o.join(", ")+")")}let i;switch(r){case"INVALID_ARGUMENT":i=new TypeError(t);break;case"NUMERIC_FAULT":case"BUFFER_OVERRUN":i=new RangeError(t);break;default:i=new Error(t)}return d(i,{code:r}),n&&Object.assign(i,n),i.shortMessage==null&&d(i,{shortMessage:e}),i}function f(t,r,n,e){if(!t)throw T(r,n,e)}function c(t,r,n,e){f(t,r,"INVALID_ARGUMENT",{argument:n,value:e})}function S(t,r,n){n==null&&(n=""),n&&(n=": "+n),f(t>=r,"missing arguemnt"+n,"MISSING_ARGUMENT",{count:t,expectedCount:r}),f(t<=r,"too many arguments"+n,"UNEXPECTED_ARGUMENT",{count:t,expectedCount:r})}["NFD","NFC","NFKD","NFKC"].reduce((t,r)=>{try{if("test".normalize(r)!=="test")throw new Error("bad");if(r==="NFD"&&"é".normalize("NFD")!=="é")throw new Error("broken");t.push(r)}catch{}return t},[]);function M(t,r,n){if(n==null&&(n=""),t!==r){let e=n,i="new";n&&(e+=".",i+=" "+n),f(!1,`private constructor; use ${e}from* methods`,"UNSUPPORTED_OPERATION",{operation:i})}}function N(t,r,n){if(t instanceof Uint8Array)return n?new Uint8Array(t):t;if(typeof t=="string"&&t.match(/^0x([0-9a-f][0-9a-f])*$/i)){const e=new Uint8Array((t.length-2)/2);let i=2;for(let o=0;o<e.length;o++)e[o]=parseInt(t.substring(i,i+2),16),i+=2;return e}c(!1,"invalid BytesLike value",r||"value",t)}function g(t,r){return N(t,r,!1)}function P(t,r){return N(t,r,!0)}function I(t,r){return!(typeof t!="string"||!t.match(/^0x[0-9A-Fa-f]*$/)||typeof r=="number"&&t.length!==2+2*r||r===!0&&t.length%2!==0)}function C(t){return I(t,!0)||t instanceof Uint8Array}const E="0123456789abcdef";function h(t){const r=g(t);let n="0x";for(let e=0;e<r.length;e++){const i=r[e];n+=E[(i&240)>>4]+E[i&15]}return n}function _(t){return"0x"+t.map(r=>h(r).substring(2)).join("")}function $(t){return I(t,!0)?(t.length-2)/2:g(t).length}function j(t,r,n){const e=g(t);return n!=null&&n>e.length&&f(!1,"cannot slice beyond data bounds","BUFFER_OVERRUN",{buffer:e,length:e.length,offset:n}),h(e.slice(r??0,n??e.length))}function A(t,r,n){const e=g(t);f(r>=e.length,"padding exceeds data length","BUFFER_OVERRUN",{buffer:new Uint8Array(e),length:r,offset:r+1});const i=new Uint8Array(r);return i.fill(0),n?i.set(e,r-e.length):i.set(e,0),h(i)}function D(t,r){return A(t,r,!0)}function V(t,r){return A(t,r,!1)}const w=BigInt(0),s=BigInt(1),a=9007199254740991;function z(t,r){const n=y(t,"value"),e=BigInt(l(r,"width"));if(f(n>>e===w,"overflow","NUMERIC_FAULT",{operation:"fromTwos",fault:"overflow",value:t}),n>>e-s){const i=(s<<e)-s;return-((~n&i)+s)}return n}function G(t,r){let n=p(t,"value");const e=BigInt(l(r,"width")),i=s<<e-s;if(n<w){n=-n,f(n<=i,"too low","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:t});const o=(s<<e)-s;return(~n&o)+s}else f(n<i,"too high","NUMERIC_FAULT",{operation:"toTwos",fault:"overflow",value:t});return n}function H(t,r){const n=y(t,"value"),e=BigInt(l(r,"bits"));return n&(s<<e)-s}function p(t,r){switch(typeof t){case"bigint":return t;case"number":return c(Number.isInteger(t),"underflow",r||"value",t),c(t>=-a&&t<=a,"overflow",r||"value",t),BigInt(t);case"string":try{if(t==="")throw new Error("empty string");return t[0]==="-"&&t[1]!=="-"?-BigInt(t.substring(1)):BigInt(t)}catch(n){c(!1,`invalid BigNumberish string: ${n.message}`,r||"value",t)}}c(!1,"invalid BigNumberish value",r||"value",t)}function y(t,r){const n=p(t,r);return f(n>=w,"unsigned value cannot be negative","NUMERIC_FAULT",{fault:"overflow",operation:"getUint",value:t}),n}const U="0123456789abcdef";function F(t){if(t instanceof Uint8Array){let r="0x0";for(const n of t)r+=U[n>>4],r+=U[n&15];return BigInt(r)}return p(t)}function l(t,r){switch(typeof t){case"bigint":return c(t>=-a&&t<=a,"overflow",r||"value",t),Number(t);case"number":return c(Number.isInteger(t),"underflow",r||"value",t),c(t>=-a&&t<=a,"overflow",r||"value",t),t;case"string":try{if(t==="")throw new Error("empty string");return l(BigInt(t),r)}catch(n){c(!1,`invalid numeric string: ${n.message}`,r||"value",t)}}c(!1,"invalid numeric value",r||"value",t)}function J(t){return l(F(t))}function X(t,r){let e=y(t,"value").toString(16);if(r==null)e.length%2&&(e="0"+e);else{const i=l(r,"width");for(f(i*2>=e.length,`value exceeds width (${i} bytes)`,"NUMERIC_FAULT",{operation:"toBeHex",fault:"overflow",value:t});e.length<i*2;)e="0"+e}return"0x"+e}function k(t){const r=y(t,"value");if(r===w)return new Uint8Array([]);let n=r.toString(16);n.length%2&&(n="0"+n);const e=new Uint8Array(n.length/2);for(let i=0;i<e.length;i++){const o=i*2;e[i]=parseInt(n.substring(o,o+2),16)}return e}function K(t){let r=h(C(t)?t:k(t)).substring(2);for(;r.startsWith("0");)r=r.substring(1);return r===""&&(r="0"),"0x"+r}export{L as A,O as B,M as a,c as b,f as c,d,p as e,g as f,l as g,z as h,h as i,P as j,J as k,_ as l,H as m,k as n,$ as o,I as p,X as q,j as r,S as s,F as t,R as u,G as v,K as w,T as x,V as y,D as z};
